#l Note: Setting `sudo` to `required` will add 20-50s to CI image boot time
os:
  linux

sudo: false
dist: trusty
language: python

python:
  - "3.4"

before_install:
  - git submodule update --init --recursive

addons:
  apt_packages:
    - lib32bz2-1.0
    - lib32ncurses5
    - lib32z1
    
matrix:
    include:
        - name: "Build and Run Tests"
          env: RUN_BUILD="true" RUN_TESTS="true"
        - name: "Check Formatting"
          env: RUN_FORMATTING_CHECKS="true"  # Test Formatting

before_script:
  # Download the latest ARM GCC Embedded Toolchain.
  # Unfortunately, since this is a literal URL, it does not pull the latest API available, and the URL must be changed manually. 
  # TO CHANGE THE URL:
  # Go to https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads
  # and download the latest GCC ARM-target compiler and then search up the downloads page of your browser.
  # There is usually a web address that's hosting the GCC binary/tar. 
  - wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2 -O /tmp/gcc-arm-none-eabi.tar.bz2
  # Unzip the ARM GCC Embedded Toolchain 
  - tar -xvjf /tmp/gcc-arm-none-eabi.tar.bz2
  # Enable cmake to find the arm-none-eabi-gcc command
  - export PATH=$PATH:$PWD/gcc-arm-none-eabi-7-2018-q2-update/bin/

script:
    - if [ "$RUN_BUILD" = "true" ]; then 
        cd src;
        cmake CMakeLists.txt;
        make; 
        cd ..;
      fi
    - if [ "$RUN_TESTS" = "true" ]; then 
        cd src;
        cmake -DTEST_BUILD=true CMakeLists.txt;
        make;
        ctest -C DEBUG;
        cd ..;
      fi
    - if [ "$RUN_FORMATTING_CHECKS" = "true" ]; then 
            cd clang-format;
            echo -e "Y" | python check_formatting_CI.py;
      fi
