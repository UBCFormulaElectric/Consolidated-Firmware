ARG BASE_VERSION=3
ARG IMAGE_ARCH=arm64
ARG GPU=-vivante

FROM --platform=linux/${IMAGE_ARCH} torizon/qt6-wayland${GPU}:${BASE_VERSION}
ARG IMAGE_ARCH
ARG GPU

# SSH for remote debug
EXPOSE 2231
ARG SSHUSERNAME=torizon

# Make sure we don't get notifications we can't answer during building.
ENV DEBIAN_FRONTEND="noninteractive"

# stick to bookworm on /etc/apt/sources.list.d
RUN sed -i 's/sid/bookworm/g' /etc/apt/sources.list.d/debian.sources && \
    apt-get -q -y update

# for vivante GPU we need some "special" sauce
RUN if [ "${GPU}" = "-vivante" ]; then \
        apt-get -q -y install \
        imx-gpu-viv-wayland-dev \
    ; else \
        apt-get -q -y install \
        libgl1 \
        libgles-dev \
    ; fi

# PYTHON DEPENDENCY MANAGEMENT`
RUN apt-get -q -y update &&  \
    apt-get -q -y install  \
    gcc \
    build-essential \
    python3-dev \
    python3-pip

WORKDIR /setup
COPY ./environment/requirements.txt /setup/requirements.txt
RUN pip3 install -r requirements.txt --break-system-packages

# __deps__
RUN apt-get -q -y install \
    qmake6 \
    git \
    cmake \
    ninja-build \
    gpiod \
    libgpiod-dev \
    qt6-base-private-dev \
    qt6-base-dev \
    qt6-wayland \
    qt6-wayland-dev \
    qt6-declarative-dev \
    qt6-declarative-private-dev \
    qml6-module-qtqml \
    qml6-module-qtqml-workerscript \
    qml6-module-qtcore \
    qml6-module-qtquick \
    qml6-module-qtquick-window \
    qml6-module-qtquick-controls \
    qml6-module-qtquick-layouts \
    qml6-module-qtquick-templates \
    libqt6opengl6-dev \
    libqt6svg6 \
    libqt6svg6-dev \
    libqt6core5compat6 \
    libqt6core5compat6-dev

# cleanup
RUN apt-get clean && apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# make git work
RUN git config --global --add safe.directory '*'

WORKDIR /app