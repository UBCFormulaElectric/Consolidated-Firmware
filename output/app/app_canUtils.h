/**
 * @note This file is auto-generated. Do not modify!
 */
// clang-format off

#pragma once

/* ------------------------------- Includes ------------------------------- */

#include <stdint.h>
#include <stdbool.h>

/* -------------------------------- Macros -------------------------------- */

// Msg IDs
// #define CAN_MSG_BMS_VITALS_ID (100)
#define CAN_MSG_BMS_VITALS_ID (100)
#define CAN_MSG_BMS_ALERTS_CONTEXT_ID (104)
#define CAN_MSG_BMS_IMD_STATUS_ID (105)
#define CAN_MSG_BMS_IMD_DATA_ID (106)
#define CAN_MSG_BMS_CHARGER_ID (107)
#define CAN_MSG_BMS_BRUSA_CONTROLS_ID (1560)
#define CAN_MSG_BMS_OK_STATUSES_ID (111)
#define CAN_MSG_BMS_CONTACTORS_ID (112)
#define CAN_MSG_BMS_CELL_TEMPERATURES_ID (120)
#define CAN_MSG_BMS_VOLTAGE_AND_CHARGE_STATS_ID (121)
#define CAN_MSG_BMS_CELL_STATS_ID (123)
#define CAN_MSG_BMS_TRACTIVE_SYSTEM_ID (130)
#define CAN_MSG_BMS_COMMIT_INFO_ID (140)
#define CAN_MSG_BMS_OWC_SEGMENT0TO2_STATUS_ID (141)
#define CAN_MSG_BMS_OWC_SEGMENT3TO4_STATUS_ID (142)
#define CAN_MSG_BMS_BMS_SHDN_NODE_STATUS_ID (143)
#define CAN_MSG_BMS_WARNINGS_ID (150)
#define CAN_MSG_BMS_FAULTS_ID (151)
#define CAN_MSG_BMS_WARNINGS_COUNTS_ID (152)
#define CAN_MSG_BMS_FAULTS_COUNTS_ID (153)
#define CAN_MSG_VC_VITALS_ID (200)
#define CAN_MSG_VC_LEFT_INVERTER_COMMAND_ID (32)
#define CAN_MSG_VC_INVL_READ_WRITE_PARAM_COMMAND_ID (33)
#define CAN_MSG_VC_RIGHT_INVERTER_COMMAND_ID (82)
#define CAN_MSG_VC_INVR_READ_WRITE_PARAM_COMMAND_ID (83)
#define CAN_MSG_VC_ALERTS_CONTEXT_ID (202)
#define CAN_MSG_VC_ELLIPSE_STATUS_ID (223)
#define CAN_MSG_VC_ELLIPSE_TIME_ID (209)
#define CAN_MSG_VC_ELLIPSE_EULER_ANGLES_ID (222)
#define CAN_MSG_VC_COMMIT_INFO_ID (204)
#define CAN_MSG_VC_POWER_ESTIMATE_ID (211)
#define CAN_MSG_VC_POWER_ESTIMATE_PID_ID (212)
#define CAN_MSG_VC_PID_SLIP_RATIO_ID (213)
#define CAN_MSG_VC_SLIP_RATIOS_ID (214)
#define CAN_MSG_VC_ACTIVE_DIFF_OUTPUTS_ID (215)
#define CAN_MSG_VC_POWER_LIMIT_ID (216)
#define CAN_MSG_VC_VEHICLE_DYNAMICS_ID (226)
#define CAN_MSG_VC_ELLIPSE_EKF_NAV_VELOCITY_ID (218)
#define CAN_MSG_VC_VOLTAGES_ID (219)
#define CAN_MSG_VC_CURRENT_SENSING_ID (220)
#define CAN_MSG_VC_EFUSE_ID (221)
#define CAN_MSG_VC_IMU_LINEAR_ACCELERATION_ID (225)
#define CAN_MSG_VC_COOLANT_PUMP_FLOW_RATE_ID (224)
#define CAN_MSG_VC_VC_SHDN_NODE_STATUS_ID (228)
#define CAN_MSG_VC_GLOBAL_SHDN_NODE_STATUS_ID (229)
#define CAN_MSG_VC_PEDAL_PERCENTAGE_ID (230)
#define CAN_MSG_VC_WARNINGS_ID (205)
#define CAN_MSG_VC_FAULTS_ID (206)
#define CAN_MSG_VC_WARNINGS_COUNTS_ID (207)
#define CAN_MSG_VC_FAULTS_COUNTS_ID (208)


// Msg lengths (in bytes)
#define CAN_MSG_VC_VITALS_BYTES (3)
#define CAN_MSG_VC_LEFT_INVERTER_COMMAND_BYTES (8)
#define CAN_MSG_VC_INVL_READ_WRITE_PARAM_COMMAND_BYTES (6)
#define CAN_MSG_VC_RIGHT_INVERTER_COMMAND_BYTES (8)
#define CAN_MSG_VC_INVR_READ_WRITE_PARAM_COMMAND_BYTES (6)
#define CAN_MSG_VC_ALERTS_CONTEXT_BYTES (5)
#define CAN_MSG_VC_ELLIPSE_STATUS_BYTES (7)
#define CAN_MSG_VC_ELLIPSE_TIME_BYTES (4)
#define CAN_MSG_VC_ELLIPSE_EULER_ANGLES_BYTES (5)
#define CAN_MSG_VC_COMMIT_INFO_BYTES (5)
#define CAN_MSG_VC_POWER_ESTIMATE_BYTES (3)
#define CAN_MSG_VC_POWER_ESTIMATE_PID_BYTES (8)
#define CAN_MSG_VC_PID_SLIP_RATIO_BYTES (8)
#define CAN_MSG_VC_SLIP_RATIOS_BYTES (2)
#define CAN_MSG_VC_ACTIVE_DIFF_OUTPUTS_BYTES (3)
#define CAN_MSG_VC_POWER_LIMIT_BYTES (3)
#define CAN_MSG_VC_VEHICLE_DYNAMICS_BYTES (3)
#define CAN_MSG_VC_ELLIPSE_EKF_NAV_VELOCITY_BYTES (8)
#define CAN_MSG_VC_VOLTAGES_BYTES (5)
#define CAN_MSG_VC_CURRENT_SENSING_BYTES (3)
#define CAN_MSG_VC_EFUSE_BYTES (8)
#define CAN_MSG_VC_IMU_LINEAR_ACCELERATION_BYTES (3)
#define CAN_MSG_VC_COOLANT_PUMP_FLOW_RATE_BYTES (1)
#define CAN_MSG_VC_VC_SHDN_NODE_STATUS_BYTES (1)
#define CAN_MSG_VC_GLOBAL_SHDN_NODE_STATUS_BYTES (1)
#define CAN_MSG_VC_PEDAL_PERCENTAGE_BYTES (1)
#define CAN_MSG_VC_WARNINGS_BYTES (3)
#define CAN_MSG_VC_FAULTS_BYTES (1)
#define CAN_MSG_VC_WARNINGS_COUNTS_BYTES (8)
#define CAN_MSG_VC_FAULTS_COUNTS_BYTES (3)
#define CAN_MSG_BMS_VITALS_BYTES (1)
#define CAN_MSG_BMS_OK_STATUSES_BYTES (1)
#define CAN_MSG_BMS_CELL_TEMPERATURES_BYTES (3)
#define CAN_MSG_BMS_VOLTAGE_AND_CHARGE_STATS_BYTES (7)
#define CAN_MSG_BMS_TRACTIVE_SYSTEM_BYTES (7)
#define CAN_MSG_BMS_BMS_SHDN_NODE_STATUS_BYTES (1)
#define CAN_MSG_BMS_WARNINGS_BYTES (2)
#define CAN_MSG_BMS_FAULTS_BYTES (2)


// Periodic msg cycle times (in MS)
#define CAN_MSG_VC_VITALS_TIME_MS (100)
#define CAN_MSG_VC_LEFT_INVERTER_COMMAND_TIME_MS (10)

#define CAN_MSG_VC_RIGHT_INVERTER_COMMAND_TIME_MS (10)

#define CAN_MSG_VC_ALERTS_CONTEXT_TIME_MS (10)
#define CAN_MSG_VC_ELLIPSE_STATUS_TIME_MS (100)
#define CAN_MSG_VC_ELLIPSE_TIME_TIME_MS (100)
#define CAN_MSG_VC_ELLIPSE_EULER_ANGLES_TIME_MS (1000)
#define CAN_MSG_VC_COMMIT_INFO_TIME_MS (100)
#define CAN_MSG_VC_POWER_ESTIMATE_TIME_MS (1000)
#define CAN_MSG_VC_POWER_ESTIMATE_PID_TIME_MS (1000)
#define CAN_MSG_VC_PID_SLIP_RATIO_TIME_MS (1000)
#define CAN_MSG_VC_SLIP_RATIOS_TIME_MS (1000)
#define CAN_MSG_VC_ACTIVE_DIFF_OUTPUTS_TIME_MS (1000)
#define CAN_MSG_VC_POWER_LIMIT_TIME_MS (10)
#define CAN_MSG_VC_VEHICLE_DYNAMICS_TIME_MS (100)
#define CAN_MSG_VC_ELLIPSE_EKF_NAV_VELOCITY_TIME_MS (100)
#define CAN_MSG_VC_VOLTAGES_TIME_MS (100)
#define CAN_MSG_VC_CURRENT_SENSING_TIME_MS (100)
#define CAN_MSG_VC_EFUSE_TIME_MS (100)
#define CAN_MSG_VC_IMU_LINEAR_ACCELERATION_TIME_MS (100)
#define CAN_MSG_VC_COOLANT_PUMP_FLOW_RATE_TIME_MS (1000)
#define CAN_MSG_VC_VC_SHDN_NODE_STATUS_TIME_MS (100)
#define CAN_MSG_VC_GLOBAL_SHDN_NODE_STATUS_TIME_MS (100)
#define CAN_MSG_VC_PEDAL_PERCENTAGE_TIME_MS (100)
#define CAN_MSG_VC_WARNINGS_TIME_MS (1000)
#define CAN_MSG_VC_FAULTS_TIME_MS (100)
#define CAN_MSG_VC_WARNINGS_COUNTS_TIME_MS (1000)
#define CAN_MSG_VC_FAULTS_COUNTS_TIME_MS (100)
#define CAN_MSG_BMS_VITALS_TIME_MS (100)
#define CAN_MSG_BMS_OK_STATUSES_TIME_MS (100)
#define CAN_MSG_BMS_CELL_TEMPERATURES_TIME_MS (1000)
#define CAN_MSG_BMS_VOLTAGE_AND_CHARGE_STATS_TIME_MS (100)
#define CAN_MSG_BMS_TRACTIVE_SYSTEM_TIME_MS (100)
#define CAN_MSG_BMS_BMS_SHDN_NODE_STATUS_TIME_MS (100)
#define CAN_MSG_BMS_WARNINGS_TIME_MS (1000)
#define CAN_MSG_BMS_FAULTS_TIME_MS (100)


// Signal starting values
#define CANSIG_VC_VITALS_VC_HEARTBEAT_START_VAL (0) 
#define CANSIG_VC_VITALS_VC_STATE_START_VAL (0) 
#define CANSIG_VC_VITALS_VC_BUZZER_ON_START_VAL (0) 
#define CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_START_VAL (0) 
#define CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_START_VAL (0) 

#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_COMMAND_START_VAL (0) // Nm

#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_SPEED_COMMAND_START_VAL (0) // rpm

#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_DIRECTION_COMMAND_START_VAL (0) 
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_START_VAL (0) 
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_DISCHARGE_START_VAL (0) 
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_SPEED_MODE_START_VAL (0) 
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_LIMIT_START_VAL (0) // Nm


#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_PARAMETER_ADDRESS_START_VAL (20) 
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_READ_WRITE_START_VAL (1) 
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_DATA_START_VAL (0) 

#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_COMMAND_START_VAL (0) // Nm

#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_SPEED_COMMAND_START_VAL (0) // rpm

#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_DIRECTION_COMMAND_START_VAL (0) 
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_START_VAL (0) 
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_DISCHARGE_START_VAL (0) 
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_SPEED_MODE_START_VAL (0) 
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_LIMIT_START_VAL (0) // Nm


#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_PARAMETER_ADDRESS_START_VAL (20) 
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_READ_WRITE_START_VAL (1) 
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_DATA_START_VAL (0) 

#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_START_VAL (0) 
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_TASK_NAME_START_VAL (0) 
#define CANSIG_VC_ALERTS_CONTEXT_VC_TX_OVERFLOW_COUNT_START_VAL (0) 
#define CANSIG_VC_ALERTS_CONTEXT_VC_RX_OVERFLOW_COUNT_START_VAL (0) 

#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_GENERAL_STATUS_BITMASK_START_VAL (0) 
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_COM_STATUS_BITMASK_START_VAL (0) 
#define CANSIG_VC_ELLIPSE_STATUS_VC_EKF_SOLUTION_MODE_START_VAL (0) 

#define CANSIG_VC_ELLIPSE_TIME_VC_ELLIPSE_TIMESTAMP_START_VAL (0) // us


#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_ROLL_START_VAL (-180) // deg

#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_PITCH_START_VAL (-180) // deg

#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_YAW_START_VAL (-180) // deg


#define CANSIG_VC_COMMIT_INFO_VC_HASH_START_VAL (0) 
#define CANSIG_VC_COMMIT_INFO_VC_CLEAN_START_VAL (0) 

#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_VALUE_START_VAL (0) 
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_MEASURED_VALUE_START_VAL (0) 

#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_OUTPUT_START_VAL (-1) 
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_ERROR_START_VAL (-80) 
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_DERIVATIVE_START_VAL (-160) 
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_INTEGRAL_START_VAL (-21474836) 

#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_OUTPUT_START_VAL (-1) 
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_ERROR_START_VAL (-80) 
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_DERIVATIVE_START_VAL (-160) 
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_INTEGRAL_START_VAL (-21474836) 

#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_LEFT_START_VAL (-1) 
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_RIGHT_START_VAL (-1) 

#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_LEFT_START_VAL (0) 
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_RIGHT_START_VAL (0) 

#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_START_VAL (0) 
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_AT_FULL_THROTTLE_START_VAL (0) 

#define CANSIG_VC_VEHICLE_DYNAMICS_VC_REGEN_ENABLED_START_VAL (0) 
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_TORQUE_VECTORING_ENABLED_START_VAL (0) 
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_VEHICLE_VELOCITY_START_VAL (-150) // km/h


#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_START_VAL (-35) // m/s

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_ACCURACY_START_VAL (0) // m/s

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_START_VAL (-35) // m/s

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_ACCURACY_START_VAL (0) // m/s

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_START_VAL (-35) // m/s

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_ACCURACY_START_VAL (0) // m/s


#define CANSIG_VC_VOLTAGES_VC_BAT_VOLTAGE_START_VAL (0) // V

#define CANSIG_VC_VOLTAGES_VC_BOOST_VOLTAGE_START_VAL (0) // V

#define CANSIG_VC_VOLTAGES_VC_ACC_VOLTAGE_START_VAL (0) // V


#define CANSIG_VC_CURRENT_SENSING_VC_ACC_CURRENT_START_VAL (0) // A

#define CANSIG_VC_CURRENT_SENSING_VC_BAT_CURRENT_START_VAL (0) // A


#define CANSIG_VC_EFUSE_VC_SHDN_CURRENT_START_VAL (0) // A

#define CANSIG_VC_EFUSE_VC_SHDN_STATUS_START_VAL (0) 
#define CANSIG_VC_EFUSE_VC_LV_CURRENT_START_VAL (0) // A

#define CANSIG_VC_EFUSE_VC_LV_STATUS_START_VAL (0) 
#define CANSIG_VC_EFUSE_VC_PUMP_CURRENT_START_VAL (0) // A

#define CANSIG_VC_EFUSE_VC_PUMP_STATUS_START_VAL (0) 
#define CANSIG_VC_EFUSE_VC_AUX_CURRENT_START_VAL (0) // A

#define CANSIG_VC_EFUSE_VC_AUX_STATUS_START_VAL (0) 
#define CANSIG_VC_EFUSE_VC_INV_R_CURRENT_START_VAL (0) // A

#define CANSIG_VC_EFUSE_VC_INV_R_STATUS_START_VAL (0) 
#define CANSIG_VC_EFUSE_VC_INV_L_CURRENT_START_VAL (0) // A

#define CANSIG_VC_EFUSE_VC_INV_L_STATUS_START_VAL (0) 

#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_X_START_VAL (0) // m/s

#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Y_START_VAL (0) // m/s

#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Z_START_VAL (0) // m/s


#define CANSIG_VC_COOLANT_PUMP_FLOW_RATE_VC_FLOW_RATE_START_VAL (0) // L/H


#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_LE_STOP_OK_STATUS_START_VAL (0) 
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_RE_STOP_OK_STATUS_START_VAL (0) 
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_TSMSOK_STATUS_START_VAL (0) 
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_SPLITTER_BOX_INTERLOCK_OK_STATUS_START_VAL (0) 

#define CANSIG_VC_GLOBAL_SHDN_NODE_STATUS_VC_FIRST_FAULT_NODE_START_VAL (0) 

#define CANSIG_VC_PEDAL_PERCENTAGE_VC_MAPPED_PEDAL_PERCENTAGE_START_VAL (-1) // %


#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_WATCHDOG_TIMEOUT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_TX_OVERFLOW_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_RX_OVERFLOW_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_REGEN_NOT_AVAILABLE_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_IMU_INIT_FAILED_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_LV_CHARGE_FAULT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_BOOST_CONTROLLER_FAULT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_ERRORED_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_VC_WARNING_SBG_INIT_FAILED_START_VAL (0) 

#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_BMS_HEARTBEAT_START_VAL (0) 
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_FSM_HEARTBEAT_START_VAL (0) 
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_RSM_HEARTBEAT_START_VAL (0) 
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_START_VAL (0) 
#define CANSIG_VC_FAULTS_VC_FAULT_LEFT_INVERTER_FAULT_START_VAL (0) 
#define CANSIG_VC_FAULTS_VC_FAULT_RIGHT_INVERTER_FAULT_START_VAL (0) 

#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_WATCHDOG_TIMEOUT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_TX_OVERFLOW_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_RX_OVERFLOW_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_REGEN_NOT_AVAILABLE_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_IMU_INIT_FAILED_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_LV_CHARGE_FAULT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BOOST_CONTROLLER_FAULT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_ERRORED_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_COUNT_START_VAL (0) 
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_SBG_INIT_FAILED_COUNT_START_VAL (0) 

#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_BMS_HEARTBEAT_COUNT_START_VAL (0) 
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_FSM_HEARTBEAT_COUNT_START_VAL (0) 
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_RSM_HEARTBEAT_COUNT_START_VAL (0) 
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_COUNT_START_VAL (0) 
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_LEFT_INVERTER_FAULT_COUNT_START_VAL (0) 
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_RIGHT_INVERTER_FAULT_COUNT_START_VAL (0) 

#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_START_VAL (0) 
#define CANSIG_BMS_VITALS_BMS_STATE_START_VAL (0) 

#define CANSIG_BMS_OK_STATUSES_BMS_BMS_OK_START_VAL (0) 
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_OK_START_VAL (0) 
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_OK_START_VAL (0) 
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_LATCHED_FAULT_START_VAL (0) 
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_LATCHED_FAULT_START_VAL (0) 
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_LATCHED_FAULT_START_VAL (0) 

#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MIN_CELL_TEMPERATURE_START_VAL (0) // degC

#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MAX_CELL_TEMPERATURE_START_VAL (0) // degC


#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_PACK_VOLTAGE_START_VAL (0) // V

#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_START_VAL (0) // %

#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_CORRUPT_START_VAL (0) 
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MIN_CELL_VOLTAGE_START_VAL (0) // V

#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MAX_CELL_VOLTAGE_START_VAL (0) // V


#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_VOLTAGE_START_VAL (0) // V

#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_CURRENT_START_VAL (-300) // A

#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_POWER_START_VAL (-100) // kW

#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_AVAILABLE_POWER_START_VAL (0) // W

#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_BSPD_CURRENT_THRESHOLD_EXCEEDED_START_VAL (0) 

#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_HVD_SHDN_OK_STATUS_START_VAL (0) 
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_TS_ILCK_OK_STATUS_START_VAL (0) 

#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_WATCHDOG_TIMEOUT_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_TX_OVERFLOW_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_RX_OVERFLOW_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_FAULT_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT0_GND_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT1_GND_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT2_GND_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT3_GND_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT4_GND_START_VAL (0) 
#define CANSIG_BMS_WARNINGS_BMS_WARNING_MISSING_VC_HEARTBEAT_START_VAL (0) 

#define CANSIG_BMS_FAULTS_BMS_FAULT_STATE_MACHINE_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERVOLTAGE_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERVOLTAGE_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_MODULE_COMMUNICATION_ERROR_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERTEMP_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERTEMP_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_REPORTED_ERROR_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_DISCONNECTED_DURING_CHARGE_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_SHUTDOWN_LOOP_OPEN_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_TRACTIVE_SYSTEM_OVERCURRENT_START_VAL (0) 
#define CANSIG_BMS_FAULTS_BMS_FAULT_PRECHARGE_FAILURE_START_VAL (0) 


// Scale/offset values for encoding/decoding signals
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_SCALE (1)
#define CANSIG_VC_VITALS_VC_HEARTBEAT_SCALE (1)
#define CANSIG_VC_VITALS_VC_HEARTBEAT_OFFSET (0)
#define CANSIG_VC_VITALS_VC_STATE_SCALE (1)
#define CANSIG_VC_VITALS_VC_STATE_OFFSET (0)
#define CANSIG_VC_VITALS_VC_BUZZER_ON_SCALE (1)
#define CANSIG_VC_VITALS_VC_BUZZER_ON_OFFSET (0)
#define CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_SCALE (1)
#define CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_OFFSET (0)
#define CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_SCALE (1)
#define CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_OFFSET (0)

#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_COMMAND_SCALE (0.1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_COMMAND_OFFSET (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_SPEED_COMMAND_SCALE (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_SPEED_COMMAND_OFFSET (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_DIRECTION_COMMAND_SCALE (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_DIRECTION_COMMAND_OFFSET (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_SCALE (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_OFFSET (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_DISCHARGE_SCALE (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_DISCHARGE_OFFSET (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_SPEED_MODE_SCALE (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_SPEED_MODE_OFFSET (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_LIMIT_SCALE (0.1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_LIMIT_OFFSET (0)

#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_PARAMETER_ADDRESS_SCALE (1)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_PARAMETER_ADDRESS_OFFSET (0)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_READ_WRITE_SCALE (1)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_READ_WRITE_OFFSET (0)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_DATA_SCALE (1)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_DATA_OFFSET (0)

#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_COMMAND_SCALE (0.1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_COMMAND_OFFSET (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_SPEED_COMMAND_SCALE (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_SPEED_COMMAND_OFFSET (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_DIRECTION_COMMAND_SCALE (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_DIRECTION_COMMAND_OFFSET (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_SCALE (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_OFFSET (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_DISCHARGE_SCALE (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_DISCHARGE_OFFSET (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_SPEED_MODE_SCALE (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_SPEED_MODE_OFFSET (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_LIMIT_SCALE (0.1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_LIMIT_OFFSET (0)

#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_PARAMETER_ADDRESS_SCALE (1)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_PARAMETER_ADDRESS_OFFSET (0)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_READ_WRITE_SCALE (1)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_READ_WRITE_OFFSET (0)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_DATA_SCALE (1)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_DATA_OFFSET (0)

#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_SCALE (1)
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_OFFSET (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_TASK_NAME_SCALE (1)
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_TASK_NAME_OFFSET (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_TX_OVERFLOW_COUNT_SCALE (1)
#define CANSIG_VC_ALERTS_CONTEXT_VC_TX_OVERFLOW_COUNT_OFFSET (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_RX_OVERFLOW_COUNT_SCALE (1)
#define CANSIG_VC_ALERTS_CONTEXT_VC_RX_OVERFLOW_COUNT_OFFSET (0)

#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_GENERAL_STATUS_BITMASK_SCALE (1)
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_GENERAL_STATUS_BITMASK_OFFSET (0)
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_COM_STATUS_BITMASK_SCALE (1)
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_COM_STATUS_BITMASK_OFFSET (0)
#define CANSIG_VC_ELLIPSE_STATUS_VC_EKF_SOLUTION_MODE_SCALE (1)
#define CANSIG_VC_ELLIPSE_STATUS_VC_EKF_SOLUTION_MODE_OFFSET (0)

#define CANSIG_VC_ELLIPSE_TIME_VC_ELLIPSE_TIMESTAMP_SCALE (1)
#define CANSIG_VC_ELLIPSE_TIME_VC_ELLIPSE_TIMESTAMP_OFFSET (0)

#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_ROLL_SCALE (0.1)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_ROLL_OFFSET (-180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_PITCH_SCALE (0.1)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_PITCH_OFFSET (-180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_YAW_SCALE (0.1)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_YAW_OFFSET (-180)

#define CANSIG_VC_COMMIT_INFO_VC_HASH_SCALE (1)
#define CANSIG_VC_COMMIT_INFO_VC_HASH_OFFSET (0)
#define CANSIG_VC_COMMIT_INFO_VC_CLEAN_SCALE (1)
#define CANSIG_VC_COMMIT_INFO_VC_CLEAN_OFFSET (0)

#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_VALUE_SCALE (0.1)
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_VALUE_OFFSET (0)
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_MEASURED_VALUE_SCALE (0.1)
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_MEASURED_VALUE_OFFSET (0)

#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_OUTPUT_SCALE (0.01)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_OUTPUT_OFFSET (0)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_ERROR_SCALE (0.1)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_ERROR_OFFSET (0)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_DERIVATIVE_SCALE (0.1)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_DERIVATIVE_OFFSET (0)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_INTEGRAL_SCALE (0.1)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_INTEGRAL_OFFSET (0)

#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_OUTPUT_SCALE (0.01)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_OUTPUT_OFFSET (0)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_ERROR_SCALE (0.1)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_ERROR_OFFSET (0)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_DERIVATIVE_SCALE (0.1)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_DERIVATIVE_OFFSET (0)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_INTEGRAL_SCALE (0.1)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_INTEGRAL_OFFSET (0)

#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_LEFT_SCALE (0.01)
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_LEFT_OFFSET (0)
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_RIGHT_SCALE (0.01)
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_RIGHT_OFFSET (0)

#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_LEFT_SCALE (0.1)
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_LEFT_OFFSET (0)
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_RIGHT_SCALE (0.1)
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_RIGHT_OFFSET (0)

#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_SCALE (0.1)
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_OFFSET (0)
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_AT_FULL_THROTTLE_SCALE (0.1)
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_AT_FULL_THROTTLE_OFFSET (0)

#define CANSIG_VC_VEHICLE_DYNAMICS_VC_REGEN_ENABLED_SCALE (1)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_REGEN_ENABLED_OFFSET (0)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_TORQUE_VECTORING_ENABLED_SCALE (1)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_TORQUE_VECTORING_ENABLED_OFFSET (0)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_VEHICLE_VELOCITY_SCALE (0.01)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_VEHICLE_VELOCITY_OFFSET (-150)

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_SCALE (0.05)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_OFFSET (-35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_ACCURACY_SCALE (0.1)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_ACCURACY_OFFSET (0)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_SCALE (0.05)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_OFFSET (-35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_ACCURACY_SCALE (0.1)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_ACCURACY_OFFSET (0)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_SCALE (0.05)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_OFFSET (-35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_ACCURACY_SCALE (0.1)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_ACCURACY_OFFSET (0)

#define CANSIG_VC_VOLTAGES_VC_BAT_VOLTAGE_SCALE (0.01)
#define CANSIG_VC_VOLTAGES_VC_BAT_VOLTAGE_OFFSET (0)
#define CANSIG_VC_VOLTAGES_VC_BOOST_VOLTAGE_SCALE (0.01)
#define CANSIG_VC_VOLTAGES_VC_BOOST_VOLTAGE_OFFSET (0)
#define CANSIG_VC_VOLTAGES_VC_ACC_VOLTAGE_SCALE (0.01)
#define CANSIG_VC_VOLTAGES_VC_ACC_VOLTAGE_OFFSET (0)

#define CANSIG_VC_CURRENT_SENSING_VC_ACC_CURRENT_SCALE (0.01)
#define CANSIG_VC_CURRENT_SENSING_VC_ACC_CURRENT_OFFSET (0)
#define CANSIG_VC_CURRENT_SENSING_VC_BAT_CURRENT_SCALE (0.01)
#define CANSIG_VC_CURRENT_SENSING_VC_BAT_CURRENT_OFFSET (0)

#define CANSIG_VC_EFUSE_VC_SHDN_CURRENT_SCALE (0.01)
#define CANSIG_VC_EFUSE_VC_SHDN_CURRENT_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_SHDN_STATUS_SCALE (1)
#define CANSIG_VC_EFUSE_VC_SHDN_STATUS_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_LV_CURRENT_SCALE (0.01)
#define CANSIG_VC_EFUSE_VC_LV_CURRENT_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_LV_STATUS_SCALE (1)
#define CANSIG_VC_EFUSE_VC_LV_STATUS_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_PUMP_CURRENT_SCALE (0.01)
#define CANSIG_VC_EFUSE_VC_PUMP_CURRENT_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_PUMP_STATUS_SCALE (1)
#define CANSIG_VC_EFUSE_VC_PUMP_STATUS_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_AUX_CURRENT_SCALE (0.01)
#define CANSIG_VC_EFUSE_VC_AUX_CURRENT_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_AUX_STATUS_SCALE (1)
#define CANSIG_VC_EFUSE_VC_AUX_STATUS_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_INV_R_CURRENT_SCALE (0.01)
#define CANSIG_VC_EFUSE_VC_INV_R_CURRENT_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_INV_R_STATUS_SCALE (1)
#define CANSIG_VC_EFUSE_VC_INV_R_STATUS_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_INV_L_CURRENT_SCALE (0.01)
#define CANSIG_VC_EFUSE_VC_INV_L_CURRENT_OFFSET (0)
#define CANSIG_VC_EFUSE_VC_INV_L_STATUS_SCALE (1)
#define CANSIG_VC_EFUSE_VC_INV_L_STATUS_OFFSET (0)

#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_X_SCALE (0.1)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_X_OFFSET (0)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Y_SCALE (0.1)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Y_OFFSET (0)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Z_SCALE (0.1)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Z_OFFSET (0)

#define CANSIG_VC_COOLANT_PUMP_FLOW_RATE_VC_FLOW_RATE_SCALE (15.625)
#define CANSIG_VC_COOLANT_PUMP_FLOW_RATE_VC_FLOW_RATE_OFFSET (0)

#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_LE_STOP_OK_STATUS_SCALE (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_LE_STOP_OK_STATUS_OFFSET (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_RE_STOP_OK_STATUS_SCALE (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_RE_STOP_OK_STATUS_OFFSET (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_TSMSOK_STATUS_SCALE (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_TSMSOK_STATUS_OFFSET (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_SPLITTER_BOX_INTERLOCK_OK_STATUS_SCALE (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_SPLITTER_BOX_INTERLOCK_OK_STATUS_OFFSET (0)

#define CANSIG_VC_GLOBAL_SHDN_NODE_STATUS_VC_FIRST_FAULT_NODE_SCALE (1)
#define CANSIG_VC_GLOBAL_SHDN_NODE_STATUS_VC_FIRST_FAULT_NODE_OFFSET (0)

#define CANSIG_VC_PEDAL_PERCENTAGE_VC_MAPPED_PEDAL_PERCENTAGE_SCALE (0.01)
#define CANSIG_VC_PEDAL_PERCENTAGE_VC_MAPPED_PEDAL_PERCENTAGE_OFFSET (-1)

#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_WATCHDOG_TIMEOUT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_WATCHDOG_TIMEOUT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_TX_OVERFLOW_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_TX_OVERFLOW_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_RX_OVERFLOW_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_RX_OVERFLOW_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_REGEN_NOT_AVAILABLE_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_REGEN_NOT_AVAILABLE_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_IMU_INIT_FAILED_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_IMU_INIT_FAILED_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_LV_CHARGE_FAULT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_LV_CHARGE_FAULT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_BOOST_CONTROLLER_FAULT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_BOOST_CONTROLLER_FAULT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_ERRORED_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_ERRORED_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_OFFSET (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_SBG_INIT_FAILED_SCALE (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_SBG_INIT_FAILED_OFFSET (0)

#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_BMS_HEARTBEAT_SCALE (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_BMS_HEARTBEAT_OFFSET (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_FSM_HEARTBEAT_SCALE (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_FSM_HEARTBEAT_OFFSET (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_RSM_HEARTBEAT_SCALE (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_RSM_HEARTBEAT_OFFSET (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_SCALE (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_OFFSET (0)
#define CANSIG_VC_FAULTS_VC_FAULT_LEFT_INVERTER_FAULT_SCALE (1)
#define CANSIG_VC_FAULTS_VC_FAULT_LEFT_INVERTER_FAULT_OFFSET (0)
#define CANSIG_VC_FAULTS_VC_FAULT_RIGHT_INVERTER_FAULT_SCALE (1)
#define CANSIG_VC_FAULTS_VC_FAULT_RIGHT_INVERTER_FAULT_OFFSET (0)

#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_WATCHDOG_TIMEOUT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_WATCHDOG_TIMEOUT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_TX_OVERFLOW_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_TX_OVERFLOW_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_RX_OVERFLOW_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_RX_OVERFLOW_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_REGEN_NOT_AVAILABLE_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_REGEN_NOT_AVAILABLE_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_IMU_INIT_FAILED_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_IMU_INIT_FAILED_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_LV_CHARGE_FAULT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_LV_CHARGE_FAULT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BOOST_CONTROLLER_FAULT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BOOST_CONTROLLER_FAULT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_ERRORED_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_ERRORED_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_COUNT_OFFSET (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_SBG_INIT_FAILED_COUNT_SCALE (1)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_SBG_INIT_FAILED_COUNT_OFFSET (0)

#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_BMS_HEARTBEAT_COUNT_SCALE (1)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_BMS_HEARTBEAT_COUNT_OFFSET (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_FSM_HEARTBEAT_COUNT_SCALE (1)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_FSM_HEARTBEAT_COUNT_OFFSET (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_RSM_HEARTBEAT_COUNT_SCALE (1)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_RSM_HEARTBEAT_COUNT_OFFSET (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_COUNT_SCALE (1)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_COUNT_OFFSET (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_LEFT_INVERTER_FAULT_COUNT_SCALE (1)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_LEFT_INVERTER_FAULT_COUNT_OFFSET (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_RIGHT_INVERTER_FAULT_COUNT_SCALE (1)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_RIGHT_INVERTER_FAULT_COUNT_OFFSET (0)

#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_SCALE (1)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_OFFSET (0)
#define CANSIG_BMS_VITALS_BMS_STATE_SCALE (1)
#define CANSIG_BMS_VITALS_BMS_STATE_OFFSET (0)

#define CANSIG_BMS_OK_STATUSES_BMS_BMS_OK_SCALE (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_OK_OFFSET (0)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_OK_SCALE (1)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_OK_OFFSET (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_OK_SCALE (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_OK_OFFSET (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_LATCHED_FAULT_SCALE (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_LATCHED_FAULT_OFFSET (0)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_LATCHED_FAULT_SCALE (1)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_LATCHED_FAULT_OFFSET (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_LATCHED_FAULT_SCALE (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_LATCHED_FAULT_OFFSET (0)

#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MIN_CELL_TEMPERATURE_SCALE (0.1)
#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MIN_CELL_TEMPERATURE_OFFSET (0)
#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MAX_CELL_TEMPERATURE_SCALE (0.1)
#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MAX_CELL_TEMPERATURE_OFFSET (0)

#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_PACK_VOLTAGE_SCALE (0.01)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_PACK_VOLTAGE_OFFSET (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_SCALE (0.1)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_OFFSET (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_CORRUPT_SCALE (1)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_CORRUPT_OFFSET (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MIN_CELL_VOLTAGE_SCALE (0.001)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MIN_CELL_VOLTAGE_OFFSET (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MAX_CELL_VOLTAGE_SCALE (0.001)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MAX_CELL_VOLTAGE_OFFSET (0)

#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_VOLTAGE_SCALE (0.1)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_VOLTAGE_OFFSET (0)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_CURRENT_SCALE (0.1)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_CURRENT_OFFSET (-300)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_POWER_SCALE (0.1)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_POWER_OFFSET (-100)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_AVAILABLE_POWER_SCALE (1)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_AVAILABLE_POWER_OFFSET (0)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_BSPD_CURRENT_THRESHOLD_EXCEEDED_SCALE (1)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_BSPD_CURRENT_THRESHOLD_EXCEEDED_OFFSET (0)

#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_HVD_SHDN_OK_STATUS_SCALE (1)
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_HVD_SHDN_OK_STATUS_OFFSET (0)
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_TS_ILCK_OK_STATUS_SCALE (1)
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_TS_ILCK_OK_STATUS_OFFSET (0)

#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_WATCHDOG_TIMEOUT_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_WATCHDOG_TIMEOUT_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_TX_OVERFLOW_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_TX_OVERFLOW_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_RX_OVERFLOW_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_RX_OVERFLOW_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_FAULT_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_FAULT_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT0_GND_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT0_GND_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT1_GND_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT1_GND_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT2_GND_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT2_GND_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT3_GND_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT3_GND_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT4_GND_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT4_GND_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_MISSING_VC_HEARTBEAT_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_MISSING_VC_HEARTBEAT_OFFSET (0)

#define CANSIG_BMS_FAULTS_BMS_FAULT_STATE_MACHINE_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_STATE_MACHINE_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERVOLTAGE_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERVOLTAGE_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERVOLTAGE_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERVOLTAGE_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_MODULE_COMMUNICATION_ERROR_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_MODULE_COMMUNICATION_ERROR_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERTEMP_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERTEMP_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERTEMP_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERTEMP_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_REPORTED_ERROR_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_REPORTED_ERROR_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_DISCONNECTED_DURING_CHARGE_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_DISCONNECTED_DURING_CHARGE_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_SHUTDOWN_LOOP_OPEN_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_SHUTDOWN_LOOP_OPEN_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_TRACTIVE_SYSTEM_OVERCURRENT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_TRACTIVE_SYSTEM_OVERCURRENT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_PRECHARGE_FAILURE_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_PRECHARGE_FAILURE_OFFSET (0)




// Min/max allowed values for signals
// #define CANSIG_BMS_VITALS_BMS_HEARTBEAT_MIN (0)
#define CANSIG_VC_VITALS_VC_HEARTBEAT_MIN (0)
#define CANSIG_VC_VITALS_VC_HEARTBEAT_MAX (1)
#define CANSIG_VC_VITALS_VC_STATE_MIN (0)
#define CANSIG_VC_VITALS_VC_STATE_MAX (2)
#define CANSIG_VC_VITALS_VC_BUZZER_ON_MIN (0)
#define CANSIG_VC_VITALS_VC_BUZZER_ON_MAX (1)
#define CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_MIN (0)
#define CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_MAX (1000)
#define CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_MIN (0)
#define CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_MAX (10)

#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_COMMAND_MIN (-3276.8)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_COMMAND_MAX (3276.7)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_SPEED_COMMAND_MIN (-32768)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_SPEED_COMMAND_MAX (32767)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_DIRECTION_COMMAND_MIN (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_DIRECTION_COMMAND_MAX (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_MIN (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_MAX (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_DISCHARGE_MIN (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_DISCHARGE_MAX (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_SPEED_MODE_MIN (0)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_ENABLE_SPEED_MODE_MAX (1)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_LIMIT_MIN (-3276.8)
#define CANSIG_VC_LEFT_INVERTER_COMMAND_VC_LEFT_INVERTER_TORQUE_LIMIT_MAX (3276.7)

#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_PARAMETER_ADDRESS_MIN (0)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_PARAMETER_ADDRESS_MAX (65535)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_READ_WRITE_MIN (0)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_READ_WRITE_MAX (1)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_DATA_MIN (0)
#define CANSIG_VC_INVL_READ_WRITE_PARAM_COMMAND_VC_INVL_COMMAND_DATA_MAX (65535)

#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_COMMAND_MIN (-3276.8)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_COMMAND_MAX (3276.7)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_SPEED_COMMAND_MIN (-32768)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_SPEED_COMMAND_MAX (32767)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_DIRECTION_COMMAND_MIN (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_DIRECTION_COMMAND_MAX (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_MIN (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_MAX (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_DISCHARGE_MIN (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_DISCHARGE_MAX (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_SPEED_MODE_MIN (0)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_ENABLE_SPEED_MODE_MAX (1)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_LIMIT_MIN (-3276.8)
#define CANSIG_VC_RIGHT_INVERTER_COMMAND_VC_RIGHT_INVERTER_TORQUE_LIMIT_MAX (3276.7)

#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_PARAMETER_ADDRESS_MIN (0)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_PARAMETER_ADDRESS_MAX (65535)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_READ_WRITE_MIN (0)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_READ_WRITE_MAX (1)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_DATA_MIN (0)
#define CANSIG_VC_INVR_READ_WRITE_PARAM_COMMAND_VC_INVR_COMMAND_DATA_MAX (65535)

#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_MIN (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_MAX (1)
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_TASK_NAME_MIN (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_WATCHDOG_TIMEOUT_TASK_NAME_MAX (4)
#define CANSIG_VC_ALERTS_CONTEXT_VC_TX_OVERFLOW_COUNT_MIN (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_TX_OVERFLOW_COUNT_MAX (65535)
#define CANSIG_VC_ALERTS_CONTEXT_VC_RX_OVERFLOW_COUNT_MIN (0)
#define CANSIG_VC_ALERTS_CONTEXT_VC_RX_OVERFLOW_COUNT_MAX (65535)

#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_GENERAL_STATUS_BITMASK_MIN (0)
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_GENERAL_STATUS_BITMASK_MAX (65535)
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_COM_STATUS_BITMASK_MIN (0)
#define CANSIG_VC_ELLIPSE_STATUS_VC_ELLIPSE_COM_STATUS_BITMASK_MAX (4294967295)
#define CANSIG_VC_ELLIPSE_STATUS_VC_EKF_SOLUTION_MODE_MIN (0)
#define CANSIG_VC_ELLIPSE_STATUS_VC_EKF_SOLUTION_MODE_MAX (4)

#define CANSIG_VC_ELLIPSE_TIME_VC_ELLIPSE_TIMESTAMP_MIN (0)
#define CANSIG_VC_ELLIPSE_TIME_VC_ELLIPSE_TIMESTAMP_MAX (4294967295)

#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_ROLL_MIN (-180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_ROLL_MAX (180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_PITCH_MIN (-180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_PITCH_MAX (180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_YAW_MIN (-180)
#define CANSIG_VC_ELLIPSE_EULER_ANGLES_VC_EULER_ANGLES_YAW_MAX (180)

#define CANSIG_VC_COMMIT_INFO_VC_HASH_MIN (0)
#define CANSIG_VC_COMMIT_INFO_VC_HASH_MAX (4294967295)
#define CANSIG_VC_COMMIT_INFO_VC_CLEAN_MIN (0)
#define CANSIG_VC_COMMIT_INFO_VC_CLEAN_MAX (1)

#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_VALUE_MIN (0)
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_VALUE_MAX (120)
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_MEASURED_VALUE_MIN (0)
#define CANSIG_VC_POWER_ESTIMATE_VC_POWER_ESTIMATE_MEASURED_VALUE_MAX (120)

#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_OUTPUT_MIN (-1)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_OUTPUT_MAX (1)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_ERROR_MIN (-80)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_ERROR_MAX (80)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_DERIVATIVE_MIN (-160)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_DERIVATIVE_MAX (160)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_INTEGRAL_MIN (-21474836)
#define CANSIG_VC_POWER_ESTIMATE_PID_VC_PID_POWER_ESTIMATE_INTEGRAL_MAX (21474836)

#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_OUTPUT_MIN (-1)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_OUTPUT_MAX (1)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_ERROR_MIN (-80)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_ERROR_MAX (80)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_DERIVATIVE_MIN (-160)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_DERIVATIVE_MAX (160)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_INTEGRAL_MIN (-21474836)
#define CANSIG_VC_PID_SLIP_RATIO_VC_PID_SLIP_RATIO_INTEGRAL_MAX (21474836)

#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_LEFT_MIN (-1)
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_LEFT_MAX (1)
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_RIGHT_MIN (-1)
#define CANSIG_VC_SLIP_RATIOS_VC_SLIP_RATIO_RIGHT_MAX (1)

#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_LEFT_MIN (0)
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_LEFT_MAX (100)
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_RIGHT_MIN (0)
#define CANSIG_VC_ACTIVE_DIFF_OUTPUTS_VC_ACTIVE_DIFF_TORQUE_RIGHT_MAX (100)

#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_MIN (0)
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_MAX (120)
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_AT_FULL_THROTTLE_MIN (0)
#define CANSIG_VC_POWER_LIMIT_VC_POWER_LIMIT_VALUE_AT_FULL_THROTTLE_MAX (120)

#define CANSIG_VC_VEHICLE_DYNAMICS_VC_REGEN_ENABLED_MIN (0)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_REGEN_ENABLED_MAX (1)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_TORQUE_VECTORING_ENABLED_MIN (0)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_TORQUE_VECTORING_ENABLED_MAX (1)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_VEHICLE_VELOCITY_MIN (-150)
#define CANSIG_VC_VEHICLE_DYNAMICS_VC_VEHICLE_VELOCITY_MAX (150)

#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_MIN (-35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_MAX (35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_ACCURACY_MIN (0)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_NORTH_ACCURACY_MAX (35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_MIN (-35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_MAX (35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_ACCURACY_MIN (0)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_EAST_ACCURACY_MAX (35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_MIN (-35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_MAX (35)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_ACCURACY_MIN (0)
#define CANSIG_VC_ELLIPSE_EKF_NAV_VELOCITY_VC_VELOCITY_DOWN_ACCURACY_MAX (35)

#define CANSIG_VC_VOLTAGES_VC_BAT_VOLTAGE_MIN (0)
#define CANSIG_VC_VOLTAGES_VC_BAT_VOLTAGE_MAX (10)
#define CANSIG_VC_VOLTAGES_VC_BOOST_VOLTAGE_MIN (0)
#define CANSIG_VC_VOLTAGES_VC_BOOST_VOLTAGE_MAX (30)
#define CANSIG_VC_VOLTAGES_VC_ACC_VOLTAGE_MIN (0)
#define CANSIG_VC_VOLTAGES_VC_ACC_VOLTAGE_MAX (30)

#define CANSIG_VC_CURRENT_SENSING_VC_ACC_CURRENT_MIN (0)
#define CANSIG_VC_CURRENT_SENSING_VC_ACC_CURRENT_MAX (20)
#define CANSIG_VC_CURRENT_SENSING_VC_BAT_CURRENT_MIN (0)
#define CANSIG_VC_CURRENT_SENSING_VC_BAT_CURRENT_MAX (50)

#define CANSIG_VC_EFUSE_VC_SHDN_CURRENT_MIN (0)
#define CANSIG_VC_EFUSE_VC_SHDN_CURRENT_MAX (5)
#define CANSIG_VC_EFUSE_VC_SHDN_STATUS_MIN (0)
#define CANSIG_VC_EFUSE_VC_SHDN_STATUS_MAX (1)
#define CANSIG_VC_EFUSE_VC_LV_CURRENT_MIN (0)
#define CANSIG_VC_EFUSE_VC_LV_CURRENT_MAX (20)
#define CANSIG_VC_EFUSE_VC_LV_STATUS_MIN (0)
#define CANSIG_VC_EFUSE_VC_LV_STATUS_MAX (1)
#define CANSIG_VC_EFUSE_VC_PUMP_CURRENT_MIN (0)
#define CANSIG_VC_EFUSE_VC_PUMP_CURRENT_MAX (5)
#define CANSIG_VC_EFUSE_VC_PUMP_STATUS_MIN (0)
#define CANSIG_VC_EFUSE_VC_PUMP_STATUS_MAX (1)
#define CANSIG_VC_EFUSE_VC_AUX_CURRENT_MIN (0)
#define CANSIG_VC_EFUSE_VC_AUX_CURRENT_MAX (5)
#define CANSIG_VC_EFUSE_VC_AUX_STATUS_MIN (0)
#define CANSIG_VC_EFUSE_VC_AUX_STATUS_MAX (1)
#define CANSIG_VC_EFUSE_VC_INV_R_CURRENT_MIN (0)
#define CANSIG_VC_EFUSE_VC_INV_R_CURRENT_MAX (5)
#define CANSIG_VC_EFUSE_VC_INV_R_STATUS_MIN (0)
#define CANSIG_VC_EFUSE_VC_INV_R_STATUS_MAX (1)
#define CANSIG_VC_EFUSE_VC_INV_L_CURRENT_MIN (0)
#define CANSIG_VC_EFUSE_VC_INV_L_CURRENT_MAX (5)
#define CANSIG_VC_EFUSE_VC_INV_L_STATUS_MIN (0)
#define CANSIG_VC_EFUSE_VC_INV_L_STATUS_MAX (1)

#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_X_MIN (0)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_X_MAX (20)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Y_MIN (0)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Y_MAX (20)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Z_MIN (0)
#define CANSIG_VC_IMU_LINEAR_ACCELERATION_VC_IMU_ACCELERATION_Z_MAX (20)

#define CANSIG_VC_COOLANT_PUMP_FLOW_RATE_VC_FLOW_RATE_MIN (0)
#define CANSIG_VC_COOLANT_PUMP_FLOW_RATE_VC_FLOW_RATE_MAX (2000)

#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_LE_STOP_OK_STATUS_MIN (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_LE_STOP_OK_STATUS_MAX (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_RE_STOP_OK_STATUS_MIN (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_RE_STOP_OK_STATUS_MAX (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_TSMSOK_STATUS_MIN (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_TSMSOK_STATUS_MAX (1)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_SPLITTER_BOX_INTERLOCK_OK_STATUS_MIN (0)
#define CANSIG_VC_VC_SHDN_NODE_STATUS_VC_SPLITTER_BOX_INTERLOCK_OK_STATUS_MAX (1)

#define CANSIG_VC_GLOBAL_SHDN_NODE_STATUS_VC_FIRST_FAULT_NODE_MIN (0)
#define CANSIG_VC_GLOBAL_SHDN_NODE_STATUS_VC_FIRST_FAULT_NODE_MAX (12)

#define CANSIG_VC_PEDAL_PERCENTAGE_VC_MAPPED_PEDAL_PERCENTAGE_MIN (-1)
#define CANSIG_VC_PEDAL_PERCENTAGE_VC_MAPPED_PEDAL_PERCENTAGE_MAX (1)

#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_WATCHDOG_TIMEOUT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_WATCHDOG_TIMEOUT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_TX_OVERFLOW_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_TX_OVERFLOW_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_RX_OVERFLOW_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_RX_OVERFLOW_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_REGEN_NOT_AVAILABLE_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_REGEN_NOT_AVAILABLE_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_IMU_INIT_FAILED_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_IMU_INIT_FAILED_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_LV_CHARGE_FAULT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_LV_CHARGE_FAULT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_BOOST_CONTROLLER_FAULT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_BOOST_CONTROLLER_FAULT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_ERRORED_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_ERRORED_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_MAX (1)
#define CANSIG_VC_WARNINGS_VC_WARNING_SBG_INIT_FAILED_MIN (0)
#define CANSIG_VC_WARNINGS_VC_WARNING_SBG_INIT_FAILED_MAX (1)

#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_BMS_HEARTBEAT_MIN (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_BMS_HEARTBEAT_MAX (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_FSM_HEARTBEAT_MIN (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_FSM_HEARTBEAT_MAX (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_RSM_HEARTBEAT_MIN (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_RSM_HEARTBEAT_MAX (1)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_MIN (0)
#define CANSIG_VC_FAULTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_MAX (1)
#define CANSIG_VC_FAULTS_VC_FAULT_LEFT_INVERTER_FAULT_MIN (0)
#define CANSIG_VC_FAULTS_VC_FAULT_LEFT_INVERTER_FAULT_MAX (1)
#define CANSIG_VC_FAULTS_VC_FAULT_RIGHT_INVERTER_FAULT_MIN (0)
#define CANSIG_VC_FAULTS_VC_FAULT_RIGHT_INVERTER_FAULT_MAX (1)

#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_WATCHDOG_TIMEOUT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_WATCHDOG_TIMEOUT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_TX_OVERFLOW_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_TX_OVERFLOW_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_RX_OVERFLOW_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_RX_OVERFLOW_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_REGEN_NOT_AVAILABLE_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_REGEN_NOT_AVAILABLE_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_IMU_INIT_FAILED_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_IMU_INIT_FAILED_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_LV_CHARGE_FAULT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_LV_CHARGE_FAULT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BOOST_CONTROLLER_FAULT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BOOST_CONTROLLER_FAULT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_ERRORED_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_CAN_LOGGING_ERRORED_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_COUNT_MAX (7)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_SBG_INIT_FAILED_COUNT_MIN (0)
#define CANSIG_VC_WARNINGS_COUNTS_VC_WARNING_SBG_INIT_FAILED_COUNT_MAX (7)

#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_BMS_HEARTBEAT_COUNT_MIN (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_BMS_HEARTBEAT_COUNT_MAX (7)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_FSM_HEARTBEAT_COUNT_MIN (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_FSM_HEARTBEAT_COUNT_MAX (7)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_RSM_HEARTBEAT_COUNT_MIN (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_RSM_HEARTBEAT_COUNT_MAX (7)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_COUNT_MIN (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_COUNT_MAX (7)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_LEFT_INVERTER_FAULT_COUNT_MIN (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_LEFT_INVERTER_FAULT_COUNT_MAX (7)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_RIGHT_INVERTER_FAULT_COUNT_MIN (0)
#define CANSIG_VC_FAULTS_COUNTS_VC_FAULT_RIGHT_INVERTER_FAULT_COUNT_MAX (7)

#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_MIN (0)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_MAX (1)
#define CANSIG_BMS_VITALS_BMS_STATE_MIN (0)
#define CANSIG_BMS_VITALS_BMS_STATE_MAX (6)

#define CANSIG_BMS_OK_STATUSES_BMS_BMS_OK_MIN (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_OK_MAX (1)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_OK_MIN (0)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_OK_MAX (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_OK_MIN (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_OK_MAX (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_LATCHED_FAULT_MIN (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BMS_LATCHED_FAULT_MAX (1)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_LATCHED_FAULT_MIN (0)
#define CANSIG_BMS_OK_STATUSES_BMS_IMD_LATCHED_FAULT_MAX (1)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_LATCHED_FAULT_MIN (0)
#define CANSIG_BMS_OK_STATUSES_BMS_BSPD_LATCHED_FAULT_MAX (1)

#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MIN_CELL_TEMPERATURE_MIN (0)
#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MIN_CELL_TEMPERATURE_MAX (100)
#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MAX_CELL_TEMPERATURE_MIN (0)
#define CANSIG_BMS_CELL_TEMPERATURES_BMS_MAX_CELL_TEMPERATURE_MAX (100)

#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_PACK_VOLTAGE_MIN (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_PACK_VOLTAGE_MAX (600)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_MIN (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_MAX (100)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_CORRUPT_MIN (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_SOC_CORRUPT_MAX (1)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MIN_CELL_VOLTAGE_MIN (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MIN_CELL_VOLTAGE_MAX (5)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MAX_CELL_VOLTAGE_MIN (0)
#define CANSIG_BMS_VOLTAGE_AND_CHARGE_STATS_BMS_MAX_CELL_VOLTAGE_MAX (5)

#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_VOLTAGE_MIN (0)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_VOLTAGE_MAX (600)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_CURRENT_MIN (-300)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_CURRENT_MAX (300)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_POWER_MIN (-100)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_TRACTIVE_SYSTEM_POWER_MAX (100)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_AVAILABLE_POWER_MIN (0)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_AVAILABLE_POWER_MAX (100000)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_BSPD_CURRENT_THRESHOLD_EXCEEDED_MIN (0)
#define CANSIG_BMS_TRACTIVE_SYSTEM_BMS_BSPD_CURRENT_THRESHOLD_EXCEEDED_MAX (1)

#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_HVD_SHDN_OK_STATUS_MIN (0)
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_HVD_SHDN_OK_STATUS_MAX (1)
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_TS_ILCK_OK_STATUS_MIN (0)
#define CANSIG_BMS_BMS_SHDN_NODE_STATUS_BMS_TS_ILCK_OK_STATUS_MAX (1)

#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_WATCHDOG_TIMEOUT_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_WATCHDOG_TIMEOUT_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_TX_OVERFLOW_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_TX_OVERFLOW_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_RX_OVERFLOW_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_RX_OVERFLOW_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_FAULT_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_FAULT_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT0_GND_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT0_GND_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT1_GND_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT1_GND_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT2_GND_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT2_GND_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT3_GND_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT3_GND_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT4_GND_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_OPEN_WIRE_CHECK_SEGMENT4_GND_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_MISSING_VC_HEARTBEAT_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WARNING_MISSING_VC_HEARTBEAT_MAX (1)

#define CANSIG_BMS_FAULTS_BMS_FAULT_STATE_MACHINE_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_STATE_MACHINE_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERVOLTAGE_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERVOLTAGE_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERVOLTAGE_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERVOLTAGE_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_MODULE_COMMUNICATION_ERROR_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_MODULE_COMMUNICATION_ERROR_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERTEMP_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_UNDERTEMP_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERTEMP_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CELL_OVERTEMP_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_REPORTED_ERROR_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_REPORTED_ERROR_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_DISCONNECTED_DURING_CHARGE_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_DISCONNECTED_DURING_CHARGE_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_SHUTDOWN_LOOP_OPEN_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_CHARGER_SHUTDOWN_LOOP_OPEN_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_TRACTIVE_SYSTEM_OVERCURRENT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_TRACTIVE_SYSTEM_OVERCURRENT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_FAULT_PRECHARGE_FAILURE_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_FAULT_PRECHARGE_FAILURE_MAX (1)




/* -------------------------------- Enums --------------------------------- */



typedef enum
{ 
    SWITCH_OFF = 0,
    SWITCH_ON = 1,
    
} SwitchState;

typedef enum
{ 
    RTOS_TASK_1HZ = 0,
    RTOS_TASK_100HZ = 1,
    RTOS_TASK_1KHZ = 2,
    RTOS_TASK_CAN_TX = 3,
    RTOS_TASK_CAN_RX = 4,
    
} RtosTaskName;

typedef enum
{ 
    INVERTER_VSM_START_STATE = 0,
    INVERTER_VSM_PRECHARGE_INIT_STATE = 1,
    INVERTER_VSM_PRECHARGE_ACTIVE_STATE = 2,
    INVERTER_VSM_PRECHARGE_COMPLETE_STATE = 3,
    INVERTER_VSM_WAIT_STATE = 4,
    INVERTER_VSM_READY_STATE = 5,
    INVERTER_VSM_MOTOR_RUNNING_STATE = 6,
    INVERTER_VSM_BLINK_FAULT_CODE_STATE = 7,
    INVERTER_VSM_SHUTDOWN_IN_PROCESS = 14,
    INVERTER_VSM_RECYCLE_POWER_STATE = 15,
    
} InverterVsmState;

typedef enum
{ 
    INVERTER_POWER_ON_STATE = 0,
    INVERTER_STOP_STATE = 1,
    INVERTER_OPEN_LOOP_STATE = 2,
    INVERTER_CLOSED_LOOP_STATE = 3,
    INVERTER_WAIT_STATE = 4,
    INVERTER_IDLE_RUN_STATE = 8,
    INVERTER_IDLE_STOP_STATE = 9,
    
} InverterState;

typedef enum
{ 
    INVERTER_ACTIVE_DISCHARGE_DISABLED = 0,
    INVERTER_ACTIVE_DISCHARGE_ENABLED_WAITING = 1,
    INVERTER_ACTIVE_DISCHARGE_PERFORMING_SPEED_CHECK = 2,
    INVERTER_ACTIVE_DISCHARGE_OCCURING = 3,
    INVERTER_ACTIVE_DISCHARGE_COMPLETED = 4,
    
} InverterActiveDischargeState;

typedef enum
{ 
    INVERTER_CAN_MODE = 0,
    INVERTER_VSM_MODE = 1,
    
} InverterCommandMode;

typedef enum
{ 
    INVERTER_LOCKOUT_UNLOCKED = 0,
    INVERTER_LOCKOUT_LOCKED = 1,
    
} InverterLockout;

typedef enum
{ 
    INVERTER_REVERSE_DIRECTION = 0,
    INVERTER_FORWARD_DIRECTION = 1,
    
} InverterDirection;

typedef enum
{ 
    INVERTER_READ_COMMAND = 0,
    INVERTER_WRITE_COMMAND = 1,
    
} InverterReadWriteCommand;

typedef enum
{ 
    SHDN_BSPD_OK = 0,
    SHDN_BMS_OK = 1,
    SHDN_IMD_OK = 2,
    SHDN_TS_Ilck = 3,
    SHDN_Cockpit_EStop = 4,
    SHDN_Inertia = 5,
    SHDN_BOTS = 6,
    SHDN_L_EStop = 7,
    SHDN_R_EStop = 8,
    SHDN_TSMS = 9,
    SHDN_SB_ILCK = 10,
    SHDN_HVD_ILCK = 11,
    SHDN_OK = 12,
    
} ShutdownNode;

typedef enum
{ 
    VC_INIT_STATE = 0,
    VC_INVERTER_ON_STATE = 1,
    VC_DRIVE_STATE = 2,
    
} VcState;

typedef enum
{ 
    UNINITIALIZED = 0,
    VERTICAL_GYRO = 1,
    AHRS = 2,
    VELOCITY = 3,
    POSITION = 4,
    
} VcEkfStatus;

typedef enum
{ 
    BMS_INIT_STATE = 0,
    BMS_PRECHARGE_STATE = 1,
    BMS_CHARGE_STATE = 2,
    BMS_DRIVE_STATE = 3,
    BMS_BALANCING_STATE = 4,
    BMS_FAULT_STATE = 5,
    BMS_INVERTER_ON_STATE = 6,
    
} BmsState;


/* ------------------------------- Structs -------------------------------- */


typedef struct
{
    bool VC_Heartbeat_value;
    VcState VC_State_value;
    bool VC_BuzzerOn_value;
    uint32_t VC_NumberOfCanDataLogs_value;
    uint32_t VC_CanLoggingRemainingErrors_value;
    
} VC_Vitals_Signals;

typedef struct
{
    float VC_LeftInverterTorqueCommand_value;
    int VC_LeftInverterSpeedCommand_value;
    InverterDirection VC_LeftInverterDirectionCommand_value;
    bool VC_LeftInverterEnable_value;
    bool VC_LeftInverterEnableDischarge_value;
    bool VC_LeftInverterEnableSpeedMode_value;
    float VC_LeftInverterTorqueLimit_value;
    
} VC_LeftInverterCommand_Signals;

typedef struct
{
    uint32_t VC_INVL_CommandParameterAddress_value;
    InverterReadWriteCommand VC_INVL_CommandReadWrite_value;
    uint32_t VC_INVL_CommandData_value;
    
} VC_INVL_ReadWriteParamCommand_Signals;

typedef struct
{
    float VC_RightInverterTorqueCommand_value;
    int VC_RightInverterSpeedCommand_value;
    InverterDirection VC_RightInverterDirectionCommand_value;
    bool VC_RightInverterEnable_value;
    bool VC_RightInverterEnableDischarge_value;
    bool VC_RightInverterEnableSpeedMode_value;
    float VC_RightInverterTorqueLimit_value;
    
} VC_RightInverterCommand_Signals;

typedef struct
{
    uint32_t VC_INVR_CommandParameterAddress_value;
    InverterReadWriteCommand VC_INVR_CommandReadWrite_value;
    uint32_t VC_INVR_CommandData_value;
    
} VC_INVR_ReadWriteParamCommand_Signals;

typedef struct
{
    bool VC_WatchdogTimeout_value;
    RtosTaskName VC_WatchdogTimeoutTaskName_value;
    uint32_t VC_TxOverflowCount_value;
    uint32_t VC_RxOverflowCount_value;
    
} VC_AlertsContext_Signals;

typedef struct
{
    uint32_t VC_EllipseGeneralStatusBitmask_value;
    uint32_t VC_EllipseComStatusBitmask_value;
    VcEkfStatus VC_EkfSolutionMode_value;
    
} VC_EllipseStatus_Signals;

typedef struct
{
    uint32_t VC_EllipseTimestamp_value;
    
} VC_EllipseTime_Signals;

typedef struct
{
    float VC_EulerAnglesRoll_value;
    float VC_EulerAnglesPitch_value;
    float VC_EulerAnglesYaw_value;
    
} VC_EllipseEulerAngles_Signals;

typedef struct
{
    uint32_t VC_Hash_value;
    bool VC_Clean_value;
    
} VC_CommitInfo_Signals;

typedef struct
{
    float VC_PowerEstimateValue_value;
    float VC_PowerEstimateMeasuredValue_value;
    
} VC_PowerEstimate_Signals;

typedef struct
{
    float VC_PIDPowerEstimateOutput_value;
    float VC_PIDPowerEstimateError_value;
    float VC_PIDPowerEstimateDerivative_value;
    float VC_PIDPowerEstimateIntegral_value;
    
} VC_PowerEstimatePID_Signals;

typedef struct
{
    float VC_PIDSlipRatioOutput_value;
    float VC_PIDSlipRatioError_value;
    float VC_PIDSlipRatioDerivative_value;
    float VC_PIDSlipRatioIntegral_value;
    
} VC_PIDSlipRatio_Signals;

typedef struct
{
    float VC_SlipRatioLeft_value;
    float VC_SlipRatioRight_value;
    
} VC_SlipRatios_Signals;

typedef struct
{
    float VC_ActiveDiffTorqueLeft_value;
    float VC_ActiveDiffTorqueRight_value;
    
} VC_ActiveDiffOutputs_Signals;

typedef struct
{
    float VC_PowerLimitValue_value;
    float VC_PowerLimitValueAtFullThrottle_value;
    
} VC_PowerLimit_Signals;

typedef struct
{
    bool VC_RegenEnabled_value;
    bool VC_TorqueVectoringEnabled_value;
    float VC_VehicleVelocity_value;
    
} VC_VehicleDynamics_Signals;

typedef struct
{
    float VC_VelocityNorth_value;
    float VC_VelocityNorthAccuracy_value;
    float VC_VelocityEast_value;
    float VC_VelocityEastAccuracy_value;
    float VC_VelocityDown_value;
    float VC_VelocityDownAccuracy_value;
    
} VC_EllipseEkfNavVelocity_Signals;

typedef struct
{
    float VC_BatVoltage_value;
    float VC_BoostVoltage_value;
    float VC_AccVoltage_value;
    
} VC_Voltages_Signals;

typedef struct
{
    float VC_AccCurrent_value;
    float VC_BatCurrent_value;
    
} VC_CurrentSensing_Signals;

typedef struct
{
    float VC_ShdnCurrent_value;
    bool VC_ShdnStatus_value;
    float VC_LvCurrent_value;
    bool VC_LvStatus_value;
    float VC_PumpCurrent_value;
    bool VC_PumpStatus_value;
    float VC_AuxCurrent_value;
    bool VC_AuxStatus_value;
    float VC_InvRCurrent_value;
    bool VC_InvRStatus_value;
    float VC_InvLCurrent_value;
    bool VC_InvLStatus_value;
    
} VC_Efuse_Signals;

typedef struct
{
    float VC_ImuAccelerationX_value;
    float VC_ImuAccelerationY_value;
    float VC_ImuAccelerationZ_value;
    
} VC_ImuLinearAcceleration_Signals;

typedef struct
{
    float VC_FlowRate_value;
    
} VC_CoolantPumpFlowRate_Signals;

typedef struct
{
    bool VC_LEStopOKStatus_value;
    bool VC_REStopOKStatus_value;
    bool VC_TSMSOKStatus_value;
    bool VC_SplitterBoxInterlockOKStatus_value;
    
} VC_VCShdnNodeStatus_Signals;

typedef struct
{
    ShutdownNode VC_FirstFaultNode_value;
    
} VC_GlobalShdnNodeStatus_Signals;

typedef struct
{
    float VC_MappedPedalPercentage_value;
    
} VC_PedalPercentage_Signals;

typedef struct
{
    bool VC_Warning_StackWaterMarkHighTask1Hz_value;
    bool VC_Warning_StackWaterMarkHighTask100Hz_value;
    bool VC_Warning_StackWaterMarkHighTask1kHz_value;
    bool VC_Warning_StackWaterMarkHighTaskCanRx_value;
    bool VC_Warning_StackWaterMarkHighTaskCanTx_value;
    bool VC_Warning_WatchdogTimeout_value;
    bool VC_Warning_TxOverflow_value;
    bool VC_Warning_RxOverflow_value;
    bool VC_Warning_RegenNotAvailable_value;
    bool VC_Warning_ImuInitFailed_value;
    bool VC_Warning_FlowRateInputOutOfRange_value;
    bool VC_Warning_BatteryRailOvercurrentFault_value;
    bool VC_Warning_AccumulatorRailOvercurrentFault_value;
    bool VC_Warning_LvChargeFault_value;
    bool VC_Warning_BoostControllerFault_value;
    bool VC_Warning_HighNumberOfCanDataLogs_value;
    bool VC_Warning_CanLoggingSdCardNotPresent_value;
    bool VC_Warning_CanLoggingErrored_value;
    bool VC_Warning_BrakeAppsDisagreement_value;
    bool VC_Warning_SbgInitFailed_value;
    
} VC_Warnings_Signals;

typedef struct
{
    bool VC_Fault_MissingBMSHeartbeat_value;
    bool VC_Fault_MissingFSMHeartbeat_value;
    bool VC_Fault_MissingRSMHeartbeat_value;
    bool VC_Fault_MissingCRITHeartbeat_value;
    bool VC_Fault_LeftInverterFault_value;
    bool VC_Fault_RightInverterFault_value;
    
} VC_Faults_Signals;

typedef struct
{
    uint32_t VC_Warning_StackWaterMarkHighTask1HzCount_value;
    uint32_t VC_Warning_StackWaterMarkHighTask100HzCount_value;
    uint32_t VC_Warning_StackWaterMarkHighTask1kHzCount_value;
    uint32_t VC_Warning_StackWaterMarkHighTaskCanRxCount_value;
    uint32_t VC_Warning_StackWaterMarkHighTaskCanTxCount_value;
    uint32_t VC_Warning_WatchdogTimeoutCount_value;
    uint32_t VC_Warning_TxOverflowCount_value;
    uint32_t VC_Warning_RxOverflowCount_value;
    uint32_t VC_Warning_RegenNotAvailableCount_value;
    uint32_t VC_Warning_ImuInitFailedCount_value;
    uint32_t VC_Warning_FlowRateInputOutOfRangeCount_value;
    uint32_t VC_Warning_BatteryRailOvercurrentFaultCount_value;
    uint32_t VC_Warning_AccumulatorRailOvercurrentFaultCount_value;
    uint32_t VC_Warning_LvChargeFaultCount_value;
    uint32_t VC_Warning_BoostControllerFaultCount_value;
    uint32_t VC_Warning_HighNumberOfCanDataLogsCount_value;
    uint32_t VC_Warning_CanLoggingSdCardNotPresentCount_value;
    uint32_t VC_Warning_CanLoggingErroredCount_value;
    uint32_t VC_Warning_BrakeAppsDisagreementCount_value;
    uint32_t VC_Warning_SbgInitFailedCount_value;
    
} VC_WarningsCounts_Signals;

typedef struct
{
    uint32_t VC_Fault_MissingBMSHeartbeatCount_value;
    uint32_t VC_Fault_MissingFSMHeartbeatCount_value;
    uint32_t VC_Fault_MissingRSMHeartbeatCount_value;
    uint32_t VC_Fault_MissingCRITHeartbeatCount_value;
    uint32_t VC_Fault_LeftInverterFaultCount_value;
    uint32_t VC_Fault_RightInverterFaultCount_value;
    
} VC_FaultsCounts_Signals;

typedef struct
{
    bool BMS_Heartbeat_value;
    BmsState BMS_State_value;
    
} BMS_Vitals_Signals;

typedef struct
{
    bool BMS_BmsOk_value;
    bool BMS_ImdOk_value;
    bool BMS_BspdOk_value;
    bool BMS_BmsLatchedFault_value;
    bool BMS_ImdLatchedFault_value;
    bool BMS_BspdLatchedFault_value;
    
} BMS_OkStatuses_Signals;

typedef struct
{
    float BMS_MinCellTemperature_value;
    float BMS_MaxCellTemperature_value;
    
} BMS_CellTemperatures_Signals;

typedef struct
{
    float BMS_PackVoltage_value;
    float BMS_Soc_value;
    bool BMS_SocCorrupt_value;
    float BMS_MinCellVoltage_value;
    float BMS_MaxCellVoltage_value;
    
} BMS_VoltageAndChargeStats_Signals;

typedef struct
{
    float BMS_TractiveSystemVoltage_value;
    float BMS_TractiveSystemCurrent_value;
    float BMS_TractiveSystemPower_value;
    uint32_t BMS_AvailablePower_value;
    bool BMS_BSPDCurrentThresholdExceeded_value;
    
} BMS_TractiveSystem_Signals;

typedef struct
{
    bool BMS_HVDShdnOKStatus_value;
    bool BMS_TSIlckOKStatus_value;
    
} BMS_BMSShdnNodeStatus_Signals;

typedef struct
{
    bool BMS_Warning_StackWaterMarkHighTask1Hz_value;
    bool BMS_Warning_StackWaterMarkHighTask100Hz_value;
    bool BMS_Warning_StackWaterMarkHighTask1kHz_value;
    bool BMS_Warning_StackWaterMarkHighTaskCanRx_value;
    bool BMS_Warning_StackWaterMarkHighTaskCanTx_value;
    bool BMS_Warning_WatchdogTimeout_value;
    bool BMS_Warning_TxOverflow_value;
    bool BMS_Warning_RxOverflow_value;
    bool BMS_Warning_OpenWireCheckFault_value;
    bool BMS_Warning_OpenWireCheck_Segment0_GND_value;
    bool BMS_Warning_OpenWireCheck_Segment1_GND_value;
    bool BMS_Warning_OpenWireCheck_Segment2_GND_value;
    bool BMS_Warning_OpenWireCheck_Segment3_GND_value;
    bool BMS_Warning_OpenWireCheck_Segment4_GND_value;
    bool BMS_Warning_MissingVCHeartbeat_value;
    
} BMS_Warnings_Signals;

typedef struct
{
    bool BMS_Fault_StateMachine_value;
    bool BMS_Fault_CellUndervoltage_value;
    bool BMS_Fault_CellOvervoltage_value;
    bool BMS_Fault_ModuleCommunicationError_value;
    bool BMS_Fault_CellUndertemp_value;
    bool BMS_Fault_CellOvertemp_value;
    bool BMS_Fault_ChargerReportedError_value;
    bool BMS_Fault_ChargerDisconnectedDuringCharge_value;
    bool BMS_Fault_ChargerShutdownLoopOpen_value;
    bool BMS_Fault_TractiveSystemOvercurrent_value;
    bool BMS_Fault_PrechargeFailure_value;
    
} BMS_Faults_Signals;




/* ------------------------- Function Prototypes -------------------------- */

/**
 * Pack signals into CAN payload for BMS_Vitals.
 */

void app_canUtils_VC_Vitals_pack(const VC_Vitals_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_LeftInverterCommand_pack(const VC_LeftInverterCommand_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_INVL_ReadWriteParamCommand_pack(const VC_INVL_ReadWriteParamCommand_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_RightInverterCommand_pack(const VC_RightInverterCommand_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_INVR_ReadWriteParamCommand_pack(const VC_INVR_ReadWriteParamCommand_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_AlertsContext_pack(const VC_AlertsContext_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_EllipseStatus_pack(const VC_EllipseStatus_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_EllipseTime_pack(const VC_EllipseTime_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_EllipseEulerAngles_pack(const VC_EllipseEulerAngles_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_CommitInfo_pack(const VC_CommitInfo_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_PowerEstimate_pack(const VC_PowerEstimate_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_PowerEstimatePID_pack(const VC_PowerEstimatePID_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_PIDSlipRatio_pack(const VC_PIDSlipRatio_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_SlipRatios_pack(const VC_SlipRatios_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_ActiveDiffOutputs_pack(const VC_ActiveDiffOutputs_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_PowerLimit_pack(const VC_PowerLimit_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_VehicleDynamics_pack(const VC_VehicleDynamics_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_EllipseEkfNavVelocity_pack(const VC_EllipseEkfNavVelocity_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_Voltages_pack(const VC_Voltages_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_CurrentSensing_pack(const VC_CurrentSensing_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_Efuse_pack(const VC_Efuse_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_ImuLinearAcceleration_pack(const VC_ImuLinearAcceleration_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_CoolantPumpFlowRate_pack(const VC_CoolantPumpFlowRate_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_VCShdnNodeStatus_pack(const VC_VCShdnNodeStatus_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_GlobalShdnNodeStatus_pack(const VC_GlobalShdnNodeStatus_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_PedalPercentage_pack(const VC_PedalPercentage_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_Warnings_pack(const VC_Warnings_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_Faults_pack(const VC_Faults_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_WarningsCounts_pack(const VC_WarningsCounts_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_VC_FaultsCounts_pack(const VC_FaultsCounts_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_Vitals_pack(const BMS_Vitals_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_OkStatuses_pack(const BMS_OkStatuses_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_CellTemperatures_pack(const BMS_CellTemperatures_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_VoltageAndChargeStats_pack(const BMS_VoltageAndChargeStats_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_TractiveSystem_pack(const BMS_TractiveSystem_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_BMSShdnNodeStatus_pack(const BMS_BMSShdnNodeStatus_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_Warnings_pack(const BMS_Warnings_Signals* const in_msg, uint8_t* const out_data);
void app_canUtils_BMS_Faults_pack(const BMS_Faults_Signals* const in_msg, uint8_t* const out_data);




/**
 * Unpack signals from CAN payload for BRUSA_Vitals.
 */

void app_canUtils_VC_Vitals_unpack(const uint8_t* const in_data, VC_Vitals_Signals* const out_msg);
void app_canUtils_VC_LeftInverterCommand_unpack(const uint8_t* const in_data, VC_LeftInverterCommand_Signals* const out_msg);
void app_canUtils_VC_INVL_ReadWriteParamCommand_unpack(const uint8_t* const in_data, VC_INVL_ReadWriteParamCommand_Signals* const out_msg);
void app_canUtils_VC_RightInverterCommand_unpack(const uint8_t* const in_data, VC_RightInverterCommand_Signals* const out_msg);
void app_canUtils_VC_INVR_ReadWriteParamCommand_unpack(const uint8_t* const in_data, VC_INVR_ReadWriteParamCommand_Signals* const out_msg);
void app_canUtils_VC_AlertsContext_unpack(const uint8_t* const in_data, VC_AlertsContext_Signals* const out_msg);
void app_canUtils_VC_EllipseStatus_unpack(const uint8_t* const in_data, VC_EllipseStatus_Signals* const out_msg);
void app_canUtils_VC_EllipseTime_unpack(const uint8_t* const in_data, VC_EllipseTime_Signals* const out_msg);
void app_canUtils_VC_EllipseEulerAngles_unpack(const uint8_t* const in_data, VC_EllipseEulerAngles_Signals* const out_msg);
void app_canUtils_VC_CommitInfo_unpack(const uint8_t* const in_data, VC_CommitInfo_Signals* const out_msg);
void app_canUtils_VC_PowerEstimate_unpack(const uint8_t* const in_data, VC_PowerEstimate_Signals* const out_msg);
void app_canUtils_VC_PowerEstimatePID_unpack(const uint8_t* const in_data, VC_PowerEstimatePID_Signals* const out_msg);
void app_canUtils_VC_PIDSlipRatio_unpack(const uint8_t* const in_data, VC_PIDSlipRatio_Signals* const out_msg);
void app_canUtils_VC_SlipRatios_unpack(const uint8_t* const in_data, VC_SlipRatios_Signals* const out_msg);
void app_canUtils_VC_ActiveDiffOutputs_unpack(const uint8_t* const in_data, VC_ActiveDiffOutputs_Signals* const out_msg);
void app_canUtils_VC_PowerLimit_unpack(const uint8_t* const in_data, VC_PowerLimit_Signals* const out_msg);
void app_canUtils_VC_VehicleDynamics_unpack(const uint8_t* const in_data, VC_VehicleDynamics_Signals* const out_msg);
void app_canUtils_VC_EllipseEkfNavVelocity_unpack(const uint8_t* const in_data, VC_EllipseEkfNavVelocity_Signals* const out_msg);
void app_canUtils_VC_Voltages_unpack(const uint8_t* const in_data, VC_Voltages_Signals* const out_msg);
void app_canUtils_VC_CurrentSensing_unpack(const uint8_t* const in_data, VC_CurrentSensing_Signals* const out_msg);
void app_canUtils_VC_Efuse_unpack(const uint8_t* const in_data, VC_Efuse_Signals* const out_msg);
void app_canUtils_VC_ImuLinearAcceleration_unpack(const uint8_t* const in_data, VC_ImuLinearAcceleration_Signals* const out_msg);
void app_canUtils_VC_CoolantPumpFlowRate_unpack(const uint8_t* const in_data, VC_CoolantPumpFlowRate_Signals* const out_msg);
void app_canUtils_VC_VCShdnNodeStatus_unpack(const uint8_t* const in_data, VC_VCShdnNodeStatus_Signals* const out_msg);
void app_canUtils_VC_GlobalShdnNodeStatus_unpack(const uint8_t* const in_data, VC_GlobalShdnNodeStatus_Signals* const out_msg);
void app_canUtils_VC_PedalPercentage_unpack(const uint8_t* const in_data, VC_PedalPercentage_Signals* const out_msg);
void app_canUtils_VC_Warnings_unpack(const uint8_t* const in_data, VC_Warnings_Signals* const out_msg);
void app_canUtils_VC_Faults_unpack(const uint8_t* const in_data, VC_Faults_Signals* const out_msg);
void app_canUtils_VC_WarningsCounts_unpack(const uint8_t* const in_data, VC_WarningsCounts_Signals* const out_msg);
void app_canUtils_VC_FaultsCounts_unpack(const uint8_t* const in_data, VC_FaultsCounts_Signals* const out_msg);
void app_canUtils_BMS_Vitals_unpack(const uint8_t* const in_data, BMS_Vitals_Signals* const out_msg);
void app_canUtils_BMS_OkStatuses_unpack(const uint8_t* const in_data, BMS_OkStatuses_Signals* const out_msg);
void app_canUtils_BMS_CellTemperatures_unpack(const uint8_t* const in_data, BMS_CellTemperatures_Signals* const out_msg);
void app_canUtils_BMS_VoltageAndChargeStats_unpack(const uint8_t* const in_data, BMS_VoltageAndChargeStats_Signals* const out_msg);
void app_canUtils_BMS_TractiveSystem_unpack(const uint8_t* const in_data, BMS_TractiveSystem_Signals* const out_msg);
void app_canUtils_BMS_BMSShdnNodeStatus_unpack(const uint8_t* const in_data, BMS_BMSShdnNodeStatus_Signals* const out_msg);
void app_canUtils_BMS_Warnings_unpack(const uint8_t* const in_data, BMS_Warnings_Signals* const out_msg);
void app_canUtils_BMS_Faults_unpack(const uint8_t* const in_data, BMS_Faults_Signals* const out_msg);


