/**
 * @note This file is auto-generated. Do not modify!
 */
// clang-format off

#pragma once

/* ------------------------------- Includes ------------------------------- */

#include <stdint.h>
#include <stdbool.h>

/* -------------------------------- Macros -------------------------------- */

// Msg IDs
#define CAN_MSG_DCM_VITALS_ID (203)
#define CAN_MSG_DCM_LEFT_INVERTER_COMMAND_ID (32)
#define CAN_MSG_DCM_RIGHT_INVERTER_COMMAND_ID (82)
#define CAN_MSG_DCM_ALERTS_CONTEXT_ID (204)
#define CAN_MSG_DCM_ELLIPSE_STATUS_ID (208)
#define CAN_MSG_DCM_ELLIPSE_TIME_ID (209)
#define CAN_MSG_DCM_ELLIPSE_ACCELERATION_ID (205)
#define CAN_MSG_DCM_ELLIPSE_ANGULAR_VELOCITY_ID (206)
#define CAN_MSG_DCM_ELLIPSE_EULER_ANGLES_ID (207)
#define CAN_MSG_DCM_COMMIT_INFO_ID (210)
#define CAN_MSG_DCM_WARNINGS_ID (200)
#define CAN_MSG_DCM_FAULTS_ID (201)
#define CAN_MSG_DCM_WARNINGS_COUNTS_ID (250)
#define CAN_MSG_DCM_FAULTS_COUNTS_ID (251)
#define CAN_MSG_DEBUG_CAN_MODE_ID (701)
#define CAN_MSG_BMS_VITALS_ID (100)
#define CAN_MSG_BMS_AVAILABLE_POWER_ID (120)
#define CAN_MSG_BMS_WARNINGS_ID (150)
#define CAN_MSG_BMS_FAULTS_ID (151)
#define CAN_MSG_FSM_VITALS_ID (304)
#define CAN_MSG_FSM_APPS_ID (300)
#define CAN_MSG_FSM_BRAKE_ID (314)
#define CAN_MSG_FSM_WARNINGS_ID (350)
#define CAN_MSG_FSM_FAULTS_ID (351)
#define CAN_MSG_PDM_WARNINGS_ID (400)
#define CAN_MSG_PDM_FAULTS_ID (401)
#define CAN_MSG_INVR_MOTOR_POSITION_INFO_ID (55)
#define CAN_MSG_INVR_INTERNAL_STATES_ID (60)
#define CAN_MSG_DIM_VITALS_ID (502)
#define CAN_MSG_DIM_SWITCHES_ID (503)
#define CAN_MSG_DIM_WARNINGS_ID (500)
#define CAN_MSG_DIM_FAULTS_ID (501)
#define CAN_MSG_INVL_MOTOR_POSITION_INFO_ID (5)
#define CAN_MSG_INVL_INTERNAL_STATES_ID (10)

// Msg lengths (in bytes)
#define CAN_MSG_DCM_VITALS_BYTES (1)
#define CAN_MSG_DCM_LEFT_INVERTER_COMMAND_BYTES (8)
#define CAN_MSG_DCM_RIGHT_INVERTER_COMMAND_BYTES (8)
#define CAN_MSG_DCM_ALERTS_CONTEXT_BYTES (3)
#define CAN_MSG_DCM_ELLIPSE_STATUS_BYTES (6)
#define CAN_MSG_DCM_ELLIPSE_TIME_BYTES (4)
#define CAN_MSG_DCM_ELLIPSE_ACCELERATION_BYTES (5)
#define CAN_MSG_DCM_ELLIPSE_ANGULAR_VELOCITY_BYTES (4)
#define CAN_MSG_DCM_ELLIPSE_EULER_ANGLES_BYTES (5)
#define CAN_MSG_DCM_COMMIT_INFO_BYTES (5)
#define CAN_MSG_DCM_WARNINGS_BYTES (1)
#define CAN_MSG_DCM_FAULTS_BYTES (1)
#define CAN_MSG_DCM_WARNINGS_COUNTS_BYTES (3)
#define CAN_MSG_DCM_FAULTS_COUNTS_BYTES (2)

// Periodic msg cycle times (in MS)
#define CAN_MSG_DCM_VITALS_CYCLE_TIME_MS (100)
#define CAN_MSG_DCM_LEFT_INVERTER_COMMAND_CYCLE_TIME_MS (10)
#define CAN_MSG_DCM_RIGHT_INVERTER_COMMAND_CYCLE_TIME_MS (10)
#define CAN_MSG_DCM_ALERTS_CONTEXT_CYCLE_TIME_MS (1000)
#define CAN_MSG_DCM_ELLIPSE_STATUS_CYCLE_TIME_MS (100)
#define CAN_MSG_DCM_ELLIPSE_TIME_CYCLE_TIME_MS (100)
#define CAN_MSG_DCM_ELLIPSE_ACCELERATION_CYCLE_TIME_MS (10)
#define CAN_MSG_DCM_ELLIPSE_ANGULAR_VELOCITY_CYCLE_TIME_MS (10)
#define CAN_MSG_DCM_ELLIPSE_EULER_ANGLES_CYCLE_TIME_MS (10)
#define CAN_MSG_DCM_COMMIT_INFO_CYCLE_TIME_MS (100)
#define CAN_MSG_DCM_WARNINGS_CYCLE_TIME_MS (1000)
#define CAN_MSG_DCM_FAULTS_CYCLE_TIME_MS (100)
#define CAN_MSG_DCM_WARNINGS_COUNTS_CYCLE_TIME_MS (1000)
#define CAN_MSG_DCM_FAULTS_COUNTS_CYCLE_TIME_MS (100)

// Signal starting values
#define CANSIG_DCM_VITALS_DCM_HEARTBEAT_START_VAL (0)
#define CANSIG_DCM_VITALS_DCM_STATE_START_VAL (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_COMMAND_START_VAL (0) // Nm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_SPEED_COMMAND_START_VAL (0) // rpm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_DIRECTION_COMMAND_START_VAL (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_START_VAL (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_DISCHARGE_START_VAL (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_SPEED_MODE_START_VAL (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_LIMIT_START_VAL (0) // Nm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_COMMAND_START_VAL (0) // Nm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_SPEED_COMMAND_START_VAL (0) // rpm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_DIRECTION_COMMAND_START_VAL (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_START_VAL (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_DISCHARGE_START_VAL (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_SPEED_MODE_START_VAL (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_LIMIT_START_VAL (0) // Nm
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_TX_OVERFLOW_COUNT_START_VAL (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_RX_OVERFLOW_COUNT_START_VAL (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_WATCHDOG_TIMEOUT_TASK_NAME_START_VAL (0)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_GENERAL_STATUS_BITMASK_START_VAL (0)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_COM_STATUS_BITMASK_START_VAL (0)
#define CANSIG_DCM_ELLIPSE_TIME_DCM_ELLIPSE_TIMESTAMP_START_VAL (0) // us
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_FORWARD_START_VAL (-30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_LATERAL_START_VAL (-30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_VERTICAL_START_VAL (-30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_ROLL_START_VAL (-360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_PITCH_START_VAL (-360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_YAW_START_VAL (-360) // deg/s
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_ROLL_START_VAL (-180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_PITCH_START_VAL (-180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_YAW_START_VAL (-180) // deg
#define CANSIG_DCM_COMMIT_INFO_DCM_HASH_START_VAL (0)
#define CANSIG_DCM_COMMIT_INFO_DCM_CLEAN_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_WATCHDOG_TIMEOUT_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_TX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_DCM_WARNINGS_DCM_RX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_DCM_FAULTS_DCM_MISSING_HEARTBEAT_FAULT_START_VAL (0)
#define CANSIG_DCM_FAULTS_DCM_LEFT_INVERTER_FAULT_START_VAL (0)
#define CANSIG_DCM_FAULTS_DCM_RIGHT_INVERTER_FAULT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_WATCHDOG_TIMEOUT_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_TX_OVERFLOW_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_RX_OVERFLOW_WARNING_COUNT_START_VAL (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_MISSING_HEARTBEAT_FAULT_COUNT_START_VAL (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_LEFT_INVERTER_FAULT_COUNT_START_VAL (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_RIGHT_INVERTER_FAULT_COUNT_START_VAL (0)
#define CANSIG_DEBUG_CAN_MODE_DEBUG_ENABLE_DEBUG_MODE_START_VAL (0)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_START_VAL (0)
#define CANSIG_BMS_VITALS_BMS_STATE_START_VAL (0)
#define CANSIG_BMS_AVAILABLE_POWER_BMS_AVAILABLE_POWER_START_VAL (0) // W
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_WATCHDOG_TIMEOUT_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_TX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_BMS_WARNINGS_BMS_RX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_MISSING_HEARTBEAT_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_STATE_MACHINE_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERVOLTAGE_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERVOLTAGE_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_MODULE_COMMUNICATION_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERTEMP_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERTEMP_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_DISCONNECTED_DURING_CHARGE_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_EXTERNAL_SHUTDOWN_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_TRACTIVE_SYSTEM_OVERCURRENT_FAULT_START_VAL (0)
#define CANSIG_BMS_FAULTS_BMS_PRECHARGE_FAILURE_FAULT_START_VAL (0)
#define CANSIG_FSM_VITALS_FSM_HEARTBEAT_START_VAL (0)
#define CANSIG_FSM_VITALS_FSM_STATE_START_VAL (0)
#define CANSIG_FSM_APPS_FSM_PAPPS_MAPPED_PEDAL_PERCENTAGE_START_VAL (0) // %
#define CANSIG_FSM_APPS_FSM_SAPPS_MAPPED_PEDAL_PERCENTAGE_START_VAL (0) // %
#define CANSIG_FSM_APPS_FSM_PAPPS_RAW_PEDAL_PERCENTAGE_START_VAL (0) // %
#define CANSIG_FSM_APPS_FSM_SAPPS_RAW_PEDAL_PERCENTAGE_START_VAL (0) // %
#define CANSIG_FSM_APPS_FSM_TORQUE_LIMIT_START_VAL (0) // Nm
#define CANSIG_FSM_APPS_FSM_TORQUE_PLAUSABILITY_FAILED_START_VAL (0)
#define CANSIG_FSM_BRAKE_FSM_FRONT_BRAKE_PRESSURE_START_VAL (0) // psi
#define CANSIG_FSM_BRAKE_FSM_REAR_BRAKE_PRESSURE_START_VAL (0) // psi
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_PERCENTAGE_START_VAL (0) // %
#define CANSIG_FSM_BRAKE_FSM_BRAKE_ACTUATED_START_VAL (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PRESSURE_SENSOR_OCSC_START_VAL (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_SENSOR_OCSC_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_WATCHDOG_TIMEOUT_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_TX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_RX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_LEFT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_RIGHT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OCSC_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OUT_OF_RANGE_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_FRONT_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_REAR_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_FLOW_RATE_OUT_OF_RANGE_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_BRAKE_APPS_DISAGREEMENT_WARNING_START_VAL (0)
#define CANSIG_FSM_WARNINGS_FSM_APPS_DISAGREEMENT_WARNING_START_VAL (0)
#define CANSIG_FSM_FAULTS_FSM_MISSING_HEARTBEAT_FAULT_START_VAL (0)
#define CANSIG_FSM_FAULTS_FSM_STATE_MACHINE_FAULT_START_VAL (0)
#define CANSIG_FSM_FAULTS_FSM_PAPPS_OCSC_FAULT_START_VAL (0)
#define CANSIG_FSM_FAULTS_FSM_SAPPS_OCSC_FAULT_START_VAL (0)
#define CANSIG_FSM_FAULTS_FSM_FLOW_METER_UNDERFLOW_FAULT_START_VAL (0)
#define CANSIG_FSM_FAULTS_FSM_TORQUE_PLAUSABILITY_FAILED_FAULT_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_WATCHDOG_TIMEOUT_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_TX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_PDM_WARNINGS_PDM_RX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_PDM_FAULTS_PDM_DUMMY_FAULT_START_VAL (0)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_ANGLE_START_VAL (0.0f) // deg
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_SPEED_START_VAL (-32768) // rpm
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_ELECTRICAL_OUTPUT_FREQUENCY_START_VAL (-3276.8f) // hz
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_DELTA_RESOLVER_FILTERED_START_VAL (0.0f) // deg
#define CANSIG_INVR_INTERNAL_STATES_INVR_VSM_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_PWM_FREQUENCY_START_VAL (0) // kHz
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY1_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY2_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY3_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY4_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY5_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY6_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_RUN_MODE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ACTIVE_DISCHARGE_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_COMMAND_MODE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_ROLLING_COUNTER_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ENABLE_STATE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_START_MODE_ACTIVE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_LOCKOUT_ENABLED_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_DIRECTION_COMMAND_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_ACTIVE_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_TORQUE_LIMITING_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_MAX_SPEED_LIMITING_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_HOT_SPOT_LIMITING_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_LOW_SPEED_LIMITING_START_VAL (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_COOLANT_TEMPERATURE_LIMITING_START_VAL (0)
#define CANSIG_DIM_VITALS_DIM_HEARTBEAT_START_VAL (0)
#define CANSIG_DIM_VITALS_DIM_STATE_START_VAL (0)
#define CANSIG_DIM_SWITCHES_DIM_START_SWITCH_START_VAL (0)
#define CANSIG_DIM_SWITCHES_DIM_AUX_SWITCH_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_WATCHDOG_TIMEOUT_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_TX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_DIM_WARNINGS_DIM_RX_OVERFLOW_WARNING_START_VAL (0)
#define CANSIG_DIM_FAULTS_DIM_MISSING_HEARTBEAT_FAULT_START_VAL (0)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_ANGLE_START_VAL (0.0f) // deg
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_SPEED_START_VAL (-32768) // rpm
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_ELECTRICAL_OUTPUT_FREQUENCY_START_VAL (-3276.8f) // hz
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_DELTA_RESOLVER_FILTERED_START_VAL (0.0f) // deg
#define CANSIG_INVL_INTERNAL_STATES_INVL_VSM_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_PWM_FREQUENCY_START_VAL (0) // kHz
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY1_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY2_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY3_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY4_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY5_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY6_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_RUN_MODE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ACTIVE_DISCHARGE_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_COMMAND_MODE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_ROLLING_COUNTER_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ENABLE_STATE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_START_MODE_ACTIVE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_LOCKOUT_ENABLED_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_DIRECTION_COMMAND_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_ACTIVE_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_TORQUE_LIMITING_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_MAX_SPEED_LIMITING_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_HOT_SPOT_LIMITING_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_LOW_SPEED_LIMITING_START_VAL (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_COOLANT_TEMPERATURE_LIMITING_START_VAL (0)

// Scale/offset values for encoding/decoding signals
#define CANSIG_DCM_VITALS_DCM_HEARTBEAT_SCALE (1)
#define CANSIG_DCM_VITALS_DCM_HEARTBEAT_OFFSET (0)
#define CANSIG_DCM_VITALS_DCM_STATE_SCALE (1)
#define CANSIG_DCM_VITALS_DCM_STATE_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_COMMAND_SCALE (0.1f)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_COMMAND_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_SPEED_COMMAND_SCALE (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_SPEED_COMMAND_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_DIRECTION_COMMAND_SCALE (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_DIRECTION_COMMAND_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_SCALE (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_DISCHARGE_SCALE (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_DISCHARGE_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_SPEED_MODE_SCALE (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_SPEED_MODE_OFFSET (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_LIMIT_SCALE (0.1f)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_LIMIT_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_COMMAND_SCALE (0.1f)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_COMMAND_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_SPEED_COMMAND_SCALE (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_SPEED_COMMAND_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_DIRECTION_COMMAND_SCALE (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_DIRECTION_COMMAND_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_SCALE (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_DISCHARGE_SCALE (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_DISCHARGE_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_SPEED_MODE_SCALE (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_SPEED_MODE_OFFSET (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_LIMIT_SCALE (0.1f)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_LIMIT_OFFSET (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_TX_OVERFLOW_COUNT_SCALE (1)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_TX_OVERFLOW_COUNT_OFFSET (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_RX_OVERFLOW_COUNT_SCALE (1)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_RX_OVERFLOW_COUNT_OFFSET (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_WATCHDOG_TIMEOUT_TASK_NAME_SCALE (1)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_WATCHDOG_TIMEOUT_TASK_NAME_OFFSET (0)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_GENERAL_STATUS_BITMASK_SCALE (1)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_GENERAL_STATUS_BITMASK_OFFSET (0)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_COM_STATUS_BITMASK_SCALE (1)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_COM_STATUS_BITMASK_OFFSET (0)
#define CANSIG_DCM_ELLIPSE_TIME_DCM_ELLIPSE_TIMESTAMP_SCALE (1)
#define CANSIG_DCM_ELLIPSE_TIME_DCM_ELLIPSE_TIMESTAMP_OFFSET (0)
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_FORWARD_SCALE (0.01f)
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_FORWARD_OFFSET (-30)
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_LATERAL_SCALE (0.01f)
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_LATERAL_OFFSET (-30)
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_VERTICAL_SCALE (0.01f)
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_VERTICAL_OFFSET (-30)
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_ROLL_SCALE (1)
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_ROLL_OFFSET (-360)
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_PITCH_SCALE (1)
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_PITCH_OFFSET (-360)
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_YAW_SCALE (1)
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_YAW_OFFSET (-360)
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_ROLL_SCALE (0.1f)
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_ROLL_OFFSET (-180)
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_PITCH_SCALE (0.1f)
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_PITCH_OFFSET (-180)
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_YAW_SCALE (0.1f)
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_YAW_OFFSET (-180)
#define CANSIG_DCM_COMMIT_INFO_DCM_HASH_SCALE (1)
#define CANSIG_DCM_COMMIT_INFO_DCM_HASH_OFFSET (0)
#define CANSIG_DCM_COMMIT_INFO_DCM_CLEAN_SCALE (1)
#define CANSIG_DCM_COMMIT_INFO_DCM_CLEAN_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_WATCHDOG_TIMEOUT_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_WATCHDOG_TIMEOUT_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_TX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_TX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_DCM_WARNINGS_DCM_RX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_DCM_WARNINGS_DCM_RX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_DCM_FAULTS_DCM_MISSING_HEARTBEAT_FAULT_SCALE (1)
#define CANSIG_DCM_FAULTS_DCM_MISSING_HEARTBEAT_FAULT_OFFSET (0)
#define CANSIG_DCM_FAULTS_DCM_LEFT_INVERTER_FAULT_SCALE (1)
#define CANSIG_DCM_FAULTS_DCM_LEFT_INVERTER_FAULT_OFFSET (0)
#define CANSIG_DCM_FAULTS_DCM_RIGHT_INVERTER_FAULT_SCALE (1)
#define CANSIG_DCM_FAULTS_DCM_RIGHT_INVERTER_FAULT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_WATCHDOG_TIMEOUT_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_WATCHDOG_TIMEOUT_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_TX_OVERFLOW_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_TX_OVERFLOW_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_RX_OVERFLOW_WARNING_COUNT_SCALE (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_RX_OVERFLOW_WARNING_COUNT_OFFSET (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_MISSING_HEARTBEAT_FAULT_COUNT_SCALE (1)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_MISSING_HEARTBEAT_FAULT_COUNT_OFFSET (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_LEFT_INVERTER_FAULT_COUNT_SCALE (1)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_LEFT_INVERTER_FAULT_COUNT_OFFSET (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_RIGHT_INVERTER_FAULT_COUNT_SCALE (1)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_RIGHT_INVERTER_FAULT_COUNT_OFFSET (0)
#define CANSIG_DEBUG_CAN_MODE_DEBUG_ENABLE_DEBUG_MODE_SCALE (1)
#define CANSIG_DEBUG_CAN_MODE_DEBUG_ENABLE_DEBUG_MODE_OFFSET (0)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_SCALE (1)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_OFFSET (0)
#define CANSIG_BMS_VITALS_BMS_STATE_SCALE (1)
#define CANSIG_BMS_VITALS_BMS_STATE_OFFSET (0)
#define CANSIG_BMS_AVAILABLE_POWER_BMS_AVAILABLE_POWER_SCALE (0.1f)
#define CANSIG_BMS_AVAILABLE_POWER_BMS_AVAILABLE_POWER_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_WATCHDOG_TIMEOUT_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_WATCHDOG_TIMEOUT_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_TX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_TX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_BMS_WARNINGS_BMS_RX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_BMS_WARNINGS_BMS_RX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_MISSING_HEARTBEAT_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_MISSING_HEARTBEAT_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_STATE_MACHINE_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_STATE_MACHINE_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERVOLTAGE_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERVOLTAGE_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERVOLTAGE_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERVOLTAGE_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_MODULE_COMMUNICATION_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_MODULE_COMMUNICATION_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERTEMP_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERTEMP_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERTEMP_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERTEMP_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_DISCONNECTED_DURING_CHARGE_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_DISCONNECTED_DURING_CHARGE_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_EXTERNAL_SHUTDOWN_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_EXTERNAL_SHUTDOWN_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_TRACTIVE_SYSTEM_OVERCURRENT_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_TRACTIVE_SYSTEM_OVERCURRENT_FAULT_OFFSET (0)
#define CANSIG_BMS_FAULTS_BMS_PRECHARGE_FAILURE_FAULT_SCALE (1)
#define CANSIG_BMS_FAULTS_BMS_PRECHARGE_FAILURE_FAULT_OFFSET (0)
#define CANSIG_FSM_VITALS_FSM_HEARTBEAT_SCALE (1)
#define CANSIG_FSM_VITALS_FSM_HEARTBEAT_OFFSET (0)
#define CANSIG_FSM_VITALS_FSM_STATE_SCALE (1)
#define CANSIG_FSM_VITALS_FSM_STATE_OFFSET (0)
#define CANSIG_FSM_APPS_FSM_PAPPS_MAPPED_PEDAL_PERCENTAGE_SCALE (0.1f)
#define CANSIG_FSM_APPS_FSM_PAPPS_MAPPED_PEDAL_PERCENTAGE_OFFSET (0)
#define CANSIG_FSM_APPS_FSM_SAPPS_MAPPED_PEDAL_PERCENTAGE_SCALE (0.1f)
#define CANSIG_FSM_APPS_FSM_SAPPS_MAPPED_PEDAL_PERCENTAGE_OFFSET (0)
#define CANSIG_FSM_APPS_FSM_PAPPS_RAW_PEDAL_PERCENTAGE_SCALE (0.1f)
#define CANSIG_FSM_APPS_FSM_PAPPS_RAW_PEDAL_PERCENTAGE_OFFSET (0)
#define CANSIG_FSM_APPS_FSM_SAPPS_RAW_PEDAL_PERCENTAGE_SCALE (0.1f)
#define CANSIG_FSM_APPS_FSM_SAPPS_RAW_PEDAL_PERCENTAGE_OFFSET (0)
#define CANSIG_FSM_APPS_FSM_TORQUE_LIMIT_SCALE (0.1f)
#define CANSIG_FSM_APPS_FSM_TORQUE_LIMIT_OFFSET (0)
#define CANSIG_FSM_APPS_FSM_TORQUE_PLAUSABILITY_FAILED_SCALE (1)
#define CANSIG_FSM_APPS_FSM_TORQUE_PLAUSABILITY_FAILED_OFFSET (0)
#define CANSIG_FSM_BRAKE_FSM_FRONT_BRAKE_PRESSURE_SCALE (1)
#define CANSIG_FSM_BRAKE_FSM_FRONT_BRAKE_PRESSURE_OFFSET (0)
#define CANSIG_FSM_BRAKE_FSM_REAR_BRAKE_PRESSURE_SCALE (1)
#define CANSIG_FSM_BRAKE_FSM_REAR_BRAKE_PRESSURE_OFFSET (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_PERCENTAGE_SCALE (0.1f)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_PERCENTAGE_OFFSET (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_ACTUATED_SCALE (1)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_ACTUATED_OFFSET (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PRESSURE_SENSOR_OCSC_SCALE (1)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PRESSURE_SENSOR_OCSC_OFFSET (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_SENSOR_OCSC_SCALE (1)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_SENSOR_OCSC_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_WATCHDOG_TIMEOUT_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_WATCHDOG_TIMEOUT_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_TX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_TX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_RX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_RX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_LEFT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_LEFT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_RIGHT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_RIGHT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OCSC_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OCSC_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OUT_OF_RANGE_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OUT_OF_RANGE_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_FRONT_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_FRONT_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_REAR_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_REAR_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_FLOW_RATE_OUT_OF_RANGE_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_FLOW_RATE_OUT_OF_RANGE_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_BRAKE_APPS_DISAGREEMENT_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_BRAKE_APPS_DISAGREEMENT_WARNING_OFFSET (0)
#define CANSIG_FSM_WARNINGS_FSM_APPS_DISAGREEMENT_WARNING_SCALE (1)
#define CANSIG_FSM_WARNINGS_FSM_APPS_DISAGREEMENT_WARNING_OFFSET (0)
#define CANSIG_FSM_FAULTS_FSM_MISSING_HEARTBEAT_FAULT_SCALE (1)
#define CANSIG_FSM_FAULTS_FSM_MISSING_HEARTBEAT_FAULT_OFFSET (0)
#define CANSIG_FSM_FAULTS_FSM_STATE_MACHINE_FAULT_SCALE (1)
#define CANSIG_FSM_FAULTS_FSM_STATE_MACHINE_FAULT_OFFSET (0)
#define CANSIG_FSM_FAULTS_FSM_PAPPS_OCSC_FAULT_SCALE (1)
#define CANSIG_FSM_FAULTS_FSM_PAPPS_OCSC_FAULT_OFFSET (0)
#define CANSIG_FSM_FAULTS_FSM_SAPPS_OCSC_FAULT_SCALE (1)
#define CANSIG_FSM_FAULTS_FSM_SAPPS_OCSC_FAULT_OFFSET (0)
#define CANSIG_FSM_FAULTS_FSM_FLOW_METER_UNDERFLOW_FAULT_SCALE (1)
#define CANSIG_FSM_FAULTS_FSM_FLOW_METER_UNDERFLOW_FAULT_OFFSET (0)
#define CANSIG_FSM_FAULTS_FSM_TORQUE_PLAUSABILITY_FAILED_FAULT_SCALE (1)
#define CANSIG_FSM_FAULTS_FSM_TORQUE_PLAUSABILITY_FAILED_FAULT_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_WATCHDOG_TIMEOUT_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_WATCHDOG_TIMEOUT_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_TX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_TX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_PDM_WARNINGS_PDM_RX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_PDM_WARNINGS_PDM_RX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_PDM_FAULTS_PDM_DUMMY_FAULT_SCALE (1)
#define CANSIG_PDM_FAULTS_PDM_DUMMY_FAULT_OFFSET (0)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_ANGLE_SCALE (0.1f)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_ANGLE_OFFSET (0)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_SPEED_SCALE (1)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_SPEED_OFFSET (0)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_ELECTRICAL_OUTPUT_FREQUENCY_SCALE (0.1f)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_ELECTRICAL_OUTPUT_FREQUENCY_OFFSET (0)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_DELTA_RESOLVER_FILTERED_SCALE (0.1f)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_DELTA_RESOLVER_FILTERED_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_VSM_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_VSM_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_PWM_FREQUENCY_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_PWM_FREQUENCY_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY1_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY1_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY2_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY2_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY3_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY3_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY4_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY4_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY5_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY5_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY6_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY6_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_RUN_MODE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_RUN_MODE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ACTIVE_DISCHARGE_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ACTIVE_DISCHARGE_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_COMMAND_MODE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_COMMAND_MODE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_ROLLING_COUNTER_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_ROLLING_COUNTER_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ENABLE_STATE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ENABLE_STATE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_START_MODE_ACTIVE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_START_MODE_ACTIVE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_LOCKOUT_ENABLED_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_LOCKOUT_ENABLED_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_DIRECTION_COMMAND_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_DIRECTION_COMMAND_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_ACTIVE_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_ACTIVE_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_TORQUE_LIMITING_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_TORQUE_LIMITING_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_MAX_SPEED_LIMITING_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_MAX_SPEED_LIMITING_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_HOT_SPOT_LIMITING_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_HOT_SPOT_LIMITING_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_LOW_SPEED_LIMITING_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_LOW_SPEED_LIMITING_OFFSET (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_COOLANT_TEMPERATURE_LIMITING_SCALE (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_COOLANT_TEMPERATURE_LIMITING_OFFSET (0)
#define CANSIG_DIM_VITALS_DIM_HEARTBEAT_SCALE (1)
#define CANSIG_DIM_VITALS_DIM_HEARTBEAT_OFFSET (0)
#define CANSIG_DIM_VITALS_DIM_STATE_SCALE (1)
#define CANSIG_DIM_VITALS_DIM_STATE_OFFSET (0)
#define CANSIG_DIM_SWITCHES_DIM_START_SWITCH_SCALE (1)
#define CANSIG_DIM_SWITCHES_DIM_START_SWITCH_OFFSET (0)
#define CANSIG_DIM_SWITCHES_DIM_AUX_SWITCH_SCALE (1)
#define CANSIG_DIM_SWITCHES_DIM_AUX_SWITCH_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_WATCHDOG_TIMEOUT_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_WATCHDOG_TIMEOUT_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_TX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_TX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_DIM_WARNINGS_DIM_RX_OVERFLOW_WARNING_SCALE (1)
#define CANSIG_DIM_WARNINGS_DIM_RX_OVERFLOW_WARNING_OFFSET (0)
#define CANSIG_DIM_FAULTS_DIM_MISSING_HEARTBEAT_FAULT_SCALE (1)
#define CANSIG_DIM_FAULTS_DIM_MISSING_HEARTBEAT_FAULT_OFFSET (0)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_ANGLE_SCALE (0.1f)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_ANGLE_OFFSET (0)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_SPEED_SCALE (1)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_SPEED_OFFSET (0)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_ELECTRICAL_OUTPUT_FREQUENCY_SCALE (0.1f)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_ELECTRICAL_OUTPUT_FREQUENCY_OFFSET (0)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_DELTA_RESOLVER_FILTERED_SCALE (0.1f)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_DELTA_RESOLVER_FILTERED_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_VSM_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_VSM_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_PWM_FREQUENCY_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_PWM_FREQUENCY_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY1_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY1_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY2_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY2_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY3_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY3_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY4_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY4_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY5_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY5_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY6_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY6_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_RUN_MODE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_RUN_MODE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ACTIVE_DISCHARGE_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ACTIVE_DISCHARGE_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_COMMAND_MODE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_COMMAND_MODE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_ROLLING_COUNTER_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_ROLLING_COUNTER_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ENABLE_STATE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ENABLE_STATE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_START_MODE_ACTIVE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_START_MODE_ACTIVE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_LOCKOUT_ENABLED_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_LOCKOUT_ENABLED_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_DIRECTION_COMMAND_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_DIRECTION_COMMAND_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_ACTIVE_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_ACTIVE_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_TORQUE_LIMITING_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_TORQUE_LIMITING_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_MAX_SPEED_LIMITING_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_MAX_SPEED_LIMITING_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_HOT_SPOT_LIMITING_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_HOT_SPOT_LIMITING_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_LOW_SPEED_LIMITING_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_LOW_SPEED_LIMITING_OFFSET (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_COOLANT_TEMPERATURE_LIMITING_SCALE (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_COOLANT_TEMPERATURE_LIMITING_OFFSET (0)

// Min/max allowed values for signals
#define CANSIG_DCM_VITALS_DCM_HEARTBEAT_MIN (0)
#define CANSIG_DCM_VITALS_DCM_HEARTBEAT_MAX (1)
#define CANSIG_DCM_VITALS_DCM_STATE_MIN (0)
#define CANSIG_DCM_VITALS_DCM_STATE_MAX (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_COMMAND_MIN (-3276.8f) // Nm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_COMMAND_MAX (3276.7f) // Nm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_SPEED_COMMAND_MIN (-32768) // rpm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_SPEED_COMMAND_MAX (32767) // rpm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_DIRECTION_COMMAND_MIN (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_DIRECTION_COMMAND_MAX (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_MIN (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_MAX (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_DISCHARGE_MIN (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_DISCHARGE_MAX (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_SPEED_MODE_MIN (0)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_ENABLE_SPEED_MODE_MAX (1)
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_LIMIT_MIN (-3276.8f) // Nm
#define CANSIG_DCM_LEFT_INVERTER_COMMAND_DCM_LEFT_INVERTER_TORQUE_LIMIT_MAX (3276.7f) // Nm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_COMMAND_MIN (-3276.8f) // Nm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_COMMAND_MAX (3276.7f) // Nm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_SPEED_COMMAND_MIN (-32768) // rpm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_SPEED_COMMAND_MAX (32767) // rpm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_DIRECTION_COMMAND_MIN (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_DIRECTION_COMMAND_MAX (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_MIN (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_MAX (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_DISCHARGE_MIN (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_DISCHARGE_MAX (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_SPEED_MODE_MIN (0)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_ENABLE_SPEED_MODE_MAX (1)
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_LIMIT_MIN (-3276.8f) // Nm
#define CANSIG_DCM_RIGHT_INVERTER_COMMAND_DCM_RIGHT_INVERTER_TORQUE_LIMIT_MAX (3276.7f) // Nm
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_TX_OVERFLOW_COUNT_MIN (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_TX_OVERFLOW_COUNT_MAX (255)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_RX_OVERFLOW_COUNT_MIN (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_RX_OVERFLOW_COUNT_MAX (255)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_WATCHDOG_TIMEOUT_TASK_NAME_MIN (0)
#define CANSIG_DCM_ALERTS_CONTEXT_DCM_WATCHDOG_TIMEOUT_TASK_NAME_MAX (4)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_GENERAL_STATUS_BITMASK_MIN (0)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_GENERAL_STATUS_BITMASK_MAX (65535)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_COM_STATUS_BITMASK_MIN (0)
#define CANSIG_DCM_ELLIPSE_STATUS_DCM_ELLIPSE_COM_STATUS_BITMASK_MAX (4294967295)
#define CANSIG_DCM_ELLIPSE_TIME_DCM_ELLIPSE_TIMESTAMP_MIN (0) // us
#define CANSIG_DCM_ELLIPSE_TIME_DCM_ELLIPSE_TIMESTAMP_MAX (4294967295) // us
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_FORWARD_MIN (-30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_FORWARD_MAX (30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_LATERAL_MIN (-30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_LATERAL_MAX (30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_VERTICAL_MIN (-30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ACCELERATION_DCM_ACCELERATION_VERTICAL_MAX (30) // m/s^2
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_ROLL_MIN (-360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_ROLL_MAX (360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_PITCH_MIN (-360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_PITCH_MAX (360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_YAW_MIN (-360) // deg/s
#define CANSIG_DCM_ELLIPSE_ANGULAR_VELOCITY_DCM_ANGULAR_VELOCITY_YAW_MAX (360) // deg/s
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_ROLL_MIN (-180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_ROLL_MAX (180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_PITCH_MIN (-180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_PITCH_MAX (180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_YAW_MIN (-180) // deg
#define CANSIG_DCM_ELLIPSE_EULER_ANGLES_DCM_EULER_ANGLES_YAW_MAX (180) // deg
#define CANSIG_DCM_COMMIT_INFO_DCM_HASH_MIN (0)
#define CANSIG_DCM_COMMIT_INFO_DCM_HASH_MAX (4294967295)
#define CANSIG_DCM_COMMIT_INFO_DCM_CLEAN_MIN (0)
#define CANSIG_DCM_COMMIT_INFO_DCM_CLEAN_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_WATCHDOG_TIMEOUT_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_WATCHDOG_TIMEOUT_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_TX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_TX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_DCM_WARNINGS_DCM_RX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_DCM_WARNINGS_DCM_RX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_DCM_FAULTS_DCM_MISSING_HEARTBEAT_FAULT_MIN (0)
#define CANSIG_DCM_FAULTS_DCM_MISSING_HEARTBEAT_FAULT_MAX (1)
#define CANSIG_DCM_FAULTS_DCM_LEFT_INVERTER_FAULT_MIN (0)
#define CANSIG_DCM_FAULTS_DCM_LEFT_INVERTER_FAULT_MAX (1)
#define CANSIG_DCM_FAULTS_DCM_RIGHT_INVERTER_FAULT_MIN (0)
#define CANSIG_DCM_FAULTS_DCM_RIGHT_INVERTER_FAULT_MAX (1)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_WATCHDOG_TIMEOUT_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_WATCHDOG_TIMEOUT_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_TX_OVERFLOW_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_TX_OVERFLOW_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_RX_OVERFLOW_WARNING_COUNT_MIN (0)
#define CANSIG_DCM_WARNINGS_COUNTS_DCM_RX_OVERFLOW_WARNING_COUNT_MAX (7)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_MISSING_HEARTBEAT_FAULT_COUNT_MIN (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_MISSING_HEARTBEAT_FAULT_COUNT_MAX (7)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_LEFT_INVERTER_FAULT_COUNT_MIN (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_LEFT_INVERTER_FAULT_COUNT_MAX (7)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_RIGHT_INVERTER_FAULT_COUNT_MIN (0)
#define CANSIG_DCM_FAULTS_COUNTS_DCM_RIGHT_INVERTER_FAULT_COUNT_MAX (7)
#define CANSIG_DEBUG_CAN_MODE_DEBUG_ENABLE_DEBUG_MODE_MIN (0)
#define CANSIG_DEBUG_CAN_MODE_DEBUG_ENABLE_DEBUG_MODE_MAX (1)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_MIN (0)
#define CANSIG_BMS_VITALS_BMS_HEARTBEAT_MAX (1)
#define CANSIG_BMS_VITALS_BMS_STATE_MIN (0)
#define CANSIG_BMS_VITALS_BMS_STATE_MAX (5)
#define CANSIG_BMS_AVAILABLE_POWER_BMS_AVAILABLE_POWER_MIN (0) // W
#define CANSIG_BMS_AVAILABLE_POWER_BMS_AVAILABLE_POWER_MAX (100000) // W
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_WATCHDOG_TIMEOUT_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_WATCHDOG_TIMEOUT_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_TX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_TX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_BMS_WARNINGS_BMS_RX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_BMS_WARNINGS_BMS_RX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_MISSING_HEARTBEAT_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_MISSING_HEARTBEAT_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_STATE_MACHINE_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_STATE_MACHINE_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERVOLTAGE_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERVOLTAGE_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERVOLTAGE_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERVOLTAGE_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_MODULE_COMMUNICATION_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_MODULE_COMMUNICATION_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERTEMP_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_UNDERTEMP_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERTEMP_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CELL_OVERTEMP_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_DISCONNECTED_DURING_CHARGE_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_DISCONNECTED_DURING_CHARGE_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_EXTERNAL_SHUTDOWN_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_CHARGER_EXTERNAL_SHUTDOWN_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_TRACTIVE_SYSTEM_OVERCURRENT_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_TRACTIVE_SYSTEM_OVERCURRENT_FAULT_MAX (1)
#define CANSIG_BMS_FAULTS_BMS_PRECHARGE_FAILURE_FAULT_MIN (0)
#define CANSIG_BMS_FAULTS_BMS_PRECHARGE_FAILURE_FAULT_MAX (1)
#define CANSIG_FSM_VITALS_FSM_HEARTBEAT_MIN (0)
#define CANSIG_FSM_VITALS_FSM_HEARTBEAT_MAX (1)
#define CANSIG_FSM_VITALS_FSM_STATE_MIN (0)
#define CANSIG_FSM_VITALS_FSM_STATE_MAX (1)
#define CANSIG_FSM_APPS_FSM_PAPPS_MAPPED_PEDAL_PERCENTAGE_MIN (0) // %
#define CANSIG_FSM_APPS_FSM_PAPPS_MAPPED_PEDAL_PERCENTAGE_MAX (100) // %
#define CANSIG_FSM_APPS_FSM_SAPPS_MAPPED_PEDAL_PERCENTAGE_MIN (0) // %
#define CANSIG_FSM_APPS_FSM_SAPPS_MAPPED_PEDAL_PERCENTAGE_MAX (100) // %
#define CANSIG_FSM_APPS_FSM_PAPPS_RAW_PEDAL_PERCENTAGE_MIN (0) // %
#define CANSIG_FSM_APPS_FSM_PAPPS_RAW_PEDAL_PERCENTAGE_MAX (100) // %
#define CANSIG_FSM_APPS_FSM_SAPPS_RAW_PEDAL_PERCENTAGE_MIN (0) // %
#define CANSIG_FSM_APPS_FSM_SAPPS_RAW_PEDAL_PERCENTAGE_MAX (100) // %
#define CANSIG_FSM_APPS_FSM_TORQUE_LIMIT_MIN (0) // Nm
#define CANSIG_FSM_APPS_FSM_TORQUE_LIMIT_MAX (150) // Nm
#define CANSIG_FSM_APPS_FSM_TORQUE_PLAUSABILITY_FAILED_MIN (0)
#define CANSIG_FSM_APPS_FSM_TORQUE_PLAUSABILITY_FAILED_MAX (1)
#define CANSIG_FSM_BRAKE_FSM_FRONT_BRAKE_PRESSURE_MIN (0) // psi
#define CANSIG_FSM_BRAKE_FSM_FRONT_BRAKE_PRESSURE_MAX (2500) // psi
#define CANSIG_FSM_BRAKE_FSM_REAR_BRAKE_PRESSURE_MIN (0) // psi
#define CANSIG_FSM_BRAKE_FSM_REAR_BRAKE_PRESSURE_MAX (2500) // psi
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_PERCENTAGE_MIN (0) // %
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_PERCENTAGE_MAX (100) // %
#define CANSIG_FSM_BRAKE_FSM_BRAKE_ACTUATED_MIN (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_ACTUATED_MAX (1)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PRESSURE_SENSOR_OCSC_MIN (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PRESSURE_SENSOR_OCSC_MAX (1)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_SENSOR_OCSC_MIN (0)
#define CANSIG_FSM_BRAKE_FSM_BRAKE_PEDAL_SENSOR_OCSC_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_WATCHDOG_TIMEOUT_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_WATCHDOG_TIMEOUT_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_TX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_TX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_RX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_RX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_LEFT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_LEFT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_RIGHT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_RIGHT_WHEEL_SPEED_OUT_OF_RANGE_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OCSC_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OCSC_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OUT_OF_RANGE_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_STEERING_ANGLE_OUT_OF_RANGE_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_FRONT_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_FRONT_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_REAR_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_REAR_BRAKE_PRESSURE_OUT_OF_RANGE_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_FLOW_RATE_OUT_OF_RANGE_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_FLOW_RATE_OUT_OF_RANGE_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_BRAKE_APPS_DISAGREEMENT_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_BRAKE_APPS_DISAGREEMENT_WARNING_MAX (1)
#define CANSIG_FSM_WARNINGS_FSM_APPS_DISAGREEMENT_WARNING_MIN (0)
#define CANSIG_FSM_WARNINGS_FSM_APPS_DISAGREEMENT_WARNING_MAX (1)
#define CANSIG_FSM_FAULTS_FSM_MISSING_HEARTBEAT_FAULT_MIN (0)
#define CANSIG_FSM_FAULTS_FSM_MISSING_HEARTBEAT_FAULT_MAX (1)
#define CANSIG_FSM_FAULTS_FSM_STATE_MACHINE_FAULT_MIN (0)
#define CANSIG_FSM_FAULTS_FSM_STATE_MACHINE_FAULT_MAX (1)
#define CANSIG_FSM_FAULTS_FSM_PAPPS_OCSC_FAULT_MIN (0)
#define CANSIG_FSM_FAULTS_FSM_PAPPS_OCSC_FAULT_MAX (1)
#define CANSIG_FSM_FAULTS_FSM_SAPPS_OCSC_FAULT_MIN (0)
#define CANSIG_FSM_FAULTS_FSM_SAPPS_OCSC_FAULT_MAX (1)
#define CANSIG_FSM_FAULTS_FSM_FLOW_METER_UNDERFLOW_FAULT_MIN (0)
#define CANSIG_FSM_FAULTS_FSM_FLOW_METER_UNDERFLOW_FAULT_MAX (1)
#define CANSIG_FSM_FAULTS_FSM_TORQUE_PLAUSABILITY_FAILED_FAULT_MIN (0)
#define CANSIG_FSM_FAULTS_FSM_TORQUE_PLAUSABILITY_FAILED_FAULT_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_WATCHDOG_TIMEOUT_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_WATCHDOG_TIMEOUT_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_TX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_TX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_PDM_WARNINGS_PDM_RX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_PDM_WARNINGS_PDM_RX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_PDM_FAULTS_PDM_DUMMY_FAULT_MIN (0)
#define CANSIG_PDM_FAULTS_PDM_DUMMY_FAULT_MAX (1)
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_ANGLE_MIN (0.0f) // deg
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_ANGLE_MAX (359.9f) // deg
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_SPEED_MIN (-32768) // rpm
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_MOTOR_SPEED_MAX (32767) // rpm
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_ELECTRICAL_OUTPUT_FREQUENCY_MIN (-3276.8f) // hz
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_ELECTRICAL_OUTPUT_FREQUENCY_MAX (3276.7f) // hz
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_DELTA_RESOLVER_FILTERED_MIN (0.0f) // deg
#define CANSIG_INVR_MOTOR_POSITION_INFO_INVR_DELTA_RESOLVER_FILTERED_MAX (359.9f) // deg
#define CANSIG_INVR_INTERNAL_STATES_INVR_VSM_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_VSM_STATE_MAX (15)
#define CANSIG_INVR_INTERNAL_STATES_INVR_PWM_FREQUENCY_MIN (0) // kHz
#define CANSIG_INVR_INTERNAL_STATES_INVR_PWM_FREQUENCY_MAX (255) // kHz
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_STATE_MAX (9)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY1_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY1_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY2_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY2_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY3_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY3_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY4_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY4_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY5_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY5_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY6_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_RELAY6_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_RUN_MODE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_RUN_MODE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ACTIVE_DISCHARGE_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ACTIVE_DISCHARGE_STATE_MAX (4)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_COMMAND_MODE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_COMMAND_MODE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_ROLLING_COUNTER_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_ROLLING_COUNTER_MAX (15)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ENABLE_STATE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_ENABLE_STATE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_START_MODE_ACTIVE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_START_MODE_ACTIVE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_LOCKOUT_ENABLED_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_INVERTER_LOCKOUT_ENABLED_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_DIRECTION_COMMAND_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_DIRECTION_COMMAND_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_ACTIVE_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_ACTIVE_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_TORQUE_LIMITING_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_BMS_TORQUE_LIMITING_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_MAX_SPEED_LIMITING_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_MAX_SPEED_LIMITING_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_HOT_SPOT_LIMITING_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_HOT_SPOT_LIMITING_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_LOW_SPEED_LIMITING_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_LOW_SPEED_LIMITING_MAX (1)
#define CANSIG_INVR_INTERNAL_STATES_INVR_COOLANT_TEMPERATURE_LIMITING_MIN (0)
#define CANSIG_INVR_INTERNAL_STATES_INVR_COOLANT_TEMPERATURE_LIMITING_MAX (1)
#define CANSIG_DIM_VITALS_DIM_HEARTBEAT_MIN (0)
#define CANSIG_DIM_VITALS_DIM_HEARTBEAT_MAX (1)
#define CANSIG_DIM_VITALS_DIM_STATE_MIN (0)
#define CANSIG_DIM_VITALS_DIM_STATE_MAX (0)
#define CANSIG_DIM_SWITCHES_DIM_START_SWITCH_MIN (0)
#define CANSIG_DIM_SWITCHES_DIM_START_SWITCH_MAX (1)
#define CANSIG_DIM_SWITCHES_DIM_AUX_SWITCH_MIN (0)
#define CANSIG_DIM_SWITCHES_DIM_AUX_SWITCH_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1_HZ_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK100_HZ_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK1K_HZ_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_RX_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_STACK_WATER_MARK_HIGH_TASK_CAN_TX_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_WATCHDOG_TIMEOUT_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_WATCHDOG_TIMEOUT_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_TX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_TX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_DIM_WARNINGS_DIM_RX_OVERFLOW_WARNING_MIN (0)
#define CANSIG_DIM_WARNINGS_DIM_RX_OVERFLOW_WARNING_MAX (1)
#define CANSIG_DIM_FAULTS_DIM_MISSING_HEARTBEAT_FAULT_MIN (0)
#define CANSIG_DIM_FAULTS_DIM_MISSING_HEARTBEAT_FAULT_MAX (1)
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_ANGLE_MIN (0.0f) // deg
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_ANGLE_MAX (359.9f) // deg
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_SPEED_MIN (-32768) // rpm
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_MOTOR_SPEED_MAX (32767) // rpm
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_ELECTRICAL_OUTPUT_FREQUENCY_MIN (-3276.8f) // hz
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_ELECTRICAL_OUTPUT_FREQUENCY_MAX (3276.7f) // hz
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_DELTA_RESOLVER_FILTERED_MIN (0.0f) // deg
#define CANSIG_INVL_MOTOR_POSITION_INFO_INVL_DELTA_RESOLVER_FILTERED_MAX (359.9f) // deg
#define CANSIG_INVL_INTERNAL_STATES_INVL_VSM_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_VSM_STATE_MAX (15)
#define CANSIG_INVL_INTERNAL_STATES_INVL_PWM_FREQUENCY_MIN (0) // kHz
#define CANSIG_INVL_INTERNAL_STATES_INVL_PWM_FREQUENCY_MAX (255) // kHz
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_STATE_MAX (9)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY1_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY1_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY2_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY2_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY3_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY3_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY4_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY4_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY5_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY5_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY6_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_RELAY6_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_RUN_MODE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_RUN_MODE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ACTIVE_DISCHARGE_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ACTIVE_DISCHARGE_STATE_MAX (4)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_COMMAND_MODE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_COMMAND_MODE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_ROLLING_COUNTER_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_ROLLING_COUNTER_MAX (15)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ENABLE_STATE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_ENABLE_STATE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_START_MODE_ACTIVE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_START_MODE_ACTIVE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_LOCKOUT_ENABLED_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_INVERTER_LOCKOUT_ENABLED_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_DIRECTION_COMMAND_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_DIRECTION_COMMAND_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_ACTIVE_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_ACTIVE_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_TORQUE_LIMITING_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_BMS_TORQUE_LIMITING_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_MAX_SPEED_LIMITING_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_MAX_SPEED_LIMITING_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_HOT_SPOT_LIMITING_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_HOT_SPOT_LIMITING_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_LOW_SPEED_LIMITING_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_LOW_SPEED_LIMITING_MAX (1)
#define CANSIG_INVL_INTERNAL_STATES_INVL_COOLANT_TEMPERATURE_LIMITING_MIN (0)
#define CANSIG_INVL_INTERNAL_STATES_INVL_COOLANT_TEMPERATURE_LIMITING_MAX (1)


/* -------------------------------- Enums --------------------------------- */

typedef enum
{
    SWITCH_OFF = 0,
    SWITCH_ON = 1,
    NUM_SWITCH_STATE_CHOICES = 2,
} SwitchState;

typedef enum
{
    RTOS_TASK_1HZ = 0,
    RTOS_TASK_100HZ = 1,
    RTOS_TASK_1KHZ = 2,
    RTOS_TASK_CAN_TX = 3,
    RTOS_TASK_CAN_RX = 4,
    NUM_RTOS_TASK_NAME_CHOICES = 5,
} RtosTaskName;

typedef enum
{
    INVERTER_VSM_START_STATE = 0,
    INVERTER_VSM_PRECHARGE_INIT_STATE = 1,
    INVERTER_VSM_PRECHARGE_ACTIVE_STATE = 2,
    INVERTER_VSM_PRECHARGE_COMPLETE_STATE = 3,
    INVERTER_VSM_WAIT_STATE = 4,
    INVERTER_VSM_READY_STATE = 5,
    INVERTER_VSM_MOTOR_RUNNING_STATE = 6,
    INVERTER_VSM_BLINK_FAULT_CODE_STATE = 7,
    INVERTER_VSM_SHUTDOWN_IN_PROCESS = 14,
    INVERTER_VSM_RECYCLE_POWER_STATE = 15,
    NUM_INVERTER_VSM_STATE_CHOICES = 10,
} InverterVsmState;

typedef enum
{
    INVERTER_POWER_ON_STATE = 0,
    INVERTER_STOP_STATE = 1,
    INVERTER_OPEN_LOOP_STATE = 2,
    INVERTER_CLOSED_LOOP_STATE = 3,
    INVERTER_WAIT_STATE = 4,
    INVERTER_IDLE_RUN_STATE = 8,
    INVERTER_IDLE_STOP_STATE = 9,
    NUM_INVERTER_STATE_CHOICES = 7,
} InverterState;

typedef enum
{
    INVERTER_ACTIVE_DISCHARGE_DISABLED = 0,
    INVERTER_ACTIVE_DISCHARGE_ENABLED_WAITING = 1,
    INVERTER_ACTIVE_DISCHARGE_PERFORMING_SPEED_CHECK = 2,
    INVERTER_ACTIVE_DISCHARGE_OCCURING = 3,
    INVERTER_ACTIVE_DISCHARGE_COMPLETED = 4,
    NUM_INVERTER_ACTIVE_DISCHARGE_STATE_CHOICES = 5,
} InverterActiveDischargeState;

typedef enum
{
    INVERTER_CAN_MODE = 0,
    INVERTER_VSM_MODE = 1,
    NUM_INVERTER_COMMAND_MODE_CHOICES = 2,
} InverterCommandMode;

typedef enum
{
    INVERTER_LOCKOUT_UNLOCKED = 0,
    INVERTER_LOCKOUT_LOCKED = 1,
    NUM_INVERTER_LOCKOUT_CHOICES = 2,
} InverterLockout;

typedef enum
{
    INVERTER_REVERSE_DIRECTION = 0,
    INVERTER_FORWARD_DIRECTION = 1,
    NUM_INVERTER_DIRECTION_CHOICES = 2,
} InverterDirection;

typedef enum
{
    INVERTER_READ_COMMAND = 0,
    INVERTER_WRITE_COMMAND = 1,
    NUM_INVERTER_READ_WRITE_COMMAND_CHOICES = 2,
} InverterReadWriteCommand;

typedef enum
{
    RANGE_CHECK_OK = 0,
    RANGE_CHECK_UNDERFLOW = 1,
    RANGE_CHECK_OVERFLOW = 2,
    NUM_RANGE_CHECK_CHOICES = 3,
} RangeCheck;

typedef enum
{
    DCM_INIT_STATE = 0,
    DCM_DRIVE_STATE = 1,
    NUM_DCM_STATE_CHOICES = 2,
} DcmState;

typedef enum
{
    BMS_INIT_STATE = 0,
    BMS_PRECHARGE_STATE = 1,
    BMS_CHARGE_STATE = 2,
    BMS_DRIVE_STATE = 3,
    BMS_BALANCING_STATE = 4,
    BMS_FAULT_STATE = 5,
    NUM_BMS_STATE_CHOICES = 6,
} BmsState;

typedef enum
{
    FSM_STATE_DRIVE = 0,
    FSM_STATE_FAULT = 1,
    NUM_STATE_MACHINE_CHOICES = 2,
} State_Machine;

typedef enum
{
    DIM_STATE_DRIVE = 0,
    NUM_DIM_STATE_CHOICES = 1,
} DimState;


/* ------------------------------- Structs -------------------------------- */

/**
 * Signals in CAN msg DCM_Vitals.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool DCM_Heartbeat_value;
    /**
     * Range: 0 to 1
     */
    DcmState DCM_State_value;
} DCM_Vitals_Signals;

/**
 * Signals in CAN msg DCM_LeftInverterCommand.
 */
typedef struct
{
    /**
     * Range: -3276.8Nm to 3276.7Nm
     */
    float DCM_LeftInverterTorqueCommand_value;
    /**
     * Range: -32768rpm to 32767rpm
     */
    int DCM_LeftInverterSpeedCommand_value;
    /**
     * Range: 0 to 1
     */
    InverterDirection DCM_LeftInverterDirectionCommand_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_LeftInverterEnable_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_LeftInverterEnableDischarge_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_LeftInverterEnableSpeedMode_value;
    /**
     * Range: -3276.8Nm to 3276.7Nm
     */
    float DCM_LeftInverterTorqueLimit_value;
} DCM_LeftInverterCommand_Signals;

/**
 * Signals in CAN msg DCM_RightInverterCommand.
 */
typedef struct
{
    /**
     * Range: -3276.8Nm to 3276.7Nm
     */
    float DCM_RightInverterTorqueCommand_value;
    /**
     * Range: -32768rpm to 32767rpm
     */
    int DCM_RightInverterSpeedCommand_value;
    /**
     * Range: 0 to 1
     */
    InverterDirection DCM_RightInverterDirectionCommand_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_RightInverterEnable_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_RightInverterEnableDischarge_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_RightInverterEnableSpeedMode_value;
    /**
     * Range: -3276.8Nm to 3276.7Nm
     */
    float DCM_RightInverterTorqueLimit_value;
} DCM_RightInverterCommand_Signals;

/**
 * Signals in CAN msg DCM_AlertsContext.
 */
typedef struct
{
    /**
     * Range: 0 to 255
     */
    uint32_t DCM_TxOverflowCount_value;
    /**
     * Range: 0 to 255
     */
    uint32_t DCM_RxOverflowCount_value;
    /**
     * Range: 0 to 4
     */
    RtosTaskName DCM_WatchdogTimeoutTaskName_value;
} DCM_AlertsContext_Signals;

/**
 * Signals in CAN msg DCM_EllipseStatus.
 */
typedef struct
{
    /**
     * Range: 0 to 65535
     */
    uint32_t DCM_EllipseGeneralStatusBitmask_value;
    /**
     * Range: 0 to 4294967295
     */
    uint32_t DCM_EllipseComStatusBitmask_value;
} DCM_EllipseStatus_Signals;

/**
 * Signals in CAN msg DCM_EllipseTime.
 */
typedef struct
{
    /**
     * Range: 0us to 4294967295us
     */
    uint32_t DCM_EllipseTimestamp_value;
} DCM_EllipseTime_Signals;

/**
 * Signals in CAN msg DCM_EllipseAcceleration.
 */
typedef struct
{
    /**
     * Range: -30m/s^2 to 30m/s^2
     */
    float DCM_AccelerationForward_value;
    /**
     * Range: -30m/s^2 to 30m/s^2
     */
    float DCM_AccelerationLateral_value;
    /**
     * Range: -30m/s^2 to 30m/s^2
     */
    float DCM_AccelerationVertical_value;
} DCM_EllipseAcceleration_Signals;

/**
 * Signals in CAN msg DCM_EllipseAngularVelocity.
 */
typedef struct
{
    /**
     * Range: -360deg/s to 360deg/s
     */
    int DCM_AngularVelocityRoll_value;
    /**
     * Range: -360deg/s to 360deg/s
     */
    int DCM_AngularVelocityPitch_value;
    /**
     * Range: -360deg/s to 360deg/s
     */
    int DCM_AngularVelocityYaw_value;
} DCM_EllipseAngularVelocity_Signals;

/**
 * Signals in CAN msg DCM_EllipseEulerAngles.
 */
typedef struct
{
    /**
     * Range: -180deg to 180deg
     */
    float DCM_EulerAnglesRoll_value;
    /**
     * Range: -180deg to 180deg
     */
    float DCM_EulerAnglesPitch_value;
    /**
     * Range: -180deg to 180deg
     */
    float DCM_EulerAnglesYaw_value;
} DCM_EllipseEulerAngles_Signals;

/**
 * Signals in CAN msg DCM_CommitInfo.
 */
typedef struct
{
    /**
     * Range: 0 to 4294967295
     */
    uint32_t DCM_Hash_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_Clean_value;
} DCM_CommitInfo_Signals;

/**
 * Signals in CAN msg DCM_Warnings.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool DCM_StackWaterMarkHighTask1HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_StackWaterMarkHighTask100HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_StackWaterMarkHighTask1kHzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_StackWaterMarkHighTaskCanRxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_StackWaterMarkHighTaskCanTxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_WatchdogTimeoutWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_TxOverflowWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_RxOverflowWarning_value;
} DCM_Warnings_Signals;

/**
 * Signals in CAN msg DCM_Faults.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool DCM_MissingHeartbeatFault_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_LeftInverterFault_value;
    /**
     * Range: 0 to 1
     */
    bool DCM_RightInverterFault_value;
} DCM_Faults_Signals;

/**
 * Signals in CAN msg DCM_WarningsCounts.
 */
typedef struct
{
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_StackWaterMarkHighTask1HzWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_StackWaterMarkHighTask100HzWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_StackWaterMarkHighTask1kHzWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_StackWaterMarkHighTaskCanRxWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_StackWaterMarkHighTaskCanTxWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_WatchdogTimeoutWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_TxOverflowWarningCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_RxOverflowWarningCount_value;
} DCM_WarningsCounts_Signals;

/**
 * Signals in CAN msg DCM_FaultsCounts.
 */
typedef struct
{
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_MissingHeartbeatFaultCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_LeftInverterFaultCount_value;
    /**
     * Range: 0 to 7
     */
    uint32_t DCM_RightInverterFaultCount_value;
} DCM_FaultsCounts_Signals;

/**
 * Signals in CAN msg Debug_CanMode.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool Debug_EnableDebugMode_value;
} Debug_CanMode_Signals;

/**
 * Signals in CAN msg BMS_Vitals.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool BMS_Heartbeat_value;
    /**
     * Range: 0 to 5
     */
    BmsState BMS_State_value;
} BMS_Vitals_Signals;

/**
 * Signals in CAN msg BMS_AvailablePower.
 */
typedef struct
{
    /**
     * Range: 0W to 100000W
     */
    float BMS_AvailablePower_value;
} BMS_AvailablePower_Signals;

/**
 * Signals in CAN msg BMS_Warnings.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool BMS_StackWaterMarkHighTask1HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_StackWaterMarkHighTask100HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_StackWaterMarkHighTask1kHzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_StackWaterMarkHighTaskCanRxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_StackWaterMarkHighTaskCanTxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_WatchdogTimeoutWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_TxOverflowWarning_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_RxOverflowWarning_value;
} BMS_Warnings_Signals;

/**
 * Signals in CAN msg BMS_Faults.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool BMS_MissingHeartbeatFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_StateMachineFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_CellUndervoltageFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_CellOvervoltageFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_ModuleCommunicationFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_CellUndertempFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_CellOvertempFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_ChargerFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_ChargerDisconnectedDuringChargeFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_ChargerExternalShutdownFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_TractiveSystemOvercurrentFault_value;
    /**
     * Range: 0 to 1
     */
    bool BMS_PrechargeFailureFault_value;
} BMS_Faults_Signals;

/**
 * Signals in CAN msg FSM_Vitals.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool FSM_Heartbeat_value;
    /**
     * Range: 0 to 1
     */
    State_Machine FSM_State_value;
} FSM_Vitals_Signals;

/**
 * Signals in CAN msg FSM_Apps.
 */
typedef struct
{
    /**
     * Range: 0% to 100%
     */
    float FSM_PappsMappedPedalPercentage_value;
    /**
     * Range: 0% to 100%
     */
    float FSM_SappsMappedPedalPercentage_value;
    /**
     * Range: 0% to 100%
     */
    float FSM_PappsRawPedalPercentage_value;
    /**
     * Range: 0% to 100%
     */
    float FSM_SappsRawPedalPercentage_value;
    /**
     * Range: 0Nm to 150Nm
     */
    float FSM_TorqueLimit_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_TorquePlausabilityFailed_value;
} FSM_Apps_Signals;

/**
 * Signals in CAN msg FSM_Brake.
 */
typedef struct
{
    /**
     * Range: 0psi to 2500psi
     */
    uint32_t FSM_FrontBrakePressure_value;
    /**
     * Range: 0psi to 2500psi
     */
    uint32_t FSM_RearBrakePressure_value;
    /**
     * Range: 0% to 100%
     */
    float FSM_BrakePedalPercentage_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_BrakeActuated_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_BrakePressureSensorOCSC_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_BrakePedalSensorOCSC_value;
} FSM_Brake_Signals;

/**
 * Signals in CAN msg FSM_Warnings.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool FSM_StackWaterMarkHighTask1HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_StackWaterMarkHighTask100HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_StackWaterMarkHighTask1kHzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_StackWaterMarkHighTaskCanRxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_StackWaterMarkHighTaskCanTxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_WatchdogTimeoutWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_TxOverflowWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_RxOverflowWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_LeftWheelSpeedOutOfRangeWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_RightWheelSpeedOutOfRangeWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_SteeringAngleOCSCWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_SteeringAngleOutOfRangeWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_FrontBrakePressureOutOfRangeWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_RearBrakePressureOutOfRangeWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_FlowRateOutOfRangeWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_BrakeAppsDisagreementWarning_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_AppsDisagreementWarning_value;
} FSM_Warnings_Signals;

/**
 * Signals in CAN msg FSM_Faults.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool FSM_MissingHeartbeatFault_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_StateMachineFault_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_PappsOCSCFault_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_SappsOCSCFault_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_FlowMeterUnderflowFault_value;
    /**
     * Range: 0 to 1
     */
    bool FSM_TorquePlausabilityFailedFault_value;
} FSM_Faults_Signals;

/**
 * Signals in CAN msg PDM_Warnings.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool PDM_StackWaterMarkHighTask1HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_StackWaterMarkHighTask100HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_StackWaterMarkHighTask1kHzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_StackWaterMarkHighTaskCanRxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_StackWaterMarkHighTaskCanTxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_WatchdogTimeoutWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_TxOverflowWarning_value;
    /**
     * Range: 0 to 1
     */
    bool PDM_RxOverflowWarning_value;
} PDM_Warnings_Signals;

/**
 * Signals in CAN msg PDM_Faults.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool PDM_DummyFault_value;
} PDM_Faults_Signals;

/**
 * Signals in CAN msg INVR_MotorPositionInfo.
 */
typedef struct
{
    /**
     * Range: 0.0deg to 359.9deg
     */
    float INVR_MotorAngle_value;
    /**
     * Range: -32768rpm to 32767rpm
     */
    int INVR_MotorSpeed_value;
    /**
     * Range: -3276.8hz to 3276.7hz
     */
    float INVR_ElectricalOutputFrequency_value;
    /**
     * Range: 0.0deg to 359.9deg
     */
    float INVR_DeltaResolverFiltered_value;
} INVR_MotorPositionInfo_Signals;

/**
 * Signals in CAN msg INVR_InternalStates.
 */
typedef struct
{
    /**
     * Range: 0 to 15
     */
    InverterVsmState INVR_VsmState_value;
    /**
     * Range: 0kHz to 255kHz
     */
    uint32_t INVR_PwmFrequency_value;
    /**
     * Range: 0 to 9
     */
    InverterState INVR_InverterState_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_Relay1State_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_Relay2State_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_Relay3State_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_Relay4State_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_Relay5State_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_Relay6State_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_InverterRunMode_value;
    /**
     * Range: 0 to 4
     */
    InverterActiveDischargeState INVR_InverterActiveDischargeState_value;
    /**
     * Range: 0 to 1
     */
    InverterCommandMode INVR_InverterCommandMode_value;
    /**
     * Range: 0 to 15
     */
    uint32_t INVR_RollingCounter_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_InverterEnableState_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_StartModeActive_value;
    /**
     * Range: 0 to 1
     */
    InverterLockout INVR_InverterLockoutEnabled_value;
    /**
     * Range: 0 to 1
     */
    InverterDirection INVR_DirectionCommand_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_BmsActive_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_BmsTorqueLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_MaxSpeedLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_HotSpotLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_LowSpeedLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVR_CoolantTemperatureLimiting_value;
} INVR_InternalStates_Signals;

/**
 * Signals in CAN msg DIM_Vitals.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool DIM_Heartbeat_value;
    /**
     * Range: 0 to 0
     */
    DimState DIM_State_value;
} DIM_Vitals_Signals;

/**
 * Signals in CAN msg DIM_Switches.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    SwitchState DIM_StartSwitch_value;
    /**
     * Range: 0 to 1
     */
    SwitchState DIM_AuxSwitch_value;
} DIM_Switches_Signals;

/**
 * Signals in CAN msg DIM_Warnings.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool DIM_StackWaterMarkHighTask1HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_StackWaterMarkHighTask100HzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_StackWaterMarkHighTask1kHzWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_StackWaterMarkHighTaskCanRxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_StackWaterMarkHighTaskCanTxWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_WatchdogTimeoutWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_TxOverflowWarning_value;
    /**
     * Range: 0 to 1
     */
    bool DIM_RxOverflowWarning_value;
} DIM_Warnings_Signals;

/**
 * Signals in CAN msg DIM_Faults.
 */
typedef struct
{
    /**
     * Range: 0 to 1
     */
    bool DIM_MissingHeartbeatFault_value;
} DIM_Faults_Signals;

/**
 * Signals in CAN msg INVL_MotorPositionInfo.
 */
typedef struct
{
    /**
     * Range: 0.0deg to 359.9deg
     */
    float INVL_MotorAngle_value;
    /**
     * Range: -32768rpm to 32767rpm
     */
    int INVL_MotorSpeed_value;
    /**
     * Range: -3276.8hz to 3276.7hz
     */
    float INVL_ElectricalOutputFrequency_value;
    /**
     * Range: 0.0deg to 359.9deg
     */
    float INVL_DeltaResolverFiltered_value;
} INVL_MotorPositionInfo_Signals;

/**
 * Signals in CAN msg INVL_InternalStates.
 */
typedef struct
{
    /**
     * Range: 0 to 15
     */
    InverterVsmState INVL_VsmState_value;
    /**
     * Range: 0kHz to 255kHz
     */
    uint32_t INVL_PwmFrequency_value;
    /**
     * Range: 0 to 9
     */
    InverterState INVL_InverterState_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_Relay1State_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_Relay2State_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_Relay3State_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_Relay4State_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_Relay5State_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_Relay6State_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_InverterRunMode_value;
    /**
     * Range: 0 to 4
     */
    InverterActiveDischargeState INVL_InverterActiveDischargeState_value;
    /**
     * Range: 0 to 1
     */
    InverterCommandMode INVL_InverterCommandMode_value;
    /**
     * Range: 0 to 15
     */
    uint32_t INVL_RollingCounter_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_InverterEnableState_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_StartModeActive_value;
    /**
     * Range: 0 to 1
     */
    InverterLockout INVL_InverterLockoutEnabled_value;
    /**
     * Range: 0 to 1
     */
    InverterDirection INVL_DirectionCommand_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_BmsActive_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_BmsTorqueLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_MaxSpeedLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_HotSpotLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_LowSpeedLimiting_value;
    /**
     * Range: 0 to 1
     */
    bool INVL_CoolantTemperatureLimiting_value;
} INVL_InternalStates_Signals;


/* ------------------------- Function Prototypes -------------------------- */

/**
 * Pack signals into CAN payload for DCM_Vitals.
 */
void App_CanUtils_DCM_Vitals_Pack(const DCM_Vitals_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_LeftInverterCommand.
 */
void App_CanUtils_DCM_LeftInverterCommand_Pack(const DCM_LeftInverterCommand_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_RightInverterCommand.
 */
void App_CanUtils_DCM_RightInverterCommand_Pack(const DCM_RightInverterCommand_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_AlertsContext.
 */
void App_CanUtils_DCM_AlertsContext_Pack(const DCM_AlertsContext_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_EllipseStatus.
 */
void App_CanUtils_DCM_EllipseStatus_Pack(const DCM_EllipseStatus_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_EllipseTime.
 */
void App_CanUtils_DCM_EllipseTime_Pack(const DCM_EllipseTime_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_EllipseAcceleration.
 */
void App_CanUtils_DCM_EllipseAcceleration_Pack(const DCM_EllipseAcceleration_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_EllipseAngularVelocity.
 */
void App_CanUtils_DCM_EllipseAngularVelocity_Pack(const DCM_EllipseAngularVelocity_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_EllipseEulerAngles.
 */
void App_CanUtils_DCM_EllipseEulerAngles_Pack(const DCM_EllipseEulerAngles_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_CommitInfo.
 */
void App_CanUtils_DCM_CommitInfo_Pack(const DCM_CommitInfo_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_Warnings.
 */
void App_CanUtils_DCM_Warnings_Pack(const DCM_Warnings_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_Faults.
 */
void App_CanUtils_DCM_Faults_Pack(const DCM_Faults_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_WarningsCounts.
 */
void App_CanUtils_DCM_WarningsCounts_Pack(const DCM_WarningsCounts_Signals* const in_msg, uint8_t* const out_data);

/**
 * Pack signals into CAN payload for DCM_FaultsCounts.
 */
void App_CanUtils_DCM_FaultsCounts_Pack(const DCM_FaultsCounts_Signals* const in_msg, uint8_t* const out_data);

/**
 * Unpack signals from CAN payload for Debug_CanMode.
 */
void App_CanUtils_Debug_CanMode_Unpack(const uint8_t* const in_data, Debug_CanMode_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for BMS_Vitals.
 */
void App_CanUtils_BMS_Vitals_Unpack(const uint8_t* const in_data, BMS_Vitals_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for BMS_AvailablePower.
 */
void App_CanUtils_BMS_AvailablePower_Unpack(const uint8_t* const in_data, BMS_AvailablePower_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for BMS_Warnings.
 */
void App_CanUtils_BMS_Warnings_Unpack(const uint8_t* const in_data, BMS_Warnings_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for BMS_Faults.
 */
void App_CanUtils_BMS_Faults_Unpack(const uint8_t* const in_data, BMS_Faults_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for FSM_Vitals.
 */
void App_CanUtils_FSM_Vitals_Unpack(const uint8_t* const in_data, FSM_Vitals_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for FSM_Apps.
 */
void App_CanUtils_FSM_Apps_Unpack(const uint8_t* const in_data, FSM_Apps_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for FSM_Brake.
 */
void App_CanUtils_FSM_Brake_Unpack(const uint8_t* const in_data, FSM_Brake_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for FSM_Warnings.
 */
void App_CanUtils_FSM_Warnings_Unpack(const uint8_t* const in_data, FSM_Warnings_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for FSM_Faults.
 */
void App_CanUtils_FSM_Faults_Unpack(const uint8_t* const in_data, FSM_Faults_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for PDM_Warnings.
 */
void App_CanUtils_PDM_Warnings_Unpack(const uint8_t* const in_data, PDM_Warnings_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for PDM_Faults.
 */
void App_CanUtils_PDM_Faults_Unpack(const uint8_t* const in_data, PDM_Faults_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for INVR_MotorPositionInfo.
 */
void App_CanUtils_INVR_MotorPositionInfo_Unpack(const uint8_t* const in_data, INVR_MotorPositionInfo_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for INVR_InternalStates.
 */
void App_CanUtils_INVR_InternalStates_Unpack(const uint8_t* const in_data, INVR_InternalStates_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for DIM_Vitals.
 */
void App_CanUtils_DIM_Vitals_Unpack(const uint8_t* const in_data, DIM_Vitals_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for DIM_Switches.
 */
void App_CanUtils_DIM_Switches_Unpack(const uint8_t* const in_data, DIM_Switches_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for DIM_Warnings.
 */
void App_CanUtils_DIM_Warnings_Unpack(const uint8_t* const in_data, DIM_Warnings_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for DIM_Faults.
 */
void App_CanUtils_DIM_Faults_Unpack(const uint8_t* const in_data, DIM_Faults_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for INVL_MotorPositionInfo.
 */
void App_CanUtils_INVL_MotorPositionInfo_Unpack(const uint8_t* const in_data, INVL_MotorPositionInfo_Signals* const out_msg);

/**
 * Unpack signals from CAN payload for INVL_InternalStates.
 */
void App_CanUtils_INVL_InternalStates_Unpack(const uint8_t* const in_data, INVL_InternalStates_Signals* const out_msg);

