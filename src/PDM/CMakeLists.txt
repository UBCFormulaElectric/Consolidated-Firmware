#THIS FILE IS AUTO GENERATED FROM THE TEMPLATE! DO NOT CHANGE!
SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_VERSION 1)
cmake_minimum_required(VERSION 3.7)

# specify cross compilers and tools
SET(CMAKE_C_COMPILER_WORKS 1)
SET(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_ASM_COMPILER  arm-none-eabi-gcc)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_OBJDUMP arm-none-eabi-objdump)
set(SIZE arm-none-eabi-size)

SET(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/STM32F302R8Tx_FLASH.ld)

# Hardware floating point
SET(FPU_FLAGS "-mfloat-abi=hard -mfpu=fpv4-sp-d16")
add_definitions(-DARM_MATH_CM4 -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING)

# Enable assert_param macro in the HAL driver
add_definitions(-DUSE_FULL_ASSERT=1)

SET(COMMON_FLAGS
    "-mcpu=cortex-m4 ${FPU_FLAGS} -mthumb -mthumb-interwork -ffunction-sections -fdata-sections \
    -g -fno-common -fmessage-length=0 -Wall -Werror -Wextra -pedantic -specs=nosys.specs -specs=nano.specs")

SET(CMAKE_C_FLAGS_INIT ${COMMON_FLAGS})
SET(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,-gc-sections,--print-memory-usage -T ${LINKER_SCRIPT}")

PROJECT(PDM C ASM)
set(CMAKE_C_STANDARD 11)

add_definitions(-D__weak=__attribute__\(\(weak\)\) -D__packed=__attribute__\(\(__packed__\)\) -DUSE_HAL_DRIVER -DSTM32F302x8)
# TODO (#356): Remove when shared libraries are rewritten
add_definitions(-DPDM)

# The source files and header files are sorted into 3 groups:
#   1. Board-specific code: For example, App_StateMachine.c.
#   2. Shared code: Everything under src/shared/.
#   3. STM32CubeMX driver code: Drivers generated by STM32CubeMX that we do not
#      want to modify at all.
# The groupings allow us to set different compiler and linker options for each
# group. The main goal is to to enable warnings as errors (-Werror) for all
# files, but the STM32CubeMX driver code violates a handful of warnings. The
# solution is to suppress warnings for the STM32CubeMX driver code.

# 1. Board-specific code
file(GLOB_RECURSE SOURCES "Src/*.*")
include_directories(Inc Drivers/STM32F3xx_HAL_Driver/Inc Drivers/STM32F3xx_HAL_Driver/Inc/Legacy Middlewares/Third_Party/FreeRTOS/Source/include Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F Drivers/CMSIS/Device/ST/STM32F3xx/Include Drivers/CMSIS/Include)

# 2. Shared code
add_subdirectory(${CMAKE_SOURCE_DIR}/../shared __shared__)
include_directories(${SHARED_INCLUDE_DIRS})

# 3. STM32CubeMX driver code
file(GLOB_RECURSE STM32CUBEMX_DRIVER_SRCS "startup/*.*" "Middlewares/*.*" "Drivers/*.*" "Src/syscalls.c")

# Suppress source file warnings for STM32CubeMX drivers using -w compiler flag
set_source_files_properties(${STM32CUBEMX_DRIVER_SRCS} PROPERTIES COMPILE_FLAGS "-w")

# Suppress header file warnings for STM32CubeMX drivers by marking them as SYSTEM includes
include_directories(SYSTEM Drivers/STM32F3xx_HAL_Driver/Inc Drivers/STM32F3xx_HAL_Driver/Inc/Legacy Middlewares/Third_Party/FreeRTOS/Source/include Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F Drivers/CMSIS/Device/ST/STM32F3xx/Include Drivers/CMSIS/Include)

add_executable(${PROJECT_NAME}.elf ${SOURCES} ${STM32CUBEMX_DRIVER_SRCS} ${SHARED_SRCS} ${LINKER_SCRIPT})

set(CMAKE_EXE_LINKER_FLAGS
    "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map")

set(HEX_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.hex)
set(BIN_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.bin)
set(ASM_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.asm)

add_custom_command(TARGET ${PROJECT_NAME}.elf POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:${PROJECT_NAME}.elf> ${HEX_FILE}
        COMMAND ${CMAKE_OBJCOPY} -Obinary $<TARGET_FILE:${PROJECT_NAME}.elf> ${BIN_FILE}
        COMMAND ${CMAKE_OBJDUMP} -DS $<TARGET_FILE:${PROJECT_NAME}.elf> > ${ASM_FILE}
        COMMENT "
Building ${HEX_FILE}
Building ${BIN_FILE}
Building ${ASM_FILE}")

add_custom_target(UPLOAD
        arm-none-eabi-gdb -iex "target remote tcp:127.0.0.1:3333"
        -iex "monitor program $<TARGET_FILE:${PROJECT_NAME}.elf>"
        -iex "monitor reset init"
        -iex "disconnect" -iex "quit")
