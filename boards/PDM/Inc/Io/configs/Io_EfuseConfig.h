#pragma once

// Macros to set/clear register bits with an explicit cast to uint16_t
#define SET_BIT_UINT16(REG, BIT) ((REG) = (uint16_t)((REG) | (BIT)))
#define CLEAR_BIT_UINT16(REG, BIT) ((REG) = (uint16_t)((REG) & ~(BIT)))

// Register data masks
#define EFUSE_ADDR_MASK 0xFU
#define EFUSE_ADDR_SHIFT 0x0AU
#define EFUSE_SI_DATA_MASK 0x1FFU
#define EFUSE_SO_DATA_MASK 0xFF // Ignore Normal-Mode status bit (bit 9)

#define WATCHDOG_BIT (1U << 15U)
#define PARITY_BIT (1U << 14U)

// Serial input register addresses

// STATR_s input address
#define SI_STATR_0_ADDR 0x00U
#define SI_STATR_1_ADDR 0x08U

#define SOA0_MASK 0x01U
#define SOA1_MASK 0x02U
#define SOA2_MASK 0x04U
#define SOA3_MASK 0x08U

#define SOA0_SHIFT 0x00U
#define SOA1_SHIFT 0x01U
#define SOA2_SHIFT 0x02U
#define SOA3_SHIFT 0x0DU

// PWMR_s input address
#define SI_PWMR_0_ADDR 0x01U
#define SI_PWMR_1_ADDR 0x09U

#define PWM0_S_MASK 0x01U
#define PWM1_S_MASK 0x02U
#define PWM2_S_MASK 0x04U
#define PWM3_S_MASK 0x08U
#define PWM4_S_MASK 0x10U
#define PWM5_S_MASK 0x20U
#define PWM6_S_MASK 0x40U
#define PWM7_S_MASK 0x80U
#define ON_S_MASK 0x100U

#define PWM0_S_SHIFT 0x00U
#define PWM1_S_SHIFT 0x01U
#define PWM2_S_SHIFT 0x02U
#define PWM3_S_SHIFT 0x03U
#define PWM4_S_SHIFT 0x04U
#define PWM5_S_SHIFT 0x05U
#define PWM6_S_SHIFT 0x06U
#define PWM7_S_SHIFT 0x07U
#define ON_S_SHIFT 0x08U

// CONFR_s input address
#define SI_CONFR_0_ADDR 0x02U
#define SI_CONFR_1_ADDR 0x0AU

#define DELAY0_S_MASK 0x01U
#define DELAY1_S_MASK 0x02U
#define DELAY2_S_MASK 0x04U
#define SR0_S_MASK 0x08U
#define SR1_S_MASK 0x10U
#define DIR_DIS_S_MASK 0x20U
#define OLOFF_DIS_S_MASK 0x40U
#define OLON_DIS_S_MASK 0x80U
#define OS_DIS_S_MASK 0x100U

#define DELAY0_S_SHIFT 0x00U
#define DELAY1_S_SHIFT 0x01U
#define DELAY2_S_SHIFT 0x02U
#define SR0_S_SHIFT 0x03U
#define SR1_S_SHIFT 0x04U
#define DIR_DIS_S_SHIFT 0x05U
#define OLOFF_DIS_S_SHIFT 0x06U
#define OLON_DIS_S_SHIFT 0x07U
#define OS_DIS_S_SHIFT 0x08U

// OCR_s input address
#define SI_OCR_0_ADDR 0x04U
#define SI_OCR_1_ADDR 0x0CU

#define OCL_S_MASK 0x01U
#define OCM_S_MASK 0x02U
#define OCH_S_MASK 0x04U
#define T_OCM_S_MASK 0x08U
#define T_OCH_S_MASK 0x10U
#define CSNS_RATIO_S_MASK 0x20U
#define CLOCK_INT_S_MASK 0x40U
#define PR_S_MASK 0x80U
#define HOCR_S_MASK 0x100U

#define OCL_S_SHIFT 0x00U
#define OCM_S_SHIFT 0x01U
#define OCH_S_SHIFT 0x02U
#define T_OCM_S_SHIFT 0x03U
#define T_OCH_S_SHIFT 0x04U
#define CSNS_RATIO_S_SHIFT 0x05U
#define CLOCK_INT_S_SHIFT 0x06U
#define PR_S_SHIFT 0x07U
#define HOCR_S_SHIFT 0x08U

// RETRY_s input address
#define SI_RETRY_0_ADDR 0x05U
#define SI_RETRY_1_ADDR 0x0DU

#define RETRY_S_MASK 0x01U
#define RETRY_UNLIMITED_S_MASK 0x02U
#define AUTO_PERIOD_0_S_MASK 0x04U
#define AUTO_PERIOD_1_S_MASK 0x08U
#define OFP_S_MASK 0x100U

#define RETRY_S_SHIFT 0x00U
#define RETRY_UNLIMITED_S_SHIFT 0x01U
#define AUTO_PERIOD_0_S_SHIFT 0x02U
#define AUTO_PERIOD_1_S_SHIFT 0x03U
#define OFP_S_SHIFT 0x08U

// GCR_s input address
#define SI_GCR_ADDR 0x06U

#define OV_DIS_MASK 0x01U
#define CSNS0_EN_MASK 0x02U
#define CSNS1_EN_MASK 0x04U
#define VDD_FAIL_EN_MASK 0x08U
#define WD_DIS_MASK 0x10U
#define T_H_EN_MASK 0x20U
#define PARALLEL_MASK 0x40U
#define PWM_EN_0_MASK 0x80U
#define PWM_EN_1_MASK 0x100U

#define OV_DIS_SHIFT 0x00U
#define CSNS0_EN_SHIFT 0x01U
#define CSNS1_EN_SHIFT 0x02U
#define VDD_FAIL_EN_SHIFT 0x03U
#define WD_DIS_SHIFT 0x04U
#define T_H_EN_SHIFT 0x05U
#define PARALLEL_SHIFT 0x06U
#define PWM_EN_0_SHIFT 0x07U
#define PWM_EN_1_SHIFT 0x08U

// CALR_s input address
#define SI_CALR_0_ADDR 0x07U
#define SI_CALR_1_ADDR 0x0FU
#define CALR_MASK 0x15BU

// Serial output register addresses

// STATR output address
#define SO_STATR_ADDR 0x00U

#define SO_OUT0_MASK 0x01U
#define SO_OUT1_MASK 0x02U
#define SO_FAULT0_MASK 0x04U
#define SO_FAULT1_MASK 0x08U
#define SO_R_FULL0_MASK 0x10U
#define SO_R_FULL1_MASK 0x20U
#define SO_POR_MASK 0x40U
#define SO_UV_MASK 0x80U
#define SO_OV_MASK 0x100U

#define SO_OUT0_SHIFT 0x00U
#define SO_OUT1_SHIFT 0x01U
#define SO_FAULT0_SHIFT 0x02U
#define SO_FAULT1_SHIFT 0x03U
#define SO_R_FULL0_SHIFT 0x04U
#define SO_R_FULL1_SHIFT 0x05U
#define SO_POR_SHIFT 0x06U
#define SO_UV_SHIFT 0x07U
#define SO_OV_SHIFT 0x08U

// FAULTR_r output address
#define SO_FAULTR_0_ADDR 0x01U
#define SO_FAULTR_1_ADDR 0x09U

#define SO_OC_S_MASK 0x01U
#define SO_SC_S_MASK 0x02U
#define SO_OT_S_MASK 0x04U
#define SO_OS_S_MASK 0x08U
#define SO_OLOFF_MASK 0x10U
#define SO_OLON_MASK 0x20U
#define SO_OTW_MASK 0x100U

#define SO_OC_S_SHIFT 0x01U
#define SO_SC_S_SHIFT 0x02U
#define SO_OT_S_SHIFT 0x03U
#define SO_OS_S_SHIFT 0x04U
#define SO_OLOFF_SHIFT 0x05U
#define SO_OLON_SHIFT 0x06U
#define SO_OTW_SHIFT 0x08U

// PWMR_s output address
#define SO_PWMR_0_ADDR 0x02U
#define SO_PWMR_1_ADDR 0x0AU

#define SO_PWM_S_MASK 0xFFU
#define SO_ON_S_MASK 0x100U

#define SO_PWM_S_SHIFT 0x00U
#define SO_ON_S_SHIFT 0x08U

// CONFR_s output address
#define SO_CONFR_0_ADDR 0x03U
#define SO_CONFR_1_ADDR 0x0BU

#define SO_DELAY_S_MASK 0x07U
#define SO_SR_S_MASK 0x18U
#define SO_DIR_DIS_S_MASK 0x20U
#define SO_OLOFF_DIS_S_MASK 0x40U
#define SO_OLON_DIS_S_MASK 0x80U
#define SO_OS_DIS_S_MASK 0x100U

#define SO_DELAY_S_SHIFT 0x00U
#define SO_SR_S_SHIFT 0x03U
#define SO_DIR_DIS_S_SHIFT 0x05U
#define SO_OLOFF_DIS_S_SHIFT 0x06U
#define SO_OLON_DIS_S_SHIFT 0x07U
#define SO_OS_DIS_S_SHIFT 0x08U

// OCR_s output address
#define SO_OCR_0_ADDR 0x04U
#define SO_OCR_1_ADDR 0x0CU

#define SO_OCL_S_MASK 0x01U
#define SO_OCM_S_MASK 0x02U
#define SO_OCH_S_MASK 0x04U
#define SO_T_COM_S_MASK 0x08U
#define SO_T_OCH_S_MASK 0x10U
#define SO_CSNS_RATIO_S_MASK 0x20U
#define SO_CLOCK_INT_S_MASK 0x40U
#define SO_PR_S_MASK 0x80U
#define SO_HOCR_S_MASK 0x100U

#define SO_OCL_S_SHIFT 0x00U
#define SO_OCM_S_SHIFT 0x01U
#define SO_OCH_S_SHIFT 0x02U
#define SO_T_COM_S_SHIFT 0x03U
#define SO_T_COH_S_SHIFT 0x04U
#define SO_CSNS_RATIO_S_SHIFT 0x05U
#define SO_CLOCK_INT_S_SHIFT 0x06U
#define SO_PR_S_SHIFT 0x07U
#define SO_HOCR_S_SHIFT 0x08U

// RETRYR_S output address
#define SO_RETRYR_0_ADDR 0x05U
#define SO_RETRYR_1_ADDR 0x0DU

#define SO_RETRY_S_MASK 0x01U
#define SO_RETRY_UNLIMITED_S_MASK 0x02U
#define SO_AUTO_PERIOD_S_MASK 0x0CU
#define SO_R_MASK 0xF0U
#define SO_OFP_MASK 0x100U

#define SO_RETRY_S_SHIFT 0x00U
#define SO_RETRY_UNLIMITED_S_SHIFT 0x01U
#define SO_AUTO_PERIOD_S_SHIFT 0x02U
#define SO_R_SHIFT 0x04U
#define SO_OFP_SHIFT 0x08U

// GCR output address
#define SO_GCR_ADDR 0x06U

#define SO_OV_DIS_MASK 0x01U
#define SO_CSNS_EN_MASK 0x06U
#define SO_VDD_FAIL_EN_MASK 0x08U
#define SO_WD_DIS_MASK 0x10U
#define SO_T_H_EN_MASK 0x20U
#define SO_PARALLEL_MASK 0x40U
#define SO_PWM_EN_0_MASK 0x80U
#define SO_PWM_EN_1_MASK 0x100U

#define SO_OV_DIS_SHIFT 0x00U
#define SO_CSNS_EN_SHIFT 0x01U
#define SO_VDD_FAIL_EN_SHIFT 0x03U
#define SO_WD_DIS_SHIFT 0x04U
#define SO_T_H_EN_SHIFT 0x05U
#define SO_PARALLEL_SHIFT 0x06U
#define SO_PWM_EN_0_SHIFT 0x07U
#define SO_PWM_EN_1_SHIFT 0x08U

// DIAGR output address
#define SO_DIAGR_ADDR 0x07U

#define SO_CAL_FAIL0_MASK 0x01U
#define SO_CAL_FAIL1_MASK 0x02U
#define SO_CLOCK_FAIL_MASK 0x04U
#define SO_IN0_MASK 0x08U
#define SO_IN1_MASK 0x10U
#define SO_ID0_MASK 0x20U
#define SO_ID1_MASK 0x40U
#define SO_CONF0_MASK 0x80U
#define SO_CONF1_MASK 0x100U

#define SO_CAL_FAIL0_SHIFT 0x00U
#define SO_CAL_FAIL1_SHIFT 0x01U
#define SO_CLOCK_FAIL_SHIFT 0x02U
#define SO_IN0_SHIFT 0x03U
#define SO_IN1_SHIFT 0x04U
#define SO_ID0_SHIFT 0x05U
#define SO_ID1_SHIFT 0x06U
#define SO_CONF0_SHIFT 0x07U
#define SO_CONF1_SHIFT 0x08U

// Feature definitions in CONFR_s register
#define SWITCH_ON_DELAY_NO_DELAY 0x00U
#define SWITCH_ON_DELAY_32_PWM_CLOCKS 0x01U
#define SWITCH_ON_DELAY_64_PWM_CLOCKS 0x02U
#define SWITCH_ON_DELAY_96_PWM_CLOCKS 0x03U
#define SWITCH_ON_DELAY_128_PWM_CLOCKS 0x04U
#define SWITCH_ON_DELAY_160_PWM_CLOCKS 0x05U
#define SWITCH_ON_DELAY_192_PWM_CLOCKS 0x06U
#define SWITCH_ON_DELAY_224_PWM_CLOCKS 0x07U

#define SLEW_RATE_LOW (0x01 << SR0_S_SHIFT)
#define SLEW_RATE_MEDIUM (0x00 << SR0_S_SHIFT)
#define SLEW_RATE_HIGH (0x03 << SR0_S_SHIFT)
#define SLEW_RATE_HIGH_MAX (0x02 << SR0_S_SHIFT)

#define DIRECT_CONTROL_ENABLE (0x00 << DIR_DIS_S_SHIFT)
#define DIRECT_CONTROL_DISABLE (0x01 << DIR_DIS_S_SHIFT)

#define OPEN_LOAD_DETECTION_OFF_ENABLE (0x00 << OLOFF_DIS_S_SHIFT)
#define OPEN_LOAD_DETECTION_OFF_DISABLE (0x01 << OLOFF_DIS_S_SHIFT)

#define OPEN_LOAD_DETECTION_ON_ENABLE (0x00 << OLON_DIS_S_SHIFT)
#define OPEN_LOAD_DETECTION_ON_DISABLE (0x01 << OLON_DIS_S_SHIFT)

#define SHORT_CIRCUIT_DETECTION_ENABLE (0x00 << OS_DIS_S_SHIFT)
#define SHORT_CIRCUIT_DETECTION_DISABLE (0x01 << OS_DIS_S_SHIFT)

// Feature definitions in OCR_s register
#define LOW_CURRENT_THRESHOLD_SELECT_IOCL1 ((0x00 << HOCR_S_SHIFT) | (0x01 << OCL_S_SHIFT))
#define LOW_CURRENT_THRESHOLD_SELECT_IOCL2 ((0x01 << HOCR_S_SHIFT) | (0x00 << OCL_S_SHIFT))
#define LOW_CURRENT_THRESHOLD_SELECT_IOCL3 ((0x01 << HOCR_S_SHIFT) | (0x01 << OCL_S_SHIFT))

#define MEDIUM_CURRENT_THRESHOLD_SELECT_IOCM1 (0x00 << OCM_S_SHIFT)
#define MEDIUM_CURRENT_THRESHOLD_SELECT_IOCM2 (0x01 << OCM_S_SHIFT)

#define HIGH_CURRENT_THRESHOLD_SELECT_IOCH1 (0x00 << OCH_S_SHIFT)
#define HIGH_CURRENT_THRESHOLD_SELECT_IOCH2 (0x01 << OCH_S_SHIFT)
// bulb
#define THRESHOLD_ACTIVATION_TIMES_T_OCH1_T_OCM1_L ((0x00 << T_OCH_S_SHIFT) | (0x00 << T_OCM_S_SHIFT))
#define THRESHOLD_ACTIVATION_TIMES_T_OCH1_T_OCM2_L ((0x00 << T_OCH_S_SHIFT) | (0x01 << T_OCM_S_SHIFT))
#define THRESHOLD_ACTIVATION_TIMES_T_OCH2_T_OCM1_L ((0x01 << T_OCH_S_SHIFT) | (0x00 << T_OCM_S_SHIFT))
#define THRESHOLD_ACTIVATION_TIMES_T_OCH2_T_OCM2_L ((0x01 << T_OCH_S_SHIFT) | (0x01 << T_OCM_S_SHIFT))
// dc motor
#define THRESHOLD_ACTIVATION_TIMES_T_OCM1_M ((0x00 << T_OCH_S_SHIFT) | (0x00 << T_OCM_s_SHIFT))
#define THRESHOLD_ACTIVATION_TIMES_T_OCM2_M ((0x00 << T_OCH_S_SHIFT) | (0x01 << T_OCM_S_SHIFT))
#define THRESHOLD_ACTIVATION_TIMES_T_OCH1 ((0x01 << T_OCH_S_SHIFT) | (0x00 << T_OCM_S_SHIFT))
#define THRESHOLD_ACTIVATION_TIMES_T_OCH2 ((0x01 << T_OCH_S_SHIFT) | (0x01 << T_OCM_S_SHIFT))

#define CURRENT_SENSE_RATIO_LOW (0x01 << CSNS_RATIO_S_SHIFT)
#define CURRENT_SENSE_RATIO_HIGH (0x00 << CSNS_RATIO_S_SHIFT)

#define PWM_CLOCK_SOURCE_INTERNAL (0x01 << CLOCK_INT_S_SHIFT)
#define PWM_CLOCK_SOURCE_EXTERNAL (0x00 << CLOCK_INT_S_SHIFT)

#define PWM_EXTERNAL_CLOCK_DIVIDER_256 (0x00 << PR_S_SHIFT)
#define PWM_EXTERNAL_CLOCK_DIVIDER_512 (0x01 << PR_S_SHIFT)

// Feature definitions in RETRY_s register
#define AUTO_RETRY_PERIOD_T_AUTO_00 ((0x00 << AUTO_PERIOD_1_S_SHIFT) | (0x00 << AUTO_PERIOD_0_S_SHIFT))
#define AUTO_RETRY_PERIOD_tAUTO_01 ((0x00 << AUTO_PERIOD_1_S_SHIFT) | (0x01 << AUTO_PERIOD_0_S_SHIFT))
#define AUTO_RETRY_PERIOD_T_AUTO_10 ((0x01 << AUTO_PERIOD_1_S_SHIFT) | (0x00 << AUTO_PERIOD_0_S_SHIFT))
#define AUTO_RETRY_PERIOD_T_AUTO_11 ((0x01 << AUTO_PERIOD_1_S_SHIFT) | (0x01 << AUTO_PERIOD_0_S_SHIFT))

#define AUTO_RETRY_NUMBER_16 (0x00 << RETRY_UNLIMITED_S_SHIFT)
#define AUTO_RETRY_NUMBER_INFINITE (0x01 << RETRY_UNLIMITED_S_SHIFT)
#define AUTO_RETRY_BULB_ENABLED (0x00 << RETRY_S_SHIFT)
#define AUTO_RETRY_BULB_DISABLED (0x01 << RETRY_S_SHIFT)
#define AUTO_RETRY_DC_MOTOR_ENABLED (0x01 << RETRY_S_SHIFT)
#define AUTO_RETRY_DC_MOTOR_DISABLED (0x00 << RETRY_S_SHIFT)

#define RANDOM_CURRENT_OFFSET_ADD (0x01 << OFP_S_SHIFT)
#define RANDOM_CURRENT_OFFSET_SUBTRACT (0x00 << OFP_S_SHIFT)

// Feature definitions in GCR register
#define OVERVOLTAGE_PROTECTION_ENABLE (0x00 << OV_DIS_SHIFT)
#define OVERVOLTAGE_PROTECTION_DISABLE (0x01 << OV_DIS_SHIFT)

#define CSNS_FUNCTION_DISABLED ((0x00 << CSNS1_EN_SHIFT) | (0x00 << CSNS0_EN_SHIFT))
#define CSNS_FUNCTION_CURRENT_CH0 ((0x00 << CSNS1_EN_SHIFT) | (0x01 << CSNS0_EN_SHIFT))
#define CSNS_FUNCTION_CURRENT_CH1 ((0x01 << CSNS1_EN_SHIFT) | (0x00 << CSNS0_EN_SHIFT))
#define CSNS_FUNCTION_TEMPERATURE ((0x01 << CSNS1_EN_SHIFT) | (0x01 << CSNS0_EN_SHIFT))
#define CSNS_FUNCTION_CURRENT_SUM ((0x00 << CSNS1_EN_SHIFT) | (0x01 << CSNS0_EN_SHIFT))

#define VDD_FAILURE_DETECTION_ENABLE (0x01 << VDD_FAIL_EN_SHIFT)
#define VDD_FAILURE_DETECTION_DISABLE (0x00 << VDD_FAIL_EN_SHIFT)

#define WATCHDOG_DISABLE (0x01 << WD_DIS_SHIFT)
#define WATCHDOG_ENABLE (0x00 << WD_DIS_SHIFT)

#define TRACK_AND_HOLD_CURRENT_ENABLE (0x01 << T_H_EN_SHIFT)
#define TRACK_AND_HOLD_CURRENT_DISABLE (0x00 << T_H_EN_SHIFT)

#define PARALLEL_MODE_ENABLE (0x01 << PARALLEL_SHIFT)
#define PARALLEL_MODE_DISABLE (0x00 << PARALLEL_SHIFT)

#define PWM_CHANNEL_0_ENABLE (0x01 << PWM_EN_0_SHIFT)
#define PWM_CHANNEL_0_DISABLE (0x00 << PWM_EN_0_SHIFT)

#define PWM_CHANNEL_1_ENABLE (0x01 << PWM_EN_1_SHIFT)
#define PWM_CHANNEL_1_DISABLE (0x00 << PWM_EN_1_SHIFT)

// Configuration values used for initializing the registers

// Global Configuration
#define GCR_CONFIG                                                                                            \
    (PWM_CHANNEL_0_DISABLE | PWM_CHANNEL_1_DISABLE | PARALLEL_MODE_DISABLE | TRACK_AND_HOLD_CURRENT_DISABLE | \
     WATCHDOG_DISABLE | VDD_FAILURE_DETECTION_ENABLE | CSNS_FUNCTION_DISABLED | OVERVOLTAGE_PROTECTION_ENABLE)

// Channel Configurations
#define RETRY_CONFIG                                                                             \
    (RANDOM_CURRENT_OFFSET_SUBTRACT | AUTO_RETRY_NUMBER_INFINITE | AUTO_RETRY_PERIOD_T_AUTO_10 | \
     AUTO_RETRY_DC_MOTOR_DISABLED)
#define CONFR_CONFIG                                                                                   \
    (SHORT_CIRCUIT_DETECTION_ENABLE | OPEN_LOAD_DETECTION_ON_ENABLE | OPEN_LOAD_DETECTION_OFF_ENABLE | \
     DIRECT_CONTROL_ENABLE | SWITCH_ON_DELAY_NO_DELAY | SLEW_RATE_MEDIUM)
#define OCR_LOW_CURRENT_SENSE_CONFIG                                                                           \
    (PWM_EXTERNAL_CLOCK_DIVIDER_256 | PWM_CLOCK_SOURCE_EXTERNAL | THRESHOLD_ACTIVATION_TIMES_T_OCH1_T_OCM1_L | \
     MEDIUM_CURRENT_THRESHOLD_SELECT_IOCM2 | LOW_CURRENT_THRESHOLD_SELECT_IOCL2 |                              \
     HIGH_CURRENT_THRESHOLD_SELECT_IOCH2 | CURRENT_SENSE_RATIO_LOW)
#define OCR_HIGH_CURRENT_SENSE_CONFIG                                                                          \
    (PWM_EXTERNAL_CLOCK_DIVIDER_256 | PWM_CLOCK_SOURCE_EXTERNAL | THRESHOLD_ACTIVATION_TIMES_T_OCH1_T_OCM1_L | \
     MEDIUM_CURRENT_THRESHOLD_SELECT_IOCM2 | LOW_CURRENT_THRESHOLD_SELECT_IOCL3 |                              \
     HIGH_CURRENT_THRESHOLD_SELECT_IOCH2 | CURRENT_SENSE_RATIO_HIGH)
