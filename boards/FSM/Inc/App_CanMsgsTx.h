/**
 * @file  App_CanMsgsTx.h
 * @brief Auto-generated CAN transmit library
 * @note  This file is auto-generated for FSM. !!! Do not modify !!!
 */
// clang-format off
#ifndef CANMSGS_TX_H
#define CANMSGS_TX_H
/******************************************************************************
 * Includes
 ******************************************************************************/
#include <stdint.h>
#include <stdbool.h>
#include "CanMsgs.h"
/******************************************************************************
 * Typedefs
 ******************************************************************************/
/**
 * @brief Function pointer for CAN payload packing function.
 * @note  This is supposed to match the function signature of the _pack
 *        functions generated by cantools. However, the second parameter of each
 *        _pack function is unique to each message struct but we must have one
 *        function pointer that works with every _pack function. The solution
 *        is to forcibly cast the type as void *.
 */
typedef int (*pack_payload_fn_ptr)(uint8_t *, const void *, size_t);

/**
 * @brief CAN transmit message table entry with the necessary information to
 *        send a CAN message periodically.
 */
struct CanTxPeriodicTableEntry
{
    pack_payload_fn_ptr pack_payload_fn;
    uint32_t stdid;
    uint32_t dlc;
    uint32_t period;
    const void * payload;
};

/** @brief A collection of all CAN messages being transmitted from FSM. */
struct CanTxPayloads
{
    struct CanMsgs_fsm_errors_t fsm_errors;
    struct CanMsgs_fsm_can_tx_fifo_overflow_t fsm_can_tx_fifo_overflow;
    struct CanMsgs_fsm_startup_t fsm_startup; /* Warning: This DLC of this message is 0 so its struct contains only a dummy variable */
    struct CanMsgs_fsm_air_shutdown_t fsm_air_shutdown; /* Warning: This DLC of this message is 0 so its struct contains only a dummy variable */
    struct CanMsgs_fsm_heartbeat_t fsm_heartbeat; /* Warning: This DLC of this message is 0 so its struct contains only a dummy variable */
};

/******************************************************************************
 * Function Prototypes
 ******************************************************************************/
/**
 * @brief Sends out periodic CAN messages according to the cycle time specified
 *        in the DBC. This should be called in a 1kHz task.
 */
void App_CanMsgsTx_PeriodicTransmit(void);

/**
 * @brief  Getter function for CAN transmit table
 * @return Pointer to CAN transmit table
 */
struct CanTxPeriodicTableEntry *App_CanMsgsTx_GetCanTxPeriodicTable(void);

/**
 * @brief Getter function for CAN transmit payloads (Non-periodic and periodic)
 * @return Pointer to CAN transmit payloads
 */
struct CanTxPayloads *App_CanMsgsTx_GetCanTxPayloads(void);

#endif /* CANMSGS_TX_H */
