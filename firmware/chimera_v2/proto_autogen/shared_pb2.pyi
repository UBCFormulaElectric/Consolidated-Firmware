"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from . import f4dev_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GpioNetName(google.protobuf.message.Message):
    """GPIOs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    F4DEV_NET_NAME_FIELD_NUMBER: builtins.int
    f4dev_net_name: f4dev_pb2.GpioNetName.ValueType

    def __init__(self, *, f4dev_net_name: f4dev_pb2.GpioNetName.ValueType=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['f4dev_net_name', b'f4dev_net_name', 'name', b'name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['f4dev_net_name', b'f4dev_net_name', 'name', b'name']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['name', b'name']) -> typing.Literal['f4dev_net_name'] | None:
        ...
global___GpioNetName = GpioNetName

@typing.final
class GpioReadRequest(google.protobuf.message.Message):
    """GPIO read request/response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_NAME_FIELD_NUMBER: builtins.int

    @property
    def net_name(self) -> global___GpioNetName:
        ...

    def __init__(self, *, net_name: global___GpioNetName | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['net_name', b'net_name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['net_name', b'net_name']) -> None:
        ...
global___GpioReadRequest = GpioReadRequest

@typing.final
class GpioReadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.bool

    @property
    def net_name(self) -> global___GpioNetName:
        ...

    def __init__(self, *, net_name: global___GpioNetName | None=..., value: builtins.bool=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['net_name', b'net_name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['net_name', b'net_name', 'value', b'value']) -> None:
        ...
global___GpioReadResponse = GpioReadResponse

@typing.final
class GpioWriteRequest(google.protobuf.message.Message):
    """GPIO write request/response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.bool

    @property
    def net_name(self) -> global___GpioNetName:
        ...

    def __init__(self, *, net_name: global___GpioNetName | None=..., value: builtins.bool=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['net_name', b'net_name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['net_name', b'net_name', 'value', b'value']) -> None:
        ...
global___GpioWriteRequest = GpioWriteRequest

@typing.final
class GpioWriteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_CONFIRMATION_FIELD_NUMBER: builtins.int

    @property
    def request_confirmation(self) -> global___GpioWriteRequest:
        ...

    def __init__(self, *, request_confirmation: global___GpioWriteRequest | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['request_confirmation', b'request_confirmation']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['request_confirmation', b'request_confirmation']) -> None:
        ...
global___GpioWriteResponse = GpioWriteResponse

@typing.final
class AdcNetName(google.protobuf.message.Message):
    """ADCs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    F4DEV_NET_NAME_FIELD_NUMBER: builtins.int
    f4dev_net_name: f4dev_pb2.AdcNetName.ValueType

    def __init__(self, *, f4dev_net_name: f4dev_pb2.AdcNetName.ValueType=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['f4dev_net_name', b'f4dev_net_name', 'name', b'name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['f4dev_net_name', b'f4dev_net_name', 'name', b'name']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['name', b'name']) -> typing.Literal['f4dev_net_name'] | None:
        ...
global___AdcNetName = AdcNetName

@typing.final
class AdcReadRequest(google.protobuf.message.Message):
    """ADC read request/response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_NAME_FIELD_NUMBER: builtins.int

    @property
    def net_name(self) -> global___AdcNetName:
        ...

    def __init__(self, *, net_name: global___AdcNetName | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['net_name', b'net_name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['net_name', b'net_name']) -> None:
        ...
global___AdcReadRequest = AdcReadRequest

@typing.final
class AdcReadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.float

    @property
    def net_name(self) -> global___AdcNetName:
        ...

    def __init__(self, *, net_name: global___AdcNetName | None=..., value: builtins.float=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['net_name', b'net_name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['net_name', b'net_name', 'value', b'value']) -> None:
        ...
global___AdcReadResponse = AdcReadResponse

@typing.final
class I2cNetName(google.protobuf.message.Message):
    """I2Cs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    F4DEV_NET_NAME_FIELD_NUMBER: builtins.int
    f4dev_net_name: f4dev_pb2.I2cNetName.ValueType

    def __init__(self, *, f4dev_net_name: f4dev_pb2.I2cNetName.ValueType=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['f4dev_net_name', b'f4dev_net_name', 'name', b'name']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['f4dev_net_name', b'f4dev_net_name', 'name', b'name']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['name', b'name']) -> typing.Literal['f4dev_net_name'] | None:
        ...
global___I2cNetName = I2cNetName

@typing.final
class ChimeraV2Request(google.protobuf.message.Message):
    """Wrapper around all messages"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    GPIO_READ_FIELD_NUMBER: builtins.int
    GPIO_WRITE_FIELD_NUMBER: builtins.int
    ADC_READ_FIELD_NUMBER: builtins.int

    @property
    def gpio_read(self) -> global___GpioReadRequest:
        ...

    @property
    def gpio_write(self) -> global___GpioWriteRequest:
        ...

    @property
    def adc_read(self) -> global___AdcReadRequest:
        ...

    def __init__(self, *, gpio_read: global___GpioReadRequest | None=..., gpio_write: global___GpioWriteRequest | None=..., adc_read: global___AdcReadRequest | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['adc_read', b'adc_read', 'gpio_read', b'gpio_read', 'gpio_write', b'gpio_write', 'payload', b'payload']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['adc_read', b'adc_read', 'gpio_read', b'gpio_read', 'gpio_write', b'gpio_write', 'payload', b'payload']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['payload', b'payload']) -> typing.Literal['gpio_read', 'gpio_write', 'adc_read'] | None:
        ...
global___ChimeraV2Request = ChimeraV2Request

@typing.final
class ChimeraV2Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    GPIO_READ_FIELD_NUMBER: builtins.int
    GPIO_WRITE_FIELD_NUMBER: builtins.int
    ADC_READ_FIELD_NUMBER: builtins.int

    @property
    def gpio_read(self) -> global___GpioReadResponse:
        ...

    @property
    def gpio_write(self) -> global___GpioWriteResponse:
        ...

    @property
    def adc_read(self) -> global___AdcReadResponse:
        ...

    def __init__(self, *, gpio_read: global___GpioReadResponse | None=..., gpio_write: global___GpioWriteResponse | None=..., adc_read: global___AdcReadResponse | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['adc_read', b'adc_read', 'gpio_read', b'gpio_read', 'gpio_write', b'gpio_write', 'payload', b'payload']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['adc_read', b'adc_read', 'gpio_read', b'gpio_read', 'gpio_write', b'gpio_write', 'payload', b'payload']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['payload', b'payload']) -> typing.Literal['gpio_read', 'gpio_write', 'adc_read'] | None:
        ...
global___ChimeraV2Response = ChimeraV2Response