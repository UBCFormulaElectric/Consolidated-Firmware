name: Push Release
description: Push a release to the repo under a given tag
inputs:
  files:
    description: The files to upload (must exist in the current working directory)
    required: true
  tag_name:
    description: The tag to push the release to
    required: true
  title:
    description: The title of the release
    required: true
  body:
    description: The body of the release
    required: true
  latest:
    description: Determine if this release should be marked as latest
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Log GitHub Actions Properties
      shell: bash
      run: |
        echo "BASE_REF: ${{ github.base_ref }} <- HEAD_REF: ${{github.head_ref}}"
        echo "SHA: ${{github.SHA}}"
        ls -l -a
    - name: Log GitHub Environment
      shell: bash
      run: |
        git status
        git log --oneline -n 10
        git rev-parse --verify HEAD
    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-setting-an-output-parameter
    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-a-multiline-string
    - name: Make file name one line
      shell: bash
      id: join_tag_name
      run: |
        FILE_NAMES="${{inputs.files}}"
        echo ${FILE_NAMES}
        echo file_names=${FILE_NAMES} >> $GITHUB_OUTPUT

# ========== MAKE RELEASE ==========
    - name: Delete ONE other releases on tag
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release delete ${{ inputs.tag_name }} --repo UBCFormulaElectric/Consolidated-Firmware --cleanup-tag --yes
      continue-on-error: true
    - name: Create Tag
      shell: bash
      run: |
        git tag ${{ inputs.tag_name }} -f
        git push origin ${{ inputs.tag_name }} -f
    - name: Create Release
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release create ${{ inputs.tag_name }} ${{ steps.join_tag_name.outputs.file_names }} \
          ${{inputs.latest == 'true' && '--latest' || '-p'}} \
          --title "${{inputs.title}}" \
          --notes "${{inputs.body}}" \
          --repo UBCFormulaElectric/Consolidated-Firmware
