name: UBC Formula Electric CI
on:
  pull_request:
    paths-ignore:
      - 'software/**'

jobs:
  clang-format:
    name: Check C Formatting
    runs-on: ubuntu-22.04

    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    steps:
      # Fix to get git diff working in a Docker container
      # https://github.com/actions/checkout/issues/363
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Format code
        run: python3 scripts/clang_format/fix_formatting.py

      - name: Check for differences
        run: git --no-pager diff --color --exit-code

  codegen:
    name: Check CubeMX Code Gen
    runs-on: ubuntu-22.04
    needs: [ clang-format ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - board: DIM
            ioc_dir: firmware/thruna/DIM/src/cubemx
          - board: FSM
            ioc_dir: firmware/thruna/FSM
          - board: PDM
            ioc_dir: firmware/thruna/PDM
          - board: DCM
            ioc_dir: firmware/thruna/DCM
          - board: BMS
            ioc_dir: firmware/thruna/BMS
          - board: f4dev
            ioc_dir: firmware/dev/f4dev/src/cubemx

    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    steps:
      # Fix to get git diff working in a Docker container
      # https://github.com/actions/checkout/issues/363
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v4

      # xvfb-run is required to prefix any commands that run STM32CubeMX
      # It fakes out a display, since STM32CubeMX throws an error if it doesn't detect a display
      - name: Generate code
        run: |
          echo "test: $GITHUB_WORKSPACE"
          xvfb-run python3 scripts/utilities/generate_cube_code.py \
            --board ${{ matrix.board }} \
            --log4j_properties_output ~/.stm32cubemx/log4j.properties \
            --ioc $GITHUB_WORKSPACE/${{ matrix.ioc_dir }}/${{ matrix.board }}.ioc \
            --codegen_output_dir $GITHUB_WORKSPACE/${{ matrix.ioc_dir }} \
            --cube_bin /usr/local/STM32CubeMX/STM32CubeMX

      - name: Fix formatting
        run: python3 scripts/clang_format/fix_formatting.py

      - name: Check for differences
        run: git --no-pager diff --color --exit-code

  build-firmware-thruna:
    needs: [ clang-format ]
    name: Build Firmware Binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
          - FSM
          - PDM
          - BMS
          - DCM
          - DIM
          - f4dev
    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.docker_token }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/build_binary
        with:
          board: ${{ matrix.board }}

  test-thruna:
    needs: [ clang-format ]
    name: Test Thruna
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        board:
          - FSM
          - PDM
          - BMS
          - DCM
          - DIM

    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    env:
      BUILD_DIR: build_x86

    steps:

      # Fix to ensure that commands like git status work in child directories 
      # for gitpython in git_commit_info
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=firmware -DTARGET=test -DHANDLE_DEPS=OFF
          make --directory=$BUILD_DIR -j`nproc` ${{ matrix.board }}_test

      - name: Run tests
        run: |
          cd $BUILD_DIR/firmware/thruna/${{ matrix.board }}
          valgrind --tool=memcheck --leak-check=yes ./${{ matrix.board }}_test

  test-shared:
    name: Test Shared
    runs-on: ubuntu-22.04
    needs: [ clang-format ]
    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    env:
      BUILD_DIR: build_x86

    steps:
      # Fix to ensure that commands like git status work in child directories 
      # for gitpython in git_commit_info
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=firmware -DTARGET=test -DHANDLE_DEPS=OFF
          make --directory=$BUILD_DIR -j`nproc` shared_test

      - name: Run tests
        run: |
          cd $BUILD_DIR/firmware/shared
          valgrind --tool=memcheck --leak-check=yes ./shared_test

  test-fakegen:
    name: Test Fake Function Generation
    runs-on: ubuntu-22.04
    needs: [ clang-format ]
    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    env:
      BUILD_DIR: build_x86

    steps:
      # Fix to ensure that commands like git status work in child directories 
      # for gitpython in git_commit_info
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=firmware -DTARGET=test -DNO_VENV=ON -DHANDLE_DEPS=OFF
          make --directory=$BUILD_DIR -j`nproc` fakegen_test

      - name: Run tests
        run: |
          cd $BUILD_DIR/scripts/code_generation/fakegen
