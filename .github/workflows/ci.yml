name: UBC Formula Electric CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  clang-format:
    name: Check C Formatting
    runs-on: ubuntu-22.04

    container:
      image: ubcformulaelectric/ci:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    steps:
      # Fix to get git diff working in a Docker container
      # https://github.com/actions/checkout/issues/363
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Format code
        run: python3 scripts/clang_format/fix_formatting.py

      - name: Check for differences
        run: git --no-pager diff --color --exit-code

  codegen:
    name: Check CubeMX Code Gen
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        board:
          - FSM
          - PDM
          - BMS
          - DCM
          - DIM
          - GSM

    container:
      image: ubcformulaelectric/ci:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    steps:
      # Fix to get git diff working in a Docker container
      # https://github.com/actions/checkout/issues/363
      - name: Setup git
        run: git config --global --add safe.directory $(realpath .)

      - name: Checkout repository
        uses: actions/checkout@v2

      # xvfb-run is required to prefix any commands that run STM32CubeMX
      # It fakes out a display, since STM32CubeMX throws an error if it doesn't detect a display
      - name: Generate code
        run: |
          xvfb-run python3 scripts/utilities/generate_cube_code.py \
            --board ${{ matrix.board }} \
            --log4j_properties_output ~/.stm32cubemx/log4j.properties \
            --ioc firmware/thruna/${{ matrix.board }}/${{ matrix.board }}.ioc \
            --codegen_output_dir firmware/thruna/${{ matrix.board }} \
            --cube_bin /usr/local/STM32CubeMX/STM32CubeMX

      - name: Fix formatting
        run: python3 scripts/clang_format/fix_formatting.py

      - name: Check for differences
        run: git --no-pager diff --color --exit-code

  build-firmware-thruna:
    name: Build Thruna Firmware
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        board:
          - FSM
          - PDM
          - BMS
          - DCM
          - DIM
          - GSM

    container:
      image: ubcformulaelectric/ci:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    env:
      BUILD_DIR: build_arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # xvfb-run is required to prefix any commands that run STM32CubeMX
      # It fakes out a display, since STM32CubeMX throws an error if it doesn't detect a display
      # Don't use Pipenv for Cmake since python packages are installed system-wide in the container
      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=arm -DNO_VENV=ON
          xvfb-run make --directory=$BUILD_DIR -j`nproc` ${{ matrix.board }}.elf

      # Uploads .elf binary to Github Actions workflow
      - name: Save built artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.board }}.elf
          path: ${{ env.BUILD_DIR }}/${{ matrix.board }}/${{ matrix.board }}.elf

  test-thruna:
    name: Test Thruna
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        board:
          - FSM
          - PDM
          - BMS
          - DCM
          - DIM
          - GSM

    container:
      image: ubcformulaelectric/ci:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    env:
      BUILD_DIR: build_x86

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=x86 -DNO_VENV=ON
          make --directory=$BUILD_DIR -j`nproc` ${{ matrix.board }}_test

      - name: Run tests
        run: |
          cd $BUILD_DIR/firmware/thruna/${{ matrix.board }}
          valgrind --tool=memcheck --leak-check=yes ./${{ matrix.board }}_test
  
  test-shared:
    name: Test Shared
    runs-on: ubuntu-22.04
    container:
      image: ubcformulaelectric/ci:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.DOCKER_TOKEN }}

    env:
      BUILD_DIR: build_x86

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=x86 -DNO_VENV=ON
          make --directory=$BUILD_DIR -j`nproc` shared_test

      - name: Run tests
        run: |
          cd $BUILD_DIR/firmware/shared
          valgrind --tool=memcheck --leak-check=yes ./shared_test
