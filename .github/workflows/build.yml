on:
  workflow_call:
    secrets:
      docker_token:
        required: true
    inputs:
      make-release:
        required: true
        type: boolean

jobs:
  build-firmware-thruna:
    name: Build Thruna Firmware
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        board:
          - FSM
          - PDM
          - BMS
          - DCM
          - DIM
          - GSM

    container:
      image: ubcformulaelectric/environment:latest
      credentials:
        username: ubcformulaelectric
        password: ${{ secrets.docker_token }}

    env:
      BUILD_DIR: build_arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # xvfb-run is required to prefix any commands that run STM32CubeMX
      # It fakes out a display, since STM32CubeMX throws an error if it doesn't detect a display
      # Don't use Pipenv for Cmake since python packages are installed system-wide in the container
      - name: Build
        run: |
          cmake -B $BUILD_DIR -DPLATFORM=arm -DNO_VENV=ON
          xvfb-run make --directory=$BUILD_DIR -j`nproc` ${{ matrix.board }}.elf

      # Uploads .elf binary to Github Actions workflow
      - name: Save built artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.board }}.elf
          path: ${{ env.BUILD_DIR }}/firmware/thruna/${{ matrix.board }}/${{ matrix.board }}.elf

      - name: Release
        if: ${{ inputs.make-release }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          tag: ${{ github.sha }}
          files: |
            ${{ env.BUILD_DIR }}/firmware/thruna/FSM/FSM.elf
            ${{ env.BUILD_DIR }}/firmware/thruna/PDM/PDM.elf
            ${{ env.BUILD_DIR }}/firmware/thruna/BMS/BMS.elf
            ${{ env.BUILD_DIR }}/firmware/thruna/DCM/DCM.elf
            ${{ env.BUILD_DIR }}/firmware/thruna/DIM/DIM.elf
            ${{ env.BUILD_DIR }}/firmware/thruna/GSM/GSM.elf
            can_bus/dbcs/CanMsgs.dbc