/**
 * @note This file is auto-generated. Do not modify!
 */
// clang-format off

/* ------------------------------- Includes ------------------------------- */

#include <math.h>
#include <string.h>
#include "app_canTx.h"

/* ------------------------------- Structs -------------------------------- */

/**
 * Struct for holding all tx_messages transmitted by BMS (i.e. the TX table).
 */
static struct
{
    {%- for msg in tx_messages %}
    {{ msg.c_type() }} {{ msg.name }}_signals;
    {%- endfor %}
} tx_table;

/* ------------------------- Function Definitions ------------------------- */

void app_canTx_init()
{
    memset(&tx_table, 0, sizeof(tx_table));
    {%- for msg in tx_messages %}
    {%- for signal in msg.signals %}
    app_canTx_{{ signal.name }}_set({{ signal.start_val_macro() }});
    {%- endfor %}
    {%- endfor %}
}

/* -------- UPDATE -------- */
{% for msg in tx_messages %}
{%- for signal in msg.signals %}
void app_canTx_{{ signal.name }}_set({{ signal.datatype() }} value)
{
    {%- if signal.representation() == "float" %}
    if (value == NAN)
    {
        return;
    }
    {%- endif %}
    // Clamp value to min/max
    {%- if signal.max_val is defined %}
    if (value >= {{ signal.max_val_macro() }})
    {
        value = {{ signal.max_val_macro() }};
    }
    {%- endif %}
    {%- if signal.min_val is defined %}
    if (value <= {{ signal.min_val_macro() }})
    {
        value = {{ signal.min_val_macro() }};
    }
    {%- endif %}
    tx_table.{{ msg.name }}_signals.{{ signal.name }}_value = value; // Set value
}
{%- endfor %}
{%- endfor %}

/* -------- GET -------- */
{% for msg in tx_messages %}
{%- for signal in msg.signals %}
{{ signal.datatype() }} app_canTx_{{ signal.name }}_get(void)
{
    return tx_table.{{ msg.name }}_signals.{{ signal.name }}_value;
}
{%- endfor %}
{%- endfor %}

{%- for msg in tx_messages %}
{{ msg.c_type() }}* app_canTx_{{ msg.name }}_getData()
{
    return &tx_table.{{ msg.name }}_signals;
}
{%- endfor %}