/**
 * @note This file is auto-generated. Do not modify!
 */
// clang-format off

#pragma once

/* ------------------------------- Includes ------------------------------- */

#include <stdbool.h>
#include <stdint.h>
#include "app_canUtils.h"

/* -------------------------------- Enums --------------------------------- */

typedef struct
{
    char* description;
    char* name;
    uint16_t id;
} Alert_Info;

/* ------------------------- Function Prototypes -------------------------- */

/* ----------- Infos -----------*/
{%- for info in tx_info %}
/**
 * Set or clear {{info.name}} for {{node_name}}.
 */
void app_canAlerts_{{info.name}}_set(bool set_alert);

/**
 * Return whether {{info.name}} transmitted by {{node_name}} is set.
 */
bool app_canAlerts_{{info.name}}_get(void);
{%- endfor %}

/* ----------- Warnings -----------*/
{%- for warning in tx_warnings %}
/**
 * Set or clear {{warning.name}} for {{node_name}}.
 */
void app_canAlerts_{{warning.name}}_set(bool set_alert);
/**
 * Return whether {{warning.name}} transmitted by {{node_name}} is set.
 */
bool app_canAlerts_{{warning.name}}_get(void);
{%- endfor %}

/* ----------- Faults -----------*/
{%- for fault in tx_faults %}
/**
 * Set or clear {{fault.name}} for {{node_name}}.
 */
void app_canAlerts_{{fault.name}}_set(bool set_alert);
/**
 * Return whether {{fault.name}} transmitted by {{node_name}} is set.
 */
bool app_canAlerts_{{fault.name}}_get(void);
{%- endfor %}


/**
 * Return whether or not a board has set a info.
 */
bool app_canAlerts_BoardHasInfo(CanNode board);
/**
 * Return whether or not a board has set a warning.
 */
bool app_canAlerts_BoardHasWarning(CanNode board);
/**
 * Return whether or not a board has set a fault.
 */
bool app_canAlerts_BoardHasFault(CanNode board);


/**
 * Return whether or not any board has set a info.
 */
bool app_canAlerts_AnyBoardHasInfo(void);
/**
 * Return whether or not any board has set a warning.
 */
bool app_canAlerts_AnyBoardHasWarning(void);
/**
 * Return whether or not any board has set a fault.
 */
bool app_canAlerts_AnyBoardHasFault(void);


/**
 * Fetches the info info into alert_array, returns amount of elements in alert_array.
 */
uint8_t app_canAlerts_InfoInfo(Alert_Info *alert_array);
/**
 * Fetches the warning info into alert_array, returns amount of elements in alert_array.
 */
uint8_t app_canAlerts_WarningInfo(Alert_Info *alert_array);
/**
 * Fetches the fault info into alert_array, returns amount of elements in alert_array.
 */
uint8_t app_canAlerts_FaultInfo(Alert_Info *alert_array);