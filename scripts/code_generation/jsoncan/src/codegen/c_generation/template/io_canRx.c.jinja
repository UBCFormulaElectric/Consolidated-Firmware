/**
 * @note This file is auto-generated. Do not modify!
 */
// clang-format off

/* ------------------------------- Includes ------------------------------- */

#include "io_canRx.h"
#include "app_canRx.h"
#include "app_canUtils.h"

/* ------------------------- Function Definitions ------------------------- */

bool io_canRx_filterMessageId(uint32_t std_id)
{
    bool is_found = false;
    switch (std_id)
    {
        case CAN_MSG_BRUSA_VITALS_ID:
        case CAN_MSG_CRIT_WARNINGS_ID:
        case CAN_MSG_CRIT_FAULTS_ID:
        case CAN_MSG_DEBUG_CAN_MODE_ID:
        case CAN_MSG_DEBUG_CHARGING_ID:
        case CAN_MSG_DEBUG_CELL_BALANCING_ID:
        case CAN_MSG_DEBUG_RESET_SOC_ID:
        case CAN_MSG_DEBUG_SET_BSPD_TEST_CURRENT_ID:
        case CAN_MSG_DIMOS_WARNINGS_ID:
        case CAN_MSG_DIMOS_FAULTS_ID:
        case CAN_MSG_FSM_WARNINGS_ID:
        case CAN_MSG_FSM_FAULTS_ID:
        case CAN_MSG_RSM_WARNINGS_ID:
        case CAN_MSG_RSM_FAULTS_ID:
        case CAN_MSG_VC_VITALS_ID:
        case CAN_MSG_VC_WARNINGS_ID:
        case CAN_MSG_VC_FAULTS_ID:
        {
            is_found = true;
            break;
        }
        default:
        {
            // Do nothing
            break;
        }
    }
    
    return is_found;
}

void io_canRx_updateRxTableWithMessage(JsonCanMsg* msg)
{
    switch (msg->std_id)
    {
        case CAN_MSG_BRUSA_VITALS_ID:
        {
            BRUSA_Vitals_Signals out_msg;
            app_canUtils_BRUSA_Vitals_unpack(msg->data, &out_msg);
            
            app_canRx_BRUSA_IsConnected_update(out_msg.BRUSA_IsConnected_value);
            app_canRx_BRUSA_Error_update(out_msg.BRUSA_Error_value);
            app_canRx_BRUSA_PowerLimitedWarning_update(out_msg.BRUSA_PowerLimitedWarning_value);
            break;
        }
        case CAN_MSG_CRIT_WARNINGS_ID:
        {
            CRIT_Warnings_Signals out_msg;
            app_canUtils_CRIT_Warnings_unpack(msg->data, &out_msg);
            
            app_canRx_CRIT_Warning_StackWaterMarkHighTask1Hz_update(out_msg.CRIT_Warning_StackWaterMarkHighTask1Hz_value);
            app_canRx_CRIT_Warning_StackWaterMarkHighTask100Hz_update(out_msg.CRIT_Warning_StackWaterMarkHighTask100Hz_value);
            app_canRx_CRIT_Warning_StackWaterMarkHighTask1kHz_update(out_msg.CRIT_Warning_StackWaterMarkHighTask1kHz_value);
            app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanRx_update(out_msg.CRIT_Warning_StackWaterMarkHighTaskCanRx_value);
            app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanTx_update(out_msg.CRIT_Warning_StackWaterMarkHighTaskCanTx_value);
            app_canRx_CRIT_Warning_WatchdogTimeout_update(out_msg.CRIT_Warning_WatchdogTimeout_value);
            app_canRx_CRIT_Warning_TxOverflow_update(out_msg.CRIT_Warning_TxOverflow_value);
            app_canRx_CRIT_Warning_RxOverflow_update(out_msg.CRIT_Warning_RxOverflow_value);
            break;
        }
        case CAN_MSG_CRIT_FAULTS_ID:
        {
            CRIT_Faults_Signals out_msg;
            app_canUtils_CRIT_Faults_unpack(msg->data, &out_msg);
            
            app_canRx_CRIT_Fault_MissingBMSHeartbeat_update(out_msg.CRIT_Fault_MissingBMSHeartbeat_value);
            app_canRx_CRIT_Fault_MissingFSMHeartbeat_update(out_msg.CRIT_Fault_MissingFSMHeartbeat_value);
            app_canRx_CRIT_Fault_MissingRSMHeartbeat_update(out_msg.CRIT_Fault_MissingRSMHeartbeat_value);
            app_canRx_CRIT_Fault_MissingVCHeartbeat_update(out_msg.CRIT_Fault_MissingVCHeartbeat_value);
            break;
        }
        case CAN_MSG_DEBUG_CAN_MODE_ID:
        {
            Debug_CanMode_Signals out_msg;
            app_canUtils_Debug_CanMode_unpack(msg->data, &out_msg);
            
            app_canRx_Debug_EnableDebugMode_update(out_msg.Debug_EnableDebugMode_value);
            break;
        }
        case CAN_MSG_DEBUG_CHARGING_ID:
        {
            Debug_Charging_Signals out_msg;
            app_canUtils_Debug_Charging_unpack(msg->data, &out_msg);
            
            app_canRx_Debug_StartCharging_update(out_msg.Debug_StartCharging_value);
            app_canRx_Debug_ClearChargerLatchedFault_update(out_msg.Debug_ClearChargerLatchedFault_value);
            app_canRx_Debug_FaultEncounteredOverride_update(out_msg.Debug_FaultEncounteredOverride_value);
            app_canRx_Debug_ChargingCurrentOverride_update(out_msg.Debug_ChargingCurrentOverride_value);
            app_canRx_Debug_ChargingVoltageOverride_update(out_msg.Debug_ChargingVoltageOverride_value);
            app_canRx_Debug_ChargingCurrentTargetValue_update(out_msg.Debug_ChargingCurrentTargetValue_value);
            app_canRx_Debug_ChargingVoltageTargetValue_update(out_msg.Debug_ChargingVoltageTargetValue_value);
            break;
        }
        case CAN_MSG_DEBUG_CELL_BALANCING_ID:
        {
            Debug_CellBalancing_Signals out_msg;
            app_canUtils_Debug_CellBalancing_unpack(msg->data, &out_msg);
            
            app_canRx_Debug_CellBalancingRequest_update(out_msg.Debug_CellBalancingRequest_value);
            app_canRx_Debug_CellBalancingOverrideTarget_update(out_msg.Debug_CellBalancingOverrideTarget_value);
            app_canRx_Debug_CellBalancingOverrideTargetValue_update(out_msg.Debug_CellBalancingOverrideTargetValue_value);
            app_canRx_Debug_CellBalancingOverridePWM_update(out_msg.Debug_CellBalancingOverridePWM_value);
            app_canRx_Debug_CellBalancingOverridePWMFrequency_update(out_msg.Debug_CellBalancingOverridePWMFrequency_value);
            app_canRx_Debug_CellBalancingOverridePWMDuty_update(out_msg.Debug_CellBalancingOverridePWMDuty_value);
            break;
        }
        case CAN_MSG_DEBUG_RESET_SOC_ID:
        {
            Debug_ResetSoc_Signals out_msg;
            app_canUtils_Debug_ResetSoc_unpack(msg->data, &out_msg);
            
            app_canRx_Debug_ResetSoc_MinCellV_update(out_msg.Debug_ResetSoc_MinCellV_value);
            app_canRx_Debug_ResetSoc_CustomEnable_update(out_msg.Debug_ResetSoc_CustomEnable_value);
            app_canRx_Debug_ResetSoc_CustomVal_update(out_msg.Debug_ResetSoc_CustomVal_value);
            break;
        }
        case CAN_MSG_DEBUG_SET_BSPD_TEST_CURRENT_ID:
        {
            Debug_SetBSPDTestCurrent_Signals out_msg;
            app_canUtils_Debug_SetBSPDTestCurrent_unpack(msg->data, &out_msg);
            
            app_canRx_Debug_EnableTestCurrent_update(out_msg.Debug_EnableTestCurrent_value);
            break;
        }
        case CAN_MSG_DIMOS_WARNINGS_ID:
        {
            dimos_Warnings_Signals out_msg;
            app_canUtils_dimos_Warnings_unpack(msg->data, &out_msg);
            
            break;
        }
        case CAN_MSG_DIMOS_FAULTS_ID:
        {
            dimos_Faults_Signals out_msg;
            app_canUtils_dimos_Faults_unpack(msg->data, &out_msg);
            
            break;
        }
        case CAN_MSG_FSM_WARNINGS_ID:
        {
            FSM_Warnings_Signals out_msg;
            app_canUtils_FSM_Warnings_unpack(msg->data, &out_msg);
            
            app_canRx_FSM_Warning_WatchdogTimeout_update(out_msg.FSM_Warning_WatchdogTimeout_value);
            app_canRx_FSM_Warning_TxOverflow_update(out_msg.FSM_Warning_TxOverflow_value);
            app_canRx_FSM_Warning_RxOverflow_update(out_msg.FSM_Warning_RxOverflow_value);
            app_canRx_FSM_Warning_StackWaterMarkHighTask1Hz_update(out_msg.FSM_Warning_StackWaterMarkHighTask1Hz_value);
            app_canRx_FSM_Warning_StackWaterMarkHighTask100Hz_update(out_msg.FSM_Warning_StackWaterMarkHighTask100Hz_value);
            app_canRx_FSM_Warning_StackWaterMarkHighTask1kHz_update(out_msg.FSM_Warning_StackWaterMarkHighTask1kHz_value);
            app_canRx_FSM_Warning_StackWaterMarkHighTaskCanRx_update(out_msg.FSM_Warning_StackWaterMarkHighTaskCanRx_value);
            app_canRx_FSM_Warning_StackWaterMarkHighTaskCanTx_update(out_msg.FSM_Warning_StackWaterMarkHighTaskCanTx_value);
            app_canRx_FSM_Warning_SteeringAngleOCSC_update(out_msg.FSM_Warning_SteeringAngleOCSC_value);
            app_canRx_FSM_Warning_SteeringAngleOutOfRange_update(out_msg.FSM_Warning_SteeringAngleOutOfRange_value);
            app_canRx_FSM_Warning_LeftWheelSpeedOutOfRange_update(out_msg.FSM_Warning_LeftWheelSpeedOutOfRange_value);
            app_canRx_FSM_Warning_RightWheelSpeedOutOfRange_update(out_msg.FSM_Warning_RightWheelSpeedOutOfRange_value);
            app_canRx_FSM_Warning_AppsDisagreement_update(out_msg.FSM_Warning_AppsDisagreement_value);
            app_canRx_FSM_Warning_FrontBrakePressureOutOfRange_update(out_msg.FSM_Warning_FrontBrakePressureOutOfRange_value);
            app_canRx_FSM_Warning_RearBrakePressureOutOfRange_update(out_msg.FSM_Warning_RearBrakePressureOutOfRange_value);
            app_canRx_FSM_Warning_FrontBrakePressureOcSc_update(out_msg.FSM_Warning_FrontBrakePressureOcSc_value);
            app_canRx_FSM_Warning_RearBrakePressureOcSc_update(out_msg.FSM_Warning_RearBrakePressureOcSc_value);
            app_canRx_FSM_Warning_BrakeOcScNotOk_update(out_msg.FSM_Warning_BrakeOcScNotOk_value);
            break;
        }
        case CAN_MSG_FSM_FAULTS_ID:
        {
            FSM_Faults_Signals out_msg;
            app_canUtils_FSM_Faults_unpack(msg->data, &out_msg);
            
            app_canRx_FSM_Fault_PappsOCSC_update(out_msg.FSM_Fault_PappsOCSC_value);
            app_canRx_FSM_Fault_SappsOCSC_update(out_msg.FSM_Fault_SappsOCSC_value);
            break;
        }
        case CAN_MSG_RSM_WARNINGS_ID:
        {
            RSM_Warnings_Signals out_msg;
            app_canUtils_RSM_Warnings_unpack(msg->data, &out_msg);
            
            app_canRx_RSM_Warning_WatchdogTimeout_update(out_msg.RSM_Warning_WatchdogTimeout_value);
            app_canRx_RSM_Warning_TxOverflow_update(out_msg.RSM_Warning_TxOverflow_value);
            app_canRx_RSM_Warning_RxOverflow_update(out_msg.RSM_Warning_RxOverflow_value);
            app_canRx_RSM_Warning_StackWaterMarkHighTask1Hz_update(out_msg.RSM_Warning_StackWaterMarkHighTask1Hz_value);
            app_canRx_RSM_Warning_StackWaterMarkHighTask100Hz_update(out_msg.RSM_Warning_StackWaterMarkHighTask100Hz_value);
            app_canRx_RSM_Warning_StackWaterMarkHighTask1kHz_update(out_msg.RSM_Warning_StackWaterMarkHighTask1kHz_value);
            app_canRx_RSM_Warning_StackWaterMarkHighTaskCanRx_update(out_msg.RSM_Warning_StackWaterMarkHighTaskCanRx_value);
            app_canRx_RSM_Warning_StackWaterMarkHighTaskCanTx_update(out_msg.RSM_Warning_StackWaterMarkHighTaskCanTx_value);
            app_canRx_RSM_Warning_FlowRateOutOfRange_update(out_msg.RSM_Warning_FlowRateOutOfRange_value);
            app_canRx_RSM_Warning_CoolantTempAOCSC_update(out_msg.RSM_Warning_CoolantTempAOCSC_value);
            app_canRx_RSM_Warning_CoolantTempBOCSC_update(out_msg.RSM_Warning_CoolantTempBOCSC_value);
            app_canRx_RSM_Warning_CoolantPressureAOCSC_update(out_msg.RSM_Warning_CoolantPressureAOCSC_value);
            app_canRx_RSM_Warning_CoolantPressureBOCSC_update(out_msg.RSM_Warning_CoolantPressureBOCSC_value);
            app_canRx_RSM_Warning_FlowMeterUnderflow_update(out_msg.RSM_Warning_FlowMeterUnderflow_value);
            break;
        }
        case CAN_MSG_RSM_FAULTS_ID:
        {
            RSM_Faults_Signals out_msg;
            app_canUtils_RSM_Faults_unpack(msg->data, &out_msg);
            
            app_canRx_RSM_Fault_MissingVCHeartbeat_update(out_msg.RSM_Fault_MissingVCHeartbeat_value);
            app_canRx_RSM_Fault_MissingFSMHeartbeat_update(out_msg.RSM_Fault_MissingFSMHeartbeat_value);
            app_canRx_RSM_Fault_MissingBMSHeartbeat_update(out_msg.RSM_Fault_MissingBMSHeartbeat_value);
            break;
        }
        case CAN_MSG_VC_VITALS_ID:
        {
            VC_Vitals_Signals out_msg;
            app_canUtils_VC_Vitals_unpack(msg->data, &out_msg);
            
            app_canRx_VC_Heartbeat_update(out_msg.VC_Heartbeat_value);
            app_canRx_VC_State_update(out_msg.VC_State_value);
            app_canRx_VC_BuzzerOn_update(out_msg.VC_BuzzerOn_value);
            app_canRx_VC_NumberOfCanDataLogs_update(out_msg.VC_NumberOfCanDataLogs_value);
            app_canRx_VC_CanLoggingRemainingErrors_update(out_msg.VC_CanLoggingRemainingErrors_value);
            break;
        }
        case CAN_MSG_VC_WARNINGS_ID:
        {
            VC_Warnings_Signals out_msg;
            app_canUtils_VC_Warnings_unpack(msg->data, &out_msg);
            
            app_canRx_VC_Warning_StackWaterMarkHighTask1Hz_update(out_msg.VC_Warning_StackWaterMarkHighTask1Hz_value);
            app_canRx_VC_Warning_StackWaterMarkHighTask100Hz_update(out_msg.VC_Warning_StackWaterMarkHighTask100Hz_value);
            app_canRx_VC_Warning_StackWaterMarkHighTask1kHz_update(out_msg.VC_Warning_StackWaterMarkHighTask1kHz_value);
            app_canRx_VC_Warning_StackWaterMarkHighTaskCanRx_update(out_msg.VC_Warning_StackWaterMarkHighTaskCanRx_value);
            app_canRx_VC_Warning_StackWaterMarkHighTaskCanTx_update(out_msg.VC_Warning_StackWaterMarkHighTaskCanTx_value);
            app_canRx_VC_Warning_WatchdogTimeout_update(out_msg.VC_Warning_WatchdogTimeout_value);
            app_canRx_VC_Warning_TxOverflow_update(out_msg.VC_Warning_TxOverflow_value);
            app_canRx_VC_Warning_RxOverflow_update(out_msg.VC_Warning_RxOverflow_value);
            app_canRx_VC_Warning_RegenNotAvailable_update(out_msg.VC_Warning_RegenNotAvailable_value);
            app_canRx_VC_Warning_ImuInitFailed_update(out_msg.VC_Warning_ImuInitFailed_value);
            app_canRx_VC_Warning_FlowRateInputOutOfRange_update(out_msg.VC_Warning_FlowRateInputOutOfRange_value);
            app_canRx_VC_Warning_BatteryRailOvercurrentFault_update(out_msg.VC_Warning_BatteryRailOvercurrentFault_value);
            app_canRx_VC_Warning_AccumulatorRailOvercurrentFault_update(out_msg.VC_Warning_AccumulatorRailOvercurrentFault_value);
            app_canRx_VC_Warning_LvChargeFault_update(out_msg.VC_Warning_LvChargeFault_value);
            app_canRx_VC_Warning_BoostControllerFault_update(out_msg.VC_Warning_BoostControllerFault_value);
            app_canRx_VC_Warning_HighNumberOfCanDataLogs_update(out_msg.VC_Warning_HighNumberOfCanDataLogs_value);
            app_canRx_VC_Warning_CanLoggingSdCardNotPresent_update(out_msg.VC_Warning_CanLoggingSdCardNotPresent_value);
            app_canRx_VC_Warning_CanLoggingErrored_update(out_msg.VC_Warning_CanLoggingErrored_value);
            app_canRx_VC_Warning_BrakeAppsDisagreement_update(out_msg.VC_Warning_BrakeAppsDisagreement_value);
            app_canRx_VC_Warning_SbgInitFailed_update(out_msg.VC_Warning_SbgInitFailed_value);
            break;
        }
        case CAN_MSG_VC_FAULTS_ID:
        {
            VC_Faults_Signals out_msg;
            app_canUtils_VC_Faults_unpack(msg->data, &out_msg);
            
            app_canRx_VC_Fault_MissingBMSHeartbeat_update(out_msg.VC_Fault_MissingBMSHeartbeat_value);
            app_canRx_VC_Fault_MissingFSMHeartbeat_update(out_msg.VC_Fault_MissingFSMHeartbeat_value);
            app_canRx_VC_Fault_MissingRSMHeartbeat_update(out_msg.VC_Fault_MissingRSMHeartbeat_value);
            app_canRx_VC_Fault_MissingCRITHeartbeat_update(out_msg.VC_Fault_MissingCRITHeartbeat_value);
            app_canRx_VC_Fault_LeftInverterFault_update(out_msg.VC_Fault_LeftInverterFault_value);
            app_canRx_VC_Fault_RightInverterFault_update(out_msg.VC_Fault_RightInverterFault_value);
            break;
        }
        default:
        {
            // Do nothing
            break;
        }
    }
}

