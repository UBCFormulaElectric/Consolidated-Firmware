/**
 * @note This file is auto-generated. Do not modify!
 */
// clang-format off


/* ------------------------------- Includes ------------------------------- */

#include <math.h>
#include <string.h>
#include "app_canRx.h"

/* ------------------------------- Structs -------------------------------- */

/**
 * Struct for holding all messages received by BMS (i.e. the RX table).
 */
typedef struct
{
    BRUSA_Vitals_Signals BRUSA_Vitals_signals;
    CRIT_Warnings_Signals CRIT_Warnings_signals;
    CRIT_Faults_Signals CRIT_Faults_signals;
    Debug_CanMode_Signals Debug_CanMode_signals;
    Debug_Charging_Signals Debug_Charging_signals;
    Debug_CellBalancing_Signals Debug_CellBalancing_signals;
    Debug_ResetSoc_Signals Debug_ResetSoc_signals;
    Debug_SetBSPDTestCurrent_Signals Debug_SetBSPDTestCurrent_signals;
    dimos_Warnings_Signals dimos_Warnings_signals;
    dimos_Faults_Signals dimos_Faults_signals;
    FSM_Warnings_Signals FSM_Warnings_signals;
    FSM_Faults_Signals FSM_Faults_signals;
    RSM_Warnings_Signals RSM_Warnings_signals;
    RSM_Faults_Signals RSM_Faults_signals;
    VC_Vitals_Signals VC_Vitals_signals;
    VC_Warnings_Signals VC_Warnings_signals;
    VC_Faults_Signals VC_Faults_signals;
} BMS_RxMsgs;


/* -------------------------- Private Variables --------------------------- */

static BMS_RxMsgs rx_table;

/* ------------------------- Function Definitions ------------------------- */

void app_canRx_init()
{
    memset(&rx_table, 0, sizeof(BMS_RxMsgs));
    app_canRx_BRUSA_IsConnected_update(CANSIG_BRUSA_VITALS_BRUSA_IS_CONNECTED_START_VAL);
    app_canRx_BRUSA_Error_update(CANSIG_BRUSA_VITALS_BRUSA_ERROR_START_VAL);
    app_canRx_BRUSA_PowerLimitedWarning_update(CANSIG_BRUSA_VITALS_BRUSA_POWER_LIMITED_WARNING_START_VAL);
    app_canRx_CRIT_Warning_StackWaterMarkHighTask1Hz_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_START_VAL);
    app_canRx_CRIT_Warning_StackWaterMarkHighTask100Hz_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_START_VAL);
    app_canRx_CRIT_Warning_StackWaterMarkHighTask1kHz_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_START_VAL);
    app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanRx_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_START_VAL);
    app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanTx_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_START_VAL);
    app_canRx_CRIT_Warning_WatchdogTimeout_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_WATCHDOG_TIMEOUT_START_VAL);
    app_canRx_CRIT_Warning_TxOverflow_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_TX_OVERFLOW_START_VAL);
    app_canRx_CRIT_Warning_RxOverflow_update(CANSIG_CRIT_WARNINGS_CRIT_WARNING_RX_OVERFLOW_START_VAL);
    app_canRx_CRIT_Fault_MissingBMSHeartbeat_update(CANSIG_CRIT_FAULTS_CRIT_FAULT_MISSING_BMS_HEARTBEAT_START_VAL);
    app_canRx_CRIT_Fault_MissingFSMHeartbeat_update(CANSIG_CRIT_FAULTS_CRIT_FAULT_MISSING_FSM_HEARTBEAT_START_VAL);
    app_canRx_CRIT_Fault_MissingRSMHeartbeat_update(CANSIG_CRIT_FAULTS_CRIT_FAULT_MISSING_RSM_HEARTBEAT_START_VAL);
    app_canRx_CRIT_Fault_MissingVCHeartbeat_update(CANSIG_CRIT_FAULTS_CRIT_FAULT_MISSING_VC_HEARTBEAT_START_VAL);
    app_canRx_Debug_EnableDebugMode_update(CANSIG_DEBUG_CAN_MODE_DEBUG_ENABLE_DEBUG_MODE_START_VAL);
    app_canRx_Debug_StartCharging_update(CANSIG_DEBUG_CHARGING_DEBUG_START_CHARGING_START_VAL);
    app_canRx_Debug_ClearChargerLatchedFault_update(CANSIG_DEBUG_CHARGING_DEBUG_CLEAR_CHARGER_LATCHED_FAULT_START_VAL);
    app_canRx_Debug_FaultEncounteredOverride_update(CANSIG_DEBUG_CHARGING_DEBUG_FAULT_ENCOUNTERED_OVERRIDE_START_VAL);
    app_canRx_Debug_ChargingCurrentOverride_update(CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_CURRENT_OVERRIDE_START_VAL);
    app_canRx_Debug_ChargingVoltageOverride_update(CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_VOLTAGE_OVERRIDE_START_VAL);
    app_canRx_Debug_ChargingCurrentTargetValue_update(CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_CURRENT_TARGET_VALUE_START_VAL);
    app_canRx_Debug_ChargingVoltageTargetValue_update(CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_VOLTAGE_TARGET_VALUE_START_VAL);
    app_canRx_Debug_CellBalancingRequest_update(CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_REQUEST_START_VAL);
    app_canRx_Debug_CellBalancingOverrideTarget_update(CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_TARGET_START_VAL);
    app_canRx_Debug_CellBalancingOverrideTargetValue_update(CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_TARGET_VALUE_START_VAL);
    app_canRx_Debug_CellBalancingOverridePWM_update(CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_START_VAL);
    app_canRx_Debug_CellBalancingOverridePWMFrequency_update(CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_FREQUENCY_START_VAL);
    app_canRx_Debug_CellBalancingOverridePWMDuty_update(CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_DUTY_START_VAL);
    app_canRx_Debug_ResetSoc_MinCellV_update(CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_MIN_CELL_V_START_VAL);
    app_canRx_Debug_ResetSoc_CustomEnable_update(CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_CUSTOM_ENABLE_START_VAL);
    app_canRx_Debug_ResetSoc_CustomVal_update(CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_CUSTOM_VAL_START_VAL);
    app_canRx_Debug_EnableTestCurrent_update(CANSIG_DEBUG_SET_BSPD_TEST_CURRENT_DEBUG_ENABLE_TEST_CURRENT_START_VAL);
    app_canRx_FSM_Warning_WatchdogTimeout_update(CANSIG_FSM_WARNINGS_FSM_WARNING_WATCHDOG_TIMEOUT_START_VAL);
    app_canRx_FSM_Warning_TxOverflow_update(CANSIG_FSM_WARNINGS_FSM_WARNING_TX_OVERFLOW_START_VAL);
    app_canRx_FSM_Warning_RxOverflow_update(CANSIG_FSM_WARNINGS_FSM_WARNING_RX_OVERFLOW_START_VAL);
    app_canRx_FSM_Warning_StackWaterMarkHighTask1Hz_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_START_VAL);
    app_canRx_FSM_Warning_StackWaterMarkHighTask100Hz_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_START_VAL);
    app_canRx_FSM_Warning_StackWaterMarkHighTask1kHz_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_START_VAL);
    app_canRx_FSM_Warning_StackWaterMarkHighTaskCanRx_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_START_VAL);
    app_canRx_FSM_Warning_StackWaterMarkHighTaskCanTx_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_START_VAL);
    app_canRx_FSM_Warning_SteeringAngleOCSC_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STEERING_ANGLE_OCSC_START_VAL);
    app_canRx_FSM_Warning_SteeringAngleOutOfRange_update(CANSIG_FSM_WARNINGS_FSM_WARNING_STEERING_ANGLE_OUT_OF_RANGE_START_VAL);
    app_canRx_FSM_Warning_LeftWheelSpeedOutOfRange_update(CANSIG_FSM_WARNINGS_FSM_WARNING_LEFT_WHEEL_SPEED_OUT_OF_RANGE_START_VAL);
    app_canRx_FSM_Warning_RightWheelSpeedOutOfRange_update(CANSIG_FSM_WARNINGS_FSM_WARNING_RIGHT_WHEEL_SPEED_OUT_OF_RANGE_START_VAL);
    app_canRx_FSM_Warning_AppsDisagreement_update(CANSIG_FSM_WARNINGS_FSM_WARNING_APPS_DISAGREEMENT_START_VAL);
    app_canRx_FSM_Warning_FrontBrakePressureOutOfRange_update(CANSIG_FSM_WARNINGS_FSM_WARNING_FRONT_BRAKE_PRESSURE_OUT_OF_RANGE_START_VAL);
    app_canRx_FSM_Warning_RearBrakePressureOutOfRange_update(CANSIG_FSM_WARNINGS_FSM_WARNING_REAR_BRAKE_PRESSURE_OUT_OF_RANGE_START_VAL);
    app_canRx_FSM_Warning_FrontBrakePressureOcSc_update(CANSIG_FSM_WARNINGS_FSM_WARNING_FRONT_BRAKE_PRESSURE_OC_SC_START_VAL);
    app_canRx_FSM_Warning_RearBrakePressureOcSc_update(CANSIG_FSM_WARNINGS_FSM_WARNING_REAR_BRAKE_PRESSURE_OC_SC_START_VAL);
    app_canRx_FSM_Warning_BrakeOcScNotOk_update(CANSIG_FSM_WARNINGS_FSM_WARNING_BRAKE_OC_SC_NOT_OK_START_VAL);
    app_canRx_FSM_Fault_PappsOCSC_update(CANSIG_FSM_FAULTS_FSM_FAULT_PAPPS_OCSC_START_VAL);
    app_canRx_FSM_Fault_SappsOCSC_update(CANSIG_FSM_FAULTS_FSM_FAULT_SAPPS_OCSC_START_VAL);
    app_canRx_RSM_Warning_WatchdogTimeout_update(CANSIG_RSM_WARNINGS_RSM_WARNING_WATCHDOG_TIMEOUT_START_VAL);
    app_canRx_RSM_Warning_TxOverflow_update(CANSIG_RSM_WARNINGS_RSM_WARNING_TX_OVERFLOW_START_VAL);
    app_canRx_RSM_Warning_RxOverflow_update(CANSIG_RSM_WARNINGS_RSM_WARNING_RX_OVERFLOW_START_VAL);
    app_canRx_RSM_Warning_StackWaterMarkHighTask1Hz_update(CANSIG_RSM_WARNINGS_RSM_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_START_VAL);
    app_canRx_RSM_Warning_StackWaterMarkHighTask100Hz_update(CANSIG_RSM_WARNINGS_RSM_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_START_VAL);
    app_canRx_RSM_Warning_StackWaterMarkHighTask1kHz_update(CANSIG_RSM_WARNINGS_RSM_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_START_VAL);
    app_canRx_RSM_Warning_StackWaterMarkHighTaskCanRx_update(CANSIG_RSM_WARNINGS_RSM_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_START_VAL);
    app_canRx_RSM_Warning_StackWaterMarkHighTaskCanTx_update(CANSIG_RSM_WARNINGS_RSM_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_START_VAL);
    app_canRx_RSM_Warning_FlowRateOutOfRange_update(CANSIG_RSM_WARNINGS_RSM_WARNING_FLOW_RATE_OUT_OF_RANGE_START_VAL);
    app_canRx_RSM_Warning_CoolantTempAOCSC_update(CANSIG_RSM_WARNINGS_RSM_WARNING_COOLANT_TEMP_AOCSC_START_VAL);
    app_canRx_RSM_Warning_CoolantTempBOCSC_update(CANSIG_RSM_WARNINGS_RSM_WARNING_COOLANT_TEMP_BOCSC_START_VAL);
    app_canRx_RSM_Warning_CoolantPressureAOCSC_update(CANSIG_RSM_WARNINGS_RSM_WARNING_COOLANT_PRESSURE_AOCSC_START_VAL);
    app_canRx_RSM_Warning_CoolantPressureBOCSC_update(CANSIG_RSM_WARNINGS_RSM_WARNING_COOLANT_PRESSURE_BOCSC_START_VAL);
    app_canRx_RSM_Warning_FlowMeterUnderflow_update(CANSIG_RSM_WARNINGS_RSM_WARNING_FLOW_METER_UNDERFLOW_START_VAL);
    app_canRx_RSM_Fault_MissingVCHeartbeat_update(CANSIG_RSM_FAULTS_RSM_FAULT_MISSING_VC_HEARTBEAT_START_VAL);
    app_canRx_RSM_Fault_MissingFSMHeartbeat_update(CANSIG_RSM_FAULTS_RSM_FAULT_MISSING_FSM_HEARTBEAT_START_VAL);
    app_canRx_RSM_Fault_MissingBMSHeartbeat_update(CANSIG_RSM_FAULTS_RSM_FAULT_MISSING_BMS_HEARTBEAT_START_VAL);
    app_canRx_VC_Heartbeat_update(CANSIG_VC_VITALS_VC_HEARTBEAT_START_VAL);
    app_canRx_VC_State_update(CANSIG_VC_VITALS_VC_STATE_START_VAL);
    app_canRx_VC_BuzzerOn_update(CANSIG_VC_VITALS_VC_BUZZER_ON_START_VAL);
    app_canRx_VC_NumberOfCanDataLogs_update(CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_START_VAL);
    app_canRx_VC_CanLoggingRemainingErrors_update(CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_START_VAL);
    app_canRx_VC_Warning_StackWaterMarkHighTask1Hz_update(CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1_HZ_START_VAL);
    app_canRx_VC_Warning_StackWaterMarkHighTask100Hz_update(CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK100_HZ_START_VAL);
    app_canRx_VC_Warning_StackWaterMarkHighTask1kHz_update(CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK1K_HZ_START_VAL);
    app_canRx_VC_Warning_StackWaterMarkHighTaskCanRx_update(CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_RX_START_VAL);
    app_canRx_VC_Warning_StackWaterMarkHighTaskCanTx_update(CANSIG_VC_WARNINGS_VC_WARNING_STACK_WATER_MARK_HIGH_TASK_CAN_TX_START_VAL);
    app_canRx_VC_Warning_WatchdogTimeout_update(CANSIG_VC_WARNINGS_VC_WARNING_WATCHDOG_TIMEOUT_START_VAL);
    app_canRx_VC_Warning_TxOverflow_update(CANSIG_VC_WARNINGS_VC_WARNING_TX_OVERFLOW_START_VAL);
    app_canRx_VC_Warning_RxOverflow_update(CANSIG_VC_WARNINGS_VC_WARNING_RX_OVERFLOW_START_VAL);
    app_canRx_VC_Warning_RegenNotAvailable_update(CANSIG_VC_WARNINGS_VC_WARNING_REGEN_NOT_AVAILABLE_START_VAL);
    app_canRx_VC_Warning_ImuInitFailed_update(CANSIG_VC_WARNINGS_VC_WARNING_IMU_INIT_FAILED_START_VAL);
    app_canRx_VC_Warning_FlowRateInputOutOfRange_update(CANSIG_VC_WARNINGS_VC_WARNING_FLOW_RATE_INPUT_OUT_OF_RANGE_START_VAL);
    app_canRx_VC_Warning_BatteryRailOvercurrentFault_update(CANSIG_VC_WARNINGS_VC_WARNING_BATTERY_RAIL_OVERCURRENT_FAULT_START_VAL);
    app_canRx_VC_Warning_AccumulatorRailOvercurrentFault_update(CANSIG_VC_WARNINGS_VC_WARNING_ACCUMULATOR_RAIL_OVERCURRENT_FAULT_START_VAL);
    app_canRx_VC_Warning_LvChargeFault_update(CANSIG_VC_WARNINGS_VC_WARNING_LV_CHARGE_FAULT_START_VAL);
    app_canRx_VC_Warning_BoostControllerFault_update(CANSIG_VC_WARNINGS_VC_WARNING_BOOST_CONTROLLER_FAULT_START_VAL);
    app_canRx_VC_Warning_HighNumberOfCanDataLogs_update(CANSIG_VC_WARNINGS_VC_WARNING_HIGH_NUMBER_OF_CAN_DATA_LOGS_START_VAL);
    app_canRx_VC_Warning_CanLoggingSdCardNotPresent_update(CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_SD_CARD_NOT_PRESENT_START_VAL);
    app_canRx_VC_Warning_CanLoggingErrored_update(CANSIG_VC_WARNINGS_VC_WARNING_CAN_LOGGING_ERRORED_START_VAL);
    app_canRx_VC_Warning_BrakeAppsDisagreement_update(CANSIG_VC_WARNINGS_VC_WARNING_BRAKE_APPS_DISAGREEMENT_START_VAL);
    app_canRx_VC_Warning_SbgInitFailed_update(CANSIG_VC_WARNINGS_VC_WARNING_SBG_INIT_FAILED_START_VAL);
    app_canRx_VC_Fault_MissingBMSHeartbeat_update(CANSIG_VC_FAULTS_VC_FAULT_MISSING_BMS_HEARTBEAT_START_VAL);
    app_canRx_VC_Fault_MissingFSMHeartbeat_update(CANSIG_VC_FAULTS_VC_FAULT_MISSING_FSM_HEARTBEAT_START_VAL);
    app_canRx_VC_Fault_MissingRSMHeartbeat_update(CANSIG_VC_FAULTS_VC_FAULT_MISSING_RSM_HEARTBEAT_START_VAL);
    app_canRx_VC_Fault_MissingCRITHeartbeat_update(CANSIG_VC_FAULTS_VC_FAULT_MISSING_CRIT_HEARTBEAT_START_VAL);
    app_canRx_VC_Fault_LeftInverterFault_update(CANSIG_VC_FAULTS_VC_FAULT_LEFT_INVERTER_FAULT_START_VAL);
    app_canRx_VC_Fault_RightInverterFault_update(CANSIG_VC_FAULTS_VC_FAULT_RIGHT_INVERTER_FAULT_START_VAL);
}

void app_canRx_BRUSA_IsConnected_update(bool value)
{
    rx_table.BRUSA_Vitals_signals.BRUSA_IsConnected_value = value;
}

void app_canRx_BRUSA_Error_update(bool value)
{
    rx_table.BRUSA_Vitals_signals.BRUSA_Error_value = value;
}

void app_canRx_BRUSA_PowerLimitedWarning_update(bool value)
{
    rx_table.BRUSA_Vitals_signals.BRUSA_PowerLimitedWarning_value = value;
}

void app_canRx_CRIT_Warning_StackWaterMarkHighTask1Hz_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTask1Hz_value = value;
}

void app_canRx_CRIT_Warning_StackWaterMarkHighTask100Hz_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTask100Hz_value = value;
}

void app_canRx_CRIT_Warning_StackWaterMarkHighTask1kHz_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTask1kHz_value = value;
}

void app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanRx_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTaskCanRx_value = value;
}

void app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanTx_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTaskCanTx_value = value;
}

void app_canRx_CRIT_Warning_WatchdogTimeout_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_WatchdogTimeout_value = value;
}

void app_canRx_CRIT_Warning_TxOverflow_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_TxOverflow_value = value;
}

void app_canRx_CRIT_Warning_RxOverflow_update(bool value)
{
    rx_table.CRIT_Warnings_signals.CRIT_Warning_RxOverflow_value = value;
}

void app_canRx_CRIT_Fault_MissingBMSHeartbeat_update(bool value)
{
    rx_table.CRIT_Faults_signals.CRIT_Fault_MissingBMSHeartbeat_value = value;
}

void app_canRx_CRIT_Fault_MissingFSMHeartbeat_update(bool value)
{
    rx_table.CRIT_Faults_signals.CRIT_Fault_MissingFSMHeartbeat_value = value;
}

void app_canRx_CRIT_Fault_MissingRSMHeartbeat_update(bool value)
{
    rx_table.CRIT_Faults_signals.CRIT_Fault_MissingRSMHeartbeat_value = value;
}

void app_canRx_CRIT_Fault_MissingVCHeartbeat_update(bool value)
{
    rx_table.CRIT_Faults_signals.CRIT_Fault_MissingVCHeartbeat_value = value;
}

void app_canRx_Debug_EnableDebugMode_update(bool value)
{
    rx_table.Debug_CanMode_signals.Debug_EnableDebugMode_value = value;
}

void app_canRx_Debug_StartCharging_update(bool value)
{
    rx_table.Debug_Charging_signals.Debug_StartCharging_value = value;
}

void app_canRx_Debug_ClearChargerLatchedFault_update(bool value)
{
    rx_table.Debug_Charging_signals.Debug_ClearChargerLatchedFault_value = value;
}

void app_canRx_Debug_FaultEncounteredOverride_update(bool value)
{
    rx_table.Debug_Charging_signals.Debug_FaultEncounteredOverride_value = value;
}

void app_canRx_Debug_ChargingCurrentOverride_update(bool value)
{
    rx_table.Debug_Charging_signals.Debug_ChargingCurrentOverride_value = value;
}

void app_canRx_Debug_ChargingVoltageOverride_update(bool value)
{
    rx_table.Debug_Charging_signals.Debug_ChargingVoltageOverride_value = value;
}

void app_canRx_Debug_ChargingCurrentTargetValue_update(float value)
{
    if (value == NAN)
    {
        return;
    }
    
    const float tmp = value < CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_CURRENT_TARGET_VALUE_MIN ? CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_CURRENT_TARGET_VALUE_MIN : value;
    rx_table.Debug_Charging_signals.Debug_ChargingCurrentTargetValue_value = tmp > CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_CURRENT_TARGET_VALUE_MAX ? CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_CURRENT_TARGET_VALUE_MAX : tmp;
}

void app_canRx_Debug_ChargingVoltageTargetValue_update(float value)
{
    if (value == NAN)
    {
        return;
    }
    
    const float tmp = value < CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_VOLTAGE_TARGET_VALUE_MIN ? CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_VOLTAGE_TARGET_VALUE_MIN : value;
    rx_table.Debug_Charging_signals.Debug_ChargingVoltageTargetValue_value = tmp > CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_VOLTAGE_TARGET_VALUE_MAX ? CANSIG_DEBUG_CHARGING_DEBUG_CHARGING_VOLTAGE_TARGET_VALUE_MAX : tmp;
}

void app_canRx_Debug_CellBalancingRequest_update(bool value)
{
    rx_table.Debug_CellBalancing_signals.Debug_CellBalancingRequest_value = value;
}

void app_canRx_Debug_CellBalancingOverrideTarget_update(bool value)
{
    rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverrideTarget_value = value;
}

void app_canRx_Debug_CellBalancingOverrideTargetValue_update(float value)
{
    if (value == NAN)
    {
        return;
    }
    
    const float tmp = value < CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_TARGET_VALUE_MIN ? CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_TARGET_VALUE_MIN : value;
    rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverrideTargetValue_value = tmp > CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_TARGET_VALUE_MAX ? CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_TARGET_VALUE_MAX : tmp;
}

void app_canRx_Debug_CellBalancingOverridePWM_update(bool value)
{
    rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverridePWM_value = value;
}

void app_canRx_Debug_CellBalancingOverridePWMFrequency_update(float value)
{
    if (value == NAN)
    {
        return;
    }
    
    const float tmp = value < CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_FREQUENCY_MIN ? CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_FREQUENCY_MIN : value;
    rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverridePWMFrequency_value = tmp > CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_FREQUENCY_MAX ? CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_FREQUENCY_MAX : tmp;
}

void app_canRx_Debug_CellBalancingOverridePWMDuty_update(uint32_t value)
{
    rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverridePWMDuty_value = (value > CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_DUTY_MAX) ? CANSIG_DEBUG_CELL_BALANCING_DEBUG_CELL_BALANCING_OVERRIDE_PWM_DUTY_MAX : value;
}

void app_canRx_Debug_ResetSoc_MinCellV_update(bool value)
{
    rx_table.Debug_ResetSoc_signals.Debug_ResetSoc_MinCellV_value = value;
}

void app_canRx_Debug_ResetSoc_CustomEnable_update(bool value)
{
    rx_table.Debug_ResetSoc_signals.Debug_ResetSoc_CustomEnable_value = value;
}

void app_canRx_Debug_ResetSoc_CustomVal_update(float value)
{
    if (value == NAN)
    {
        return;
    }
    
    const float tmp = value < CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_CUSTOM_VAL_MIN ? CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_CUSTOM_VAL_MIN : value;
    rx_table.Debug_ResetSoc_signals.Debug_ResetSoc_CustomVal_value = tmp > CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_CUSTOM_VAL_MAX ? CANSIG_DEBUG_RESET_SOC_DEBUG_RESET_SOC_CUSTOM_VAL_MAX : tmp;
}

void app_canRx_Debug_EnableTestCurrent_update(bool value)
{
    rx_table.Debug_SetBSPDTestCurrent_signals.Debug_EnableTestCurrent_value = value;
}

void app_canRx_FSM_Warning_WatchdogTimeout_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_WatchdogTimeout_value = value;
}

void app_canRx_FSM_Warning_TxOverflow_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_TxOverflow_value = value;
}

void app_canRx_FSM_Warning_RxOverflow_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_RxOverflow_value = value;
}

void app_canRx_FSM_Warning_StackWaterMarkHighTask1Hz_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTask1Hz_value = value;
}

void app_canRx_FSM_Warning_StackWaterMarkHighTask100Hz_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTask100Hz_value = value;
}

void app_canRx_FSM_Warning_StackWaterMarkHighTask1kHz_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTask1kHz_value = value;
}

void app_canRx_FSM_Warning_StackWaterMarkHighTaskCanRx_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTaskCanRx_value = value;
}

void app_canRx_FSM_Warning_StackWaterMarkHighTaskCanTx_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTaskCanTx_value = value;
}

void app_canRx_FSM_Warning_SteeringAngleOCSC_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_SteeringAngleOCSC_value = value;
}

void app_canRx_FSM_Warning_SteeringAngleOutOfRange_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_SteeringAngleOutOfRange_value = value;
}

void app_canRx_FSM_Warning_LeftWheelSpeedOutOfRange_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_LeftWheelSpeedOutOfRange_value = value;
}

void app_canRx_FSM_Warning_RightWheelSpeedOutOfRange_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_RightWheelSpeedOutOfRange_value = value;
}

void app_canRx_FSM_Warning_AppsDisagreement_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_AppsDisagreement_value = value;
}

void app_canRx_FSM_Warning_FrontBrakePressureOutOfRange_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_FrontBrakePressureOutOfRange_value = value;
}

void app_canRx_FSM_Warning_RearBrakePressureOutOfRange_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_RearBrakePressureOutOfRange_value = value;
}

void app_canRx_FSM_Warning_FrontBrakePressureOcSc_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_FrontBrakePressureOcSc_value = value;
}

void app_canRx_FSM_Warning_RearBrakePressureOcSc_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_RearBrakePressureOcSc_value = value;
}

void app_canRx_FSM_Warning_BrakeOcScNotOk_update(bool value)
{
    rx_table.FSM_Warnings_signals.FSM_Warning_BrakeOcScNotOk_value = value;
}

void app_canRx_FSM_Fault_PappsOCSC_update(bool value)
{
    rx_table.FSM_Faults_signals.FSM_Fault_PappsOCSC_value = value;
}

void app_canRx_FSM_Fault_SappsOCSC_update(bool value)
{
    rx_table.FSM_Faults_signals.FSM_Fault_SappsOCSC_value = value;
}

void app_canRx_RSM_Warning_WatchdogTimeout_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_WatchdogTimeout_value = value;
}

void app_canRx_RSM_Warning_TxOverflow_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_TxOverflow_value = value;
}

void app_canRx_RSM_Warning_RxOverflow_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_RxOverflow_value = value;
}

void app_canRx_RSM_Warning_StackWaterMarkHighTask1Hz_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTask1Hz_value = value;
}

void app_canRx_RSM_Warning_StackWaterMarkHighTask100Hz_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTask100Hz_value = value;
}

void app_canRx_RSM_Warning_StackWaterMarkHighTask1kHz_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTask1kHz_value = value;
}

void app_canRx_RSM_Warning_StackWaterMarkHighTaskCanRx_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTaskCanRx_value = value;
}

void app_canRx_RSM_Warning_StackWaterMarkHighTaskCanTx_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTaskCanTx_value = value;
}

void app_canRx_RSM_Warning_FlowRateOutOfRange_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_FlowRateOutOfRange_value = value;
}

void app_canRx_RSM_Warning_CoolantTempAOCSC_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_CoolantTempAOCSC_value = value;
}

void app_canRx_RSM_Warning_CoolantTempBOCSC_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_CoolantTempBOCSC_value = value;
}

void app_canRx_RSM_Warning_CoolantPressureAOCSC_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_CoolantPressureAOCSC_value = value;
}

void app_canRx_RSM_Warning_CoolantPressureBOCSC_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_CoolantPressureBOCSC_value = value;
}

void app_canRx_RSM_Warning_FlowMeterUnderflow_update(bool value)
{
    rx_table.RSM_Warnings_signals.RSM_Warning_FlowMeterUnderflow_value = value;
}

void app_canRx_RSM_Fault_MissingVCHeartbeat_update(bool value)
{
    rx_table.RSM_Faults_signals.RSM_Fault_MissingVCHeartbeat_value = value;
}

void app_canRx_RSM_Fault_MissingFSMHeartbeat_update(bool value)
{
    rx_table.RSM_Faults_signals.RSM_Fault_MissingFSMHeartbeat_value = value;
}

void app_canRx_RSM_Fault_MissingBMSHeartbeat_update(bool value)
{
    rx_table.RSM_Faults_signals.RSM_Fault_MissingBMSHeartbeat_value = value;
}

void app_canRx_VC_Heartbeat_update(bool value)
{
    rx_table.VC_Vitals_signals.VC_Heartbeat_value = value;
}

void app_canRx_VC_State_update(VcState value)
{
    rx_table.VC_Vitals_signals.VC_State_value = (value > CANSIG_VC_VITALS_VC_STATE_MAX) ? CANSIG_VC_VITALS_VC_STATE_MAX : value;
}

void app_canRx_VC_BuzzerOn_update(bool value)
{
    rx_table.VC_Vitals_signals.VC_BuzzerOn_value = value;
}

void app_canRx_VC_NumberOfCanDataLogs_update(uint32_t value)
{
    rx_table.VC_Vitals_signals.VC_NumberOfCanDataLogs_value = (value > CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_MAX) ? CANSIG_VC_VITALS_VC_NUMBER_OF_CAN_DATA_LOGS_MAX : value;
}

void app_canRx_VC_CanLoggingRemainingErrors_update(uint32_t value)
{
    rx_table.VC_Vitals_signals.VC_CanLoggingRemainingErrors_value = (value > CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_MAX) ? CANSIG_VC_VITALS_VC_CAN_LOGGING_REMAINING_ERRORS_MAX : value;
}

void app_canRx_VC_Warning_StackWaterMarkHighTask1Hz_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTask1Hz_value = value;
}

void app_canRx_VC_Warning_StackWaterMarkHighTask100Hz_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTask100Hz_value = value;
}

void app_canRx_VC_Warning_StackWaterMarkHighTask1kHz_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTask1kHz_value = value;
}

void app_canRx_VC_Warning_StackWaterMarkHighTaskCanRx_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTaskCanRx_value = value;
}

void app_canRx_VC_Warning_StackWaterMarkHighTaskCanTx_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTaskCanTx_value = value;
}

void app_canRx_VC_Warning_WatchdogTimeout_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_WatchdogTimeout_value = value;
}

void app_canRx_VC_Warning_TxOverflow_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_TxOverflow_value = value;
}

void app_canRx_VC_Warning_RxOverflow_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_RxOverflow_value = value;
}

void app_canRx_VC_Warning_RegenNotAvailable_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_RegenNotAvailable_value = value;
}

void app_canRx_VC_Warning_ImuInitFailed_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_ImuInitFailed_value = value;
}

void app_canRx_VC_Warning_FlowRateInputOutOfRange_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_FlowRateInputOutOfRange_value = value;
}

void app_canRx_VC_Warning_BatteryRailOvercurrentFault_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_BatteryRailOvercurrentFault_value = value;
}

void app_canRx_VC_Warning_AccumulatorRailOvercurrentFault_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_AccumulatorRailOvercurrentFault_value = value;
}

void app_canRx_VC_Warning_LvChargeFault_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_LvChargeFault_value = value;
}

void app_canRx_VC_Warning_BoostControllerFault_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_BoostControllerFault_value = value;
}

void app_canRx_VC_Warning_HighNumberOfCanDataLogs_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_HighNumberOfCanDataLogs_value = value;
}

void app_canRx_VC_Warning_CanLoggingSdCardNotPresent_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_CanLoggingSdCardNotPresent_value = value;
}

void app_canRx_VC_Warning_CanLoggingErrored_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_CanLoggingErrored_value = value;
}

void app_canRx_VC_Warning_BrakeAppsDisagreement_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_BrakeAppsDisagreement_value = value;
}

void app_canRx_VC_Warning_SbgInitFailed_update(bool value)
{
    rx_table.VC_Warnings_signals.VC_Warning_SbgInitFailed_value = value;
}

void app_canRx_VC_Fault_MissingBMSHeartbeat_update(bool value)
{
    rx_table.VC_Faults_signals.VC_Fault_MissingBMSHeartbeat_value = value;
}

void app_canRx_VC_Fault_MissingFSMHeartbeat_update(bool value)
{
    rx_table.VC_Faults_signals.VC_Fault_MissingFSMHeartbeat_value = value;
}

void app_canRx_VC_Fault_MissingRSMHeartbeat_update(bool value)
{
    rx_table.VC_Faults_signals.VC_Fault_MissingRSMHeartbeat_value = value;
}

void app_canRx_VC_Fault_MissingCRITHeartbeat_update(bool value)
{
    rx_table.VC_Faults_signals.VC_Fault_MissingCRITHeartbeat_value = value;
}

void app_canRx_VC_Fault_LeftInverterFault_update(bool value)
{
    rx_table.VC_Faults_signals.VC_Fault_LeftInverterFault_value = value;
}

void app_canRx_VC_Fault_RightInverterFault_update(bool value)
{
    rx_table.VC_Faults_signals.VC_Fault_RightInverterFault_value = value;
}

bool app_canRx_BRUSA_IsConnected_get()
{
    return rx_table.BRUSA_Vitals_signals.BRUSA_IsConnected_value;
}

bool app_canRx_BRUSA_Error_get()
{
    return rx_table.BRUSA_Vitals_signals.BRUSA_Error_value;
}

bool app_canRx_BRUSA_PowerLimitedWarning_get()
{
    return rx_table.BRUSA_Vitals_signals.BRUSA_PowerLimitedWarning_value;
}

bool app_canRx_CRIT_Warning_StackWaterMarkHighTask1Hz_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTask1Hz_value;
}

bool app_canRx_CRIT_Warning_StackWaterMarkHighTask100Hz_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTask100Hz_value;
}

bool app_canRx_CRIT_Warning_StackWaterMarkHighTask1kHz_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTask1kHz_value;
}

bool app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanRx_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTaskCanRx_value;
}

bool app_canRx_CRIT_Warning_StackWaterMarkHighTaskCanTx_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_StackWaterMarkHighTaskCanTx_value;
}

bool app_canRx_CRIT_Warning_WatchdogTimeout_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_WatchdogTimeout_value;
}

bool app_canRx_CRIT_Warning_TxOverflow_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_TxOverflow_value;
}

bool app_canRx_CRIT_Warning_RxOverflow_get()
{
    return rx_table.CRIT_Warnings_signals.CRIT_Warning_RxOverflow_value;
}

bool app_canRx_CRIT_Fault_MissingBMSHeartbeat_get()
{
    return rx_table.CRIT_Faults_signals.CRIT_Fault_MissingBMSHeartbeat_value;
}

bool app_canRx_CRIT_Fault_MissingFSMHeartbeat_get()
{
    return rx_table.CRIT_Faults_signals.CRIT_Fault_MissingFSMHeartbeat_value;
}

bool app_canRx_CRIT_Fault_MissingRSMHeartbeat_get()
{
    return rx_table.CRIT_Faults_signals.CRIT_Fault_MissingRSMHeartbeat_value;
}

bool app_canRx_CRIT_Fault_MissingVCHeartbeat_get()
{
    return rx_table.CRIT_Faults_signals.CRIT_Fault_MissingVCHeartbeat_value;
}

bool app_canRx_Debug_EnableDebugMode_get()
{
    return rx_table.Debug_CanMode_signals.Debug_EnableDebugMode_value;
}

bool app_canRx_Debug_StartCharging_get()
{
    return rx_table.Debug_Charging_signals.Debug_StartCharging_value;
}

bool app_canRx_Debug_ClearChargerLatchedFault_get()
{
    return rx_table.Debug_Charging_signals.Debug_ClearChargerLatchedFault_value;
}

bool app_canRx_Debug_FaultEncounteredOverride_get()
{
    return rx_table.Debug_Charging_signals.Debug_FaultEncounteredOverride_value;
}

bool app_canRx_Debug_ChargingCurrentOverride_get()
{
    return rx_table.Debug_Charging_signals.Debug_ChargingCurrentOverride_value;
}

bool app_canRx_Debug_ChargingVoltageOverride_get()
{
    return rx_table.Debug_Charging_signals.Debug_ChargingVoltageOverride_value;
}

float app_canRx_Debug_ChargingCurrentTargetValue_get()
{
    return rx_table.Debug_Charging_signals.Debug_ChargingCurrentTargetValue_value;
}

float app_canRx_Debug_ChargingVoltageTargetValue_get()
{
    return rx_table.Debug_Charging_signals.Debug_ChargingVoltageTargetValue_value;
}

bool app_canRx_Debug_CellBalancingRequest_get()
{
    return rx_table.Debug_CellBalancing_signals.Debug_CellBalancingRequest_value;
}

bool app_canRx_Debug_CellBalancingOverrideTarget_get()
{
    return rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverrideTarget_value;
}

float app_canRx_Debug_CellBalancingOverrideTargetValue_get()
{
    return rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverrideTargetValue_value;
}

bool app_canRx_Debug_CellBalancingOverridePWM_get()
{
    return rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverridePWM_value;
}

float app_canRx_Debug_CellBalancingOverridePWMFrequency_get()
{
    return rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverridePWMFrequency_value;
}

uint32_t app_canRx_Debug_CellBalancingOverridePWMDuty_get()
{
    return rx_table.Debug_CellBalancing_signals.Debug_CellBalancingOverridePWMDuty_value;
}

bool app_canRx_Debug_ResetSoc_MinCellV_get()
{
    return rx_table.Debug_ResetSoc_signals.Debug_ResetSoc_MinCellV_value;
}

bool app_canRx_Debug_ResetSoc_CustomEnable_get()
{
    return rx_table.Debug_ResetSoc_signals.Debug_ResetSoc_CustomEnable_value;
}

float app_canRx_Debug_ResetSoc_CustomVal_get()
{
    return rx_table.Debug_ResetSoc_signals.Debug_ResetSoc_CustomVal_value;
}

bool app_canRx_Debug_EnableTestCurrent_get()
{
    return rx_table.Debug_SetBSPDTestCurrent_signals.Debug_EnableTestCurrent_value;
}

bool app_canRx_FSM_Warning_WatchdogTimeout_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_WatchdogTimeout_value;
}

bool app_canRx_FSM_Warning_TxOverflow_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_TxOverflow_value;
}

bool app_canRx_FSM_Warning_RxOverflow_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_RxOverflow_value;
}

bool app_canRx_FSM_Warning_StackWaterMarkHighTask1Hz_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTask1Hz_value;
}

bool app_canRx_FSM_Warning_StackWaterMarkHighTask100Hz_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTask100Hz_value;
}

bool app_canRx_FSM_Warning_StackWaterMarkHighTask1kHz_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTask1kHz_value;
}

bool app_canRx_FSM_Warning_StackWaterMarkHighTaskCanRx_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTaskCanRx_value;
}

bool app_canRx_FSM_Warning_StackWaterMarkHighTaskCanTx_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_StackWaterMarkHighTaskCanTx_value;
}

bool app_canRx_FSM_Warning_SteeringAngleOCSC_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_SteeringAngleOCSC_value;
}

bool app_canRx_FSM_Warning_SteeringAngleOutOfRange_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_SteeringAngleOutOfRange_value;
}

bool app_canRx_FSM_Warning_LeftWheelSpeedOutOfRange_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_LeftWheelSpeedOutOfRange_value;
}

bool app_canRx_FSM_Warning_RightWheelSpeedOutOfRange_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_RightWheelSpeedOutOfRange_value;
}

bool app_canRx_FSM_Warning_AppsDisagreement_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_AppsDisagreement_value;
}

bool app_canRx_FSM_Warning_FrontBrakePressureOutOfRange_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_FrontBrakePressureOutOfRange_value;
}

bool app_canRx_FSM_Warning_RearBrakePressureOutOfRange_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_RearBrakePressureOutOfRange_value;
}

bool app_canRx_FSM_Warning_FrontBrakePressureOcSc_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_FrontBrakePressureOcSc_value;
}

bool app_canRx_FSM_Warning_RearBrakePressureOcSc_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_RearBrakePressureOcSc_value;
}

bool app_canRx_FSM_Warning_BrakeOcScNotOk_get()
{
    return rx_table.FSM_Warnings_signals.FSM_Warning_BrakeOcScNotOk_value;
}

bool app_canRx_FSM_Fault_PappsOCSC_get()
{
    return rx_table.FSM_Faults_signals.FSM_Fault_PappsOCSC_value;
}

bool app_canRx_FSM_Fault_SappsOCSC_get()
{
    return rx_table.FSM_Faults_signals.FSM_Fault_SappsOCSC_value;
}

bool app_canRx_RSM_Warning_WatchdogTimeout_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_WatchdogTimeout_value;
}

bool app_canRx_RSM_Warning_TxOverflow_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_TxOverflow_value;
}

bool app_canRx_RSM_Warning_RxOverflow_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_RxOverflow_value;
}

bool app_canRx_RSM_Warning_StackWaterMarkHighTask1Hz_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTask1Hz_value;
}

bool app_canRx_RSM_Warning_StackWaterMarkHighTask100Hz_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTask100Hz_value;
}

bool app_canRx_RSM_Warning_StackWaterMarkHighTask1kHz_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTask1kHz_value;
}

bool app_canRx_RSM_Warning_StackWaterMarkHighTaskCanRx_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTaskCanRx_value;
}

bool app_canRx_RSM_Warning_StackWaterMarkHighTaskCanTx_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_StackWaterMarkHighTaskCanTx_value;
}

bool app_canRx_RSM_Warning_FlowRateOutOfRange_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_FlowRateOutOfRange_value;
}

bool app_canRx_RSM_Warning_CoolantTempAOCSC_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_CoolantTempAOCSC_value;
}

bool app_canRx_RSM_Warning_CoolantTempBOCSC_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_CoolantTempBOCSC_value;
}

bool app_canRx_RSM_Warning_CoolantPressureAOCSC_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_CoolantPressureAOCSC_value;
}

bool app_canRx_RSM_Warning_CoolantPressureBOCSC_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_CoolantPressureBOCSC_value;
}

bool app_canRx_RSM_Warning_FlowMeterUnderflow_get()
{
    return rx_table.RSM_Warnings_signals.RSM_Warning_FlowMeterUnderflow_value;
}

bool app_canRx_RSM_Fault_MissingVCHeartbeat_get()
{
    return rx_table.RSM_Faults_signals.RSM_Fault_MissingVCHeartbeat_value;
}

bool app_canRx_RSM_Fault_MissingFSMHeartbeat_get()
{
    return rx_table.RSM_Faults_signals.RSM_Fault_MissingFSMHeartbeat_value;
}

bool app_canRx_RSM_Fault_MissingBMSHeartbeat_get()
{
    return rx_table.RSM_Faults_signals.RSM_Fault_MissingBMSHeartbeat_value;
}

bool app_canRx_VC_Heartbeat_get()
{
    return rx_table.VC_Vitals_signals.VC_Heartbeat_value;
}

VcState app_canRx_VC_State_get()
{
    return rx_table.VC_Vitals_signals.VC_State_value;
}

bool app_canRx_VC_BuzzerOn_get()
{
    return rx_table.VC_Vitals_signals.VC_BuzzerOn_value;
}

uint32_t app_canRx_VC_NumberOfCanDataLogs_get()
{
    return rx_table.VC_Vitals_signals.VC_NumberOfCanDataLogs_value;
}

uint32_t app_canRx_VC_CanLoggingRemainingErrors_get()
{
    return rx_table.VC_Vitals_signals.VC_CanLoggingRemainingErrors_value;
}

bool app_canRx_VC_Warning_StackWaterMarkHighTask1Hz_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTask1Hz_value;
}

bool app_canRx_VC_Warning_StackWaterMarkHighTask100Hz_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTask100Hz_value;
}

bool app_canRx_VC_Warning_StackWaterMarkHighTask1kHz_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTask1kHz_value;
}

bool app_canRx_VC_Warning_StackWaterMarkHighTaskCanRx_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTaskCanRx_value;
}

bool app_canRx_VC_Warning_StackWaterMarkHighTaskCanTx_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_StackWaterMarkHighTaskCanTx_value;
}

bool app_canRx_VC_Warning_WatchdogTimeout_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_WatchdogTimeout_value;
}

bool app_canRx_VC_Warning_TxOverflow_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_TxOverflow_value;
}

bool app_canRx_VC_Warning_RxOverflow_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_RxOverflow_value;
}

bool app_canRx_VC_Warning_RegenNotAvailable_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_RegenNotAvailable_value;
}

bool app_canRx_VC_Warning_ImuInitFailed_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_ImuInitFailed_value;
}

bool app_canRx_VC_Warning_FlowRateInputOutOfRange_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_FlowRateInputOutOfRange_value;
}

bool app_canRx_VC_Warning_BatteryRailOvercurrentFault_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_BatteryRailOvercurrentFault_value;
}

bool app_canRx_VC_Warning_AccumulatorRailOvercurrentFault_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_AccumulatorRailOvercurrentFault_value;
}

bool app_canRx_VC_Warning_LvChargeFault_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_LvChargeFault_value;
}

bool app_canRx_VC_Warning_BoostControllerFault_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_BoostControllerFault_value;
}

bool app_canRx_VC_Warning_HighNumberOfCanDataLogs_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_HighNumberOfCanDataLogs_value;
}

bool app_canRx_VC_Warning_CanLoggingSdCardNotPresent_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_CanLoggingSdCardNotPresent_value;
}

bool app_canRx_VC_Warning_CanLoggingErrored_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_CanLoggingErrored_value;
}

bool app_canRx_VC_Warning_BrakeAppsDisagreement_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_BrakeAppsDisagreement_value;
}

bool app_canRx_VC_Warning_SbgInitFailed_get()
{
    return rx_table.VC_Warnings_signals.VC_Warning_SbgInitFailed_value;
}

bool app_canRx_VC_Fault_MissingBMSHeartbeat_get()
{
    return rx_table.VC_Faults_signals.VC_Fault_MissingBMSHeartbeat_value;
}

bool app_canRx_VC_Fault_MissingFSMHeartbeat_get()
{
    return rx_table.VC_Faults_signals.VC_Fault_MissingFSMHeartbeat_value;
}

bool app_canRx_VC_Fault_MissingRSMHeartbeat_get()
{
    return rx_table.VC_Faults_signals.VC_Fault_MissingRSMHeartbeat_value;
}

bool app_canRx_VC_Fault_MissingCRITHeartbeat_get()
{
    return rx_table.VC_Faults_signals.VC_Fault_MissingCRITHeartbeat_value;
}

bool app_canRx_VC_Fault_LeftInverterFault_get()
{
    return rx_table.VC_Faults_signals.VC_Fault_LeftInverterFault_value;
}

bool app_canRx_VC_Fault_RightInverterFault_get()
{
    return rx_table.VC_Faults_signals.VC_Fault_RightInverterFault_value;
}

